
`line 1 "/tmp/lm32-customizer/tmp.v"




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  

`line 33 "src/lm32_include.v"

  
`line 34 "src/lm32_include.v"



  
`line 1 "/tmp/lm32-customizer/system_conf.v"

`line 1 "/tmp/lm32-customizer/system_conf.v"
  
`line 1 "/tmp/lm32-customizer/system_conf.v"

  
`line 2 "/tmp/lm32-customizer/system_conf.v"

  
`line 3 "/tmp/lm32-customizer/system_conf.v"

  
`line 4 "/tmp/lm32-customizer/system_conf.v"

  
`line 5 "/tmp/lm32-customizer/system_conf.v"

  
`line 6 "/tmp/lm32-customizer/system_conf.v"

  
`line 7 "/tmp/lm32-customizer/system_conf.v"

  
`line 8 "/tmp/lm32-customizer/system_conf.v"

  
`line 9 "/tmp/lm32-customizer/system_conf.v"

  
`line 10 "/tmp/lm32-customizer/system_conf.v"

  
`line 11 "/tmp/lm32-customizer/system_conf.v"

  
`line 12 "/tmp/lm32-customizer/system_conf.v"

	  
`line 13 "/tmp/lm32-customizer/system_conf.v"

	  
`line 14 "/tmp/lm32-customizer/system_conf.v"

	  
`line 15 "/tmp/lm32-customizer/system_conf.v"

	  
`line 16 "/tmp/lm32-customizer/system_conf.v"

	  
`line 17 "/tmp/lm32-customizer/system_conf.v"

	  
`line 18 "/tmp/lm32-customizer/system_conf.v"

	  
`line 19 "/tmp/lm32-customizer/system_conf.v"

	  
`line 20 "/tmp/lm32-customizer/system_conf.v"

	  
`line 21 "/tmp/lm32-customizer/system_conf.v"

	  
`line 22 "/tmp/lm32-customizer/system_conf.v"

	  
`line 23 "/tmp/lm32-customizer/system_conf.v"

	  
`line 24 "/tmp/lm32-customizer/system_conf.v"

	  
	 
	 
	 
	 
	  
	  
	
`line 32 "/tmp/lm32-customizer/system_conf.v"

 
`line 33 "/tmp/lm32-customizer/system_conf.v"


`line 34 "src/lm32_include.v"


  

`line 40 "src/lm32_include.v"

  
`line 41 "src/lm32_include.v"

  
`line 42 "src/lm32_include.v"

  
`line 43 "src/lm32_include.v"

  
`line 44 "src/lm32_include.v"

 
`line 45 "src/lm32_include.v"



  
`line 48 "src/lm32_include.v"

  
`line 49 "src/lm32_include.v"



  
`line 52 "src/lm32_include.v"

  
`line 53 "src/lm32_include.v"

  
`line 54 "src/lm32_include.v"

  
`line 55 "src/lm32_include.v"

  
`line 56 "src/lm32_include.v"

  
`line 57 "src/lm32_include.v"



  
`line 60 "src/lm32_include.v"

  
`line 61 "src/lm32_include.v"

  
`line 62 "src/lm32_include.v"



  
`line 65 "src/lm32_include.v"

  
`line 66 "src/lm32_include.v"

  
`line 67 "src/lm32_include.v"



  
`line 70 "src/lm32_include.v"

  
`line 71 "src/lm32_include.v"

 
 
                    

                    


`line 78 "src/lm32_include.v"

  
`line 79 "src/lm32_include.v"



  
`line 82 "src/lm32_include.v"

  
`line 83 "src/lm32_include.v"



  
`line 86 "src/lm32_include.v"

  
`line 87 "src/lm32_include.v"



  
`line 90 "src/lm32_include.v"

  
`line 91 "src/lm32_include.v"



  
 

`line 96 "src/lm32_include.v"

  
 

`line 99 "src/lm32_include.v"

 
`line 100 "src/lm32_include.v"



  
 

`line 105 "src/lm32_include.v"

  
 

`line 108 "src/lm32_include.v"

 
`line 109 "src/lm32_include.v"

 
`line 110 "src/lm32_include.v"



  
`line 113 "src/lm32_include.v"

  
`line 114 "src/lm32_include.v"

  
 
 

 


`line 121 "src/lm32_include.v"
 


  
`line 124 "src/lm32_include.v"

  
`line 125 "src/lm32_include.v"

 
 
 


`line 130 "src/lm32_include.v"



  
`line 133 "src/lm32_include.v"

  
`line 134 "src/lm32_include.v"

 
`line 135 "src/lm32_include.v"

  
 

`line 138 "src/lm32_include.v"

  
 

`line 141 "src/lm32_include.v"



  
`line 144 "src/lm32_include.v"

  
`line 145 "src/lm32_include.v"

 
`line 146 "src/lm32_include.v"

  
 

`line 149 "src/lm32_include.v"



  
`line 152 "src/lm32_include.v"



  
`line 155 "src/lm32_include.v"



  
`line 158 "src/lm32_include.v"

  
`line 159 "src/lm32_include.v"

  
`line 160 "src/lm32_include.v"

  
`line 161 "src/lm32_include.v"

  
`line 162 "src/lm32_include.v"

  
`line 163 "src/lm32_include.v"

  
`line 164 "src/lm32_include.v"

  
`line 165 "src/lm32_include.v"

  
`line 166 "src/lm32_include.v"

  
`line 167 "src/lm32_include.v"



  
`line 170 "src/lm32_include.v"

  
`line 171 "src/lm32_include.v"

  
`line 172 "src/lm32_include.v"

  
`line 173 "src/lm32_include.v"

  
`line 174 "src/lm32_include.v"

  
`line 175 "src/lm32_include.v"



  
                   
                     

`line 181 "src/lm32_include.v"

  
                   
                     

`line 185 "src/lm32_include.v"

  
`line 186 "src/lm32_include.v"

  
`line 187 "src/lm32_include.v"

 
`line 188 "src/lm32_include.v"

 
`line 189 "src/lm32_include.v"



  
`line 192 "src/lm32_include.v"

  
`line 193 "src/lm32_include.v"

  
`line 194 "src/lm32_include.v"

  
`line 195 "src/lm32_include.v"

  
`line 196 "src/lm32_include.v"

  
`line 197 "src/lm32_include.v"

  
`line 198 "src/lm32_include.v"

  
`line 199 "src/lm32_include.v"

  
                      
                    

`line 203 "src/lm32_include.v"

  
`line 204 "src/lm32_include.v"

  
                     
                     

`line 208 "src/lm32_include.v"

  
                     
                     
                     
                     
                     
                     
                     
                     

`line 218 "src/lm32_include.v"
 


  
`line 221 "src/lm32_include.v"

  
`line 222 "src/lm32_include.v"

  
`line 223 "src/lm32_include.v"

  
`line 224 "src/lm32_include.v"

  
`line 225 "src/lm32_include.v"



  
`line 228 "src/lm32_include.v"

  
`line 229 "src/lm32_include.v"

  
`line 230 "src/lm32_include.v"

  
`line 231 "src/lm32_include.v"

  
`line 232 "src/lm32_include.v"

  
`line 233 "src/lm32_include.v"

  
`line 234 "src/lm32_include.v"

  
`line 235 "src/lm32_include.v"

  
`line 236 "src/lm32_include.v"

  
`line 237 "src/lm32_include.v"




  
`line 241 "src/lm32_include.v"

  
`line 242 "src/lm32_include.v"

  
`line 243 "src/lm32_include.v"


  
`line 245 "src/lm32_include.v"

  
`line 246 "src/lm32_include.v"

  
`line 247 "src/lm32_include.v"

  
`line 248 "src/lm32_include.v"


  
`line 250 "src/lm32_include.v"

  
`line 251 "src/lm32_include.v"



  
`line 254 "src/lm32_include.v"

  
`line 255 "src/lm32_include.v"

 
 
 


`line 260 "src/lm32_include.v"







  
`line 267 "src/lm32_include.v"

  
`line 268 "src/lm32_include.v"

  
`line 269 "src/lm32_include.v"







  
`line 276 "src/lm32_include.v"

  
`line 277 "src/lm32_include.v"

  
`line 278 "src/lm32_include.v"

  
`line 279 "src/lm32_include.v"



  
`line 282 "src/lm32_include.v"

  
`line 283 "src/lm32_include.v"

  
`line 284 "src/lm32_include.v"

  
`line 285 "src/lm32_include.v"



  
`line 288 "src/lm32_include.v"

  
`line 289 "src/lm32_include.v"



  
`line 292 "src/lm32_include.v"







  
`line 299 "src/lm32_include.v"

  
`line 300 "src/lm32_include.v"

  
`line 301 "src/lm32_include.v"

  
`line 302 "src/lm32_include.v"

  
`line 303 "src/lm32_include.v"

  
`line 304 "src/lm32_include.v"



  
`line 307 "src/lm32_include.v"

  
`line 308 "src/lm32_include.v"

  
`line 309 "src/lm32_include.v"

  
`line 310 "src/lm32_include.v"

  
`line 311 "src/lm32_include.v"

  
`line 312 "src/lm32_include.v"


 
`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"

           
  
`line 31 "/tmp/lm32-customizer/tmp.v"

  
`line 32 "/tmp/lm32-customizer/tmp.v"

  
`line 33 "/tmp/lm32-customizer/tmp.v"

  
`line 34 "/tmp/lm32-customizer/tmp.v"

  
`line 35 "/tmp/lm32-customizer/tmp.v"

  
`line 36 "/tmp/lm32-customizer/tmp.v"

  
`line 37 "/tmp/lm32-customizer/tmp.v"






module lm32_mc_arithmetic_full (
    
    clk_i,
    rst_i,
    stall_d,
    kill_x,
  
`line 49 "/tmp/lm32-customizer/tmp.v"

    divide_d,
    modulus_d,
 
`line 52 "/tmp/lm32-customizer/tmp.v"

  
    

`line 55 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 60 "/tmp/lm32-customizer/tmp.v"

    operand_0_d,
    operand_1_d,
    
    result_x,
  
`line 65 "/tmp/lm32-customizer/tmp.v"

    divide_by_zero_x,
 
`line 67 "/tmp/lm32-customizer/tmp.v"

    stall_request_x
    );





input clk_i;                                    
input rst_i;                                    
input stall_d;                                  
input kill_x;                                   
  
`line 79 "/tmp/lm32-customizer/tmp.v"

input divide_d;                                 
input modulus_d;                                
 
`line 82 "/tmp/lm32-customizer/tmp.v"

  
                                

`line 85 "/tmp/lm32-customizer/tmp.v"

  
                              
                             
                             

`line 90 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] operand_0_d;
input [ (32-1):0] operand_1_d;





output [ (32-1):0] result_x;               
reg    [ (32-1):0] result_x;
  
`line 100 "/tmp/lm32-customizer/tmp.v"

output divide_by_zero_x;                        
reg    divide_by_zero_x;
 
`line 103 "/tmp/lm32-customizer/tmp.v"

output stall_request_x;                         
wire   stall_request_x;





reg [ (32-1):0] p;                         
reg [ (32-1):0] a;
reg [ (32-1):0] b;
  
`line 114 "/tmp/lm32-customizer/tmp.v"

wire [32:0] t;
 
`line 116 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;                 
reg [5:0] cycles;                               

  
                               
                                 

`line 124 "/tmp/lm32-customizer/tmp.v"







assign stall_request_x = state !=  3'b000;

  
`line 133 "/tmp/lm32-customizer/tmp.v"


assign t = {p[ 32-2:0], a[ 32-1]} - b;
 
`line 136 "/tmp/lm32-customizer/tmp.v"


  

       

`line 141 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        cycles <= {6{1'b0}};
        p <= { 32{1'b0}};
        a <= { 32{1'b0}};
        b <= { 32{1'b0}};
  
          

`line 158 "/tmp/lm32-customizer/tmp.v"

  
`line 159 "/tmp/lm32-customizer/tmp.v"

        divide_by_zero_x <=  1'b0;
 
`line 161 "/tmp/lm32-customizer/tmp.v"

        result_x <= { 32{1'b0}};
        state <=  3'b000;
    end
    else
    begin
  
`line 167 "/tmp/lm32-customizer/tmp.v"

        divide_by_zero_x <=  1'b0;
 
`line 169 "/tmp/lm32-customizer/tmp.v"

        case (state)
         3'b000:
        begin
            if (stall_d ==  1'b0)                 
            begin          
                cycles <=  32;
                p <= 32'b0;
                a <= operand_0_d;
                b <= operand_1_d;                    
  
`line 179 "/tmp/lm32-customizer/tmp.v"

                if (divide_d ==  1'b1)
                    state <=  3'b011 ;
                if (modulus_d ==  1'b1)
                    state <=  3'b010   ;
 
`line 184 "/tmp/lm32-customizer/tmp.v"
                    
  
                   
                      

`line 188 "/tmp/lm32-customizer/tmp.v"

  
                   
                
                      
                      
                      
                      
                      
                
                   
                
                      
                      
                      
                      
                      
                

`line 206 "/tmp/lm32-customizer/tmp.v"

            end            
        end
  
`line 209 "/tmp/lm32-customizer/tmp.v"

         3'b011 :
        begin
            if (t[32] == 1'b0)
            begin
                p <= t[31:0];
                a <= {a[ 32-2:0], 1'b1};
            end
            else 
            begin
                p <= {p[ 32-2:0], a[ 32-1]};
                a <= {a[ 32-2:0], 1'b0};
            end
            result_x <= a;
            if ((cycles ==  32'd0) || (kill_x ==  1'b1))
            begin
                
                divide_by_zero_x <= b == { 32{1'b0}};
                state <=  3'b000;
            end
            cycles <= cycles - 1'b1;
        end
         3'b010   :
        begin
            if (t[32] == 1'b0)
            begin
                p <= t[31:0];
                a <= {a[ 32-2:0], 1'b1};
            end
            else 
            begin
                p <= {p[ 32-2:0], a[ 32-1]};
                a <= {a[ 32-2:0], 1'b0};
            end
            result_x <= p;
            if ((cycles ==  32'd0) || (kill_x ==  1'b1))
            begin
                
                divide_by_zero_x <= b == { 32{1'b0}};
                state <=  3'b000;
            end
            cycles <= cycles - 1'b1;
        end
 
`line 252 "/tmp/lm32-customizer/tmp.v"
        
  
        
        
               
                    
               
               
              
                   
                  
                
        

`line 265 "/tmp/lm32-customizer/tmp.v"
     
  
        
               
               
              
                   
                  
                
        
        
               
               
              
                   
                  
                
        

`line 283 "/tmp/lm32-customizer/tmp.v"
   
        endcase
    end
end 

endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_top_full (
    
    clk_i,
    rst_i,
    

    interrupt,

    
  
    
    

`line 335 "/tmp/lm32-customizer/tmp.v"
     
  
`line 336 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 342 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
      
    
    
    
    

`line 354 "/tmp/lm32-customizer/tmp.v"
    
  
`line 355 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 366 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





input clk_i;                                    
input rst_i;                                    


input [ (32-1):0] interrupt;          


  
               
                             

`line 393 "/tmp/lm32-customizer/tmp.v"
    

  
`line 395 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 400 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                               
   
       
     
           
    
           
    

`line 420 "/tmp/lm32-customizer/tmp.v"


  
`line 422 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 441 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;
  



 
  

  
  
 
  
  
 
 

`line 475 "/tmp/lm32-customizer/tmp.v"



  

                     
                             
                            
                   
                                 
 
                                 


`line 488 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"




   

lm32_cpu_full cpu (
    
    .clk_i                 (clk_i),
  
                   

`line 505 "/tmp/lm32-customizer/tmp.v"

    .rst_i                 (rst_i),
    
  
`line 508 "/tmp/lm32-customizer/tmp.v"

    .interrupt             (interrupt),
 
`line 510 "/tmp/lm32-customizer/tmp.v"

    
  
               
             

`line 515 "/tmp/lm32-customizer/tmp.v"
     
  
    
                  
               
                
           

`line 522 "/tmp/lm32-customizer/tmp.v"

  
`line 523 "/tmp/lm32-customizer/tmp.v"

     
    .I_DAT_I               (I_DAT_I),
    .I_ACK_I               (I_ACK_I),
    .I_ERR_I               (I_ERR_I),
    .I_RTY_I               (I_RTY_I),
 
`line 529 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_I               (D_DAT_I),
    .D_ACK_I               (D_ACK_I),
    .D_ERR_I               (D_ERR_I),
    .D_RTY_I               (D_RTY_I),
    
  
                  
            
           
                 
                
 
                


`line 545 "/tmp/lm32-customizer/tmp.v"

  
                
           

`line 549 "/tmp/lm32-customizer/tmp.v"

      
                
               
            
            

`line 555 "/tmp/lm32-customizer/tmp.v"
    
  
`line 556 "/tmp/lm32-customizer/tmp.v"

    
    .I_DAT_O               (I_DAT_O),
    .I_ADR_O               (I_ADR_O),
    .I_CYC_O               (I_CYC_O),
    .I_SEL_O               (I_SEL_O),
    .I_STB_O               (I_STB_O),
    .I_WE_O                (I_WE_O),
    .I_CTI_O               (I_CTI_O),
    .I_LOCK_O              (I_LOCK_O),
    .I_BTE_O               (I_BTE_O),
     
`line 567 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_O               (D_DAT_O),
    .D_ADR_O               (D_ADR_O),
    .D_CYC_O               (D_CYC_O),
    .D_SEL_O               (D_SEL_O),
    .D_STB_O               (D_STB_O),
    .D_WE_O                (D_WE_O),
    .D_CTI_O               (D_CTI_O),
    .D_LOCK_O              (D_LOCK_O),
    .D_BTE_O               (D_BTE_O)
    );
   
  		   

  
    
                     
                
    
                
                     
                
                      
                     
    

`line 593 "/tmp/lm32-customizer/tmp.v"
        
   
endmodule
































































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_cpu_full (
    
    clk_i,
  
    

`line 671 "/tmp/lm32-customizer/tmp.v"
    
    rst_i,
    
  
`line 674 "/tmp/lm32-customizer/tmp.v"

    interrupt,
 
`line 676 "/tmp/lm32-customizer/tmp.v"

    
  
    
    

`line 681 "/tmp/lm32-customizer/tmp.v"
     
  
    
    
     
    
    

`line 688 "/tmp/lm32-customizer/tmp.v"

  
`line 689 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 695 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
  
    
    
    
    
    
 
    


`line 711 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 715 "/tmp/lm32-customizer/tmp.v"

      
    
    
    
    

`line 721 "/tmp/lm32-customizer/tmp.v"
    
  
`line 722 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 733 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





parameter eba_reset =  32'h00000000;                           
  
                            

`line 753 "/tmp/lm32-customizer/tmp.v"


  
`line 755 "/tmp/lm32-customizer/tmp.v"

parameter icache_associativity =  1;     
parameter icache_sets =  256;                       
parameter icache_bytes_per_line =  16;   
parameter icache_base_address =  32'h0;       
parameter icache_limit =  32'h7fffffff;                     
 
       
                         
     
         
                       

`line 767 "/tmp/lm32-customizer/tmp.v"


  
`line 769 "/tmp/lm32-customizer/tmp.v"

parameter dcache_associativity =  1;     
parameter dcache_sets =  256;                       
parameter dcache_bytes_per_line =  16;   
parameter dcache_base_address =  32'h0;       
parameter dcache_limit =  32'h7fffffff;                     
 
       
                         
     
         
                       

`line 781 "/tmp/lm32-customizer/tmp.v"


  
                          

`line 785 "/tmp/lm32-customizer/tmp.v"

parameter watchpoints = 0;
 
`line 787 "/tmp/lm32-customizer/tmp.v"

  
                          

`line 790 "/tmp/lm32-customizer/tmp.v"

parameter breakpoints = 0;
 
`line 792 "/tmp/lm32-customizer/tmp.v"


  
`line 794 "/tmp/lm32-customizer/tmp.v"

parameter interrupts =  32;                         
 
   

`line 798 "/tmp/lm32-customizer/tmp.v"






input clk_i;                                    
  
                                   

`line 807 "/tmp/lm32-customizer/tmp.v"
    
input rst_i;                                    

  
`line 810 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] interrupt;          
 
`line 812 "/tmp/lm32-customizer/tmp.v"


  
               
                             

`line 817 "/tmp/lm32-customizer/tmp.v"
    

  
                                  
                               
                
  

`line 824 "/tmp/lm32-customizer/tmp.v"


  
`line 826 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 831 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                   
     
                           
    
                          
    
                 
     
                               
    
 
                               
    


`line 857 "/tmp/lm32-customizer/tmp.v"


  
  
    
  
    

`line 864 "/tmp/lm32-customizer/tmp.v"


  
                               
   
       
     
           
    
           
    

`line 875 "/tmp/lm32-customizer/tmp.v"


  
`line 877 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 896 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;







  
`line 923 "/tmp/lm32-customizer/tmp.v"

reg valid_a;                                    
 
`line 925 "/tmp/lm32-customizer/tmp.v"

reg valid_f;                                    
reg valid_d;                                    
reg valid_x;                                    
reg valid_m;                                    
reg valid_w;                                    
   
wire q_x;
wire [ (32-1):0] immediate_d;              
wire load_d;                                    
reg load_x;                                     
reg load_m;
wire load_q_x;
wire store_q_x;
wire store_d;                                   
reg store_x;
reg store_m;
wire [ 1:0] size_d;                   
reg [ 1:0] size_x;
wire branch_d;                                  
wire branch_predict_d;                          
wire branch_predict_taken_d;                    
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;   
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_d;
wire bi_unconditional;
wire bi_conditional;
reg branch_x;                                   
reg branch_predict_x;
reg branch_predict_taken_x;
reg branch_m;
reg branch_predict_m;
reg branch_predict_taken_m;
wire branch_mispredict_taken_m;                 
wire branch_flushX_m;                           
wire branch_reg_d;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset_d;            
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_x;             
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;
wire [ 0:0] d_result_sel_0_d; 
wire [ 1:0] d_result_sel_1_d; 

wire x_result_sel_csr_d;                        
reg x_result_sel_csr_x;
  
`line 968 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_mc_arith_d;                   
reg x_result_sel_mc_arith_x;
 
`line 971 "/tmp/lm32-customizer/tmp.v"

      
                       
 

`line 975 "/tmp/lm32-customizer/tmp.v"

  
`line 976 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_sext_d;                       
reg x_result_sel_sext_x;
 
`line 979 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_logic_d;                      
reg x_result_sel_logic_x;
  
                        
 

`line 985 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_add_d;                        
reg x_result_sel_add_x;
wire m_result_sel_compare_d;                    
reg m_result_sel_compare_x;
reg m_result_sel_compare_m;
  
`line 991 "/tmp/lm32-customizer/tmp.v"

wire m_result_sel_shift_d;                      
reg m_result_sel_shift_x;
reg m_result_sel_shift_m;
 
`line 995 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_load_d;                       
reg w_result_sel_load_x;
reg w_result_sel_load_m;
reg w_result_sel_load_w;
  
`line 1000 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_mul_d;                        
reg w_result_sel_mul_x;
reg w_result_sel_mul_m;
reg w_result_sel_mul_w;
 
`line 1005 "/tmp/lm32-customizer/tmp.v"

wire x_bypass_enable_d;                         
reg x_bypass_enable_x;                          
wire m_bypass_enable_d;                         
reg m_bypass_enable_x;                          
reg m_bypass_enable_m;
wire sign_extend_d;                             
reg sign_extend_x;
wire write_enable_d;                            
reg write_enable_x;
wire write_enable_q_x;
reg write_enable_m;
wire write_enable_q_m;
reg write_enable_w;
wire write_enable_q_w;
wire read_enable_0_d;                           
wire [ (5-1):0] read_idx_0_d;          
wire read_enable_1_d;                           
wire [ (5-1):0] read_idx_1_d;          
wire [ (5-1):0] write_idx_d;           
reg [ (5-1):0] write_idx_x;            
reg [ (5-1):0] write_idx_m;
reg [ (5-1):0] write_idx_w;
wire [ (3-1):0] csr_d;                     
reg  [ (3-1):0] csr_x;                  
wire [ (3-1):0] condition_d;         
reg [ (3-1):0] condition_x;          
  
                                    
                                     

`line 1035 "/tmp/lm32-customizer/tmp.v"

wire scall_d;                                   
reg scall_x;    
wire eret_d;                                    
reg eret_x;
wire eret_q_x;
reg eret_m;
  
 

`line 1044 "/tmp/lm32-customizer/tmp.v"

  
                                     
 
 
 
 
 


`line 1053 "/tmp/lm32-customizer/tmp.v"

wire csr_write_enable_d;                        
reg csr_write_enable_x;
wire csr_write_enable_q_x;
  
       

`line 1059 "/tmp/lm32-customizer/tmp.v"


  
`line 1061 "/tmp/lm32-customizer/tmp.v"

wire bus_error_d;                               
reg bus_error_x;
reg data_bus_error_exception_m;
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] memop_pc_w;
 
`line 1066 "/tmp/lm32-customizer/tmp.v"


reg [ (32-1):0] d_result_0;                
reg [ (32-1):0] d_result_1;                
reg [ (32-1):0] x_result;                  
reg [ (32-1):0] m_result;                  
reg [ (32-1):0] w_result;                  

reg [ (32-1):0] operand_0_x;               
reg [ (32-1):0] operand_1_x;               
reg [ (32-1):0] store_operand_x;           
reg [ (32-1):0] operand_m;                 
reg [ (32-1):0] operand_w;                 


  
`line 1081 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] reg_data_live_0;          
reg [ (32-1):0] reg_data_live_1;  
reg use_buf;                                    
reg [ (32-1):0] reg_data_buf_0;
reg [ (32-1):0] reg_data_buf_1;
 
`line 1087 "/tmp/lm32-customizer/tmp.v"

  
`line 1088 "/tmp/lm32-customizer/tmp.v"

 
     

`line 1091 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] reg_data_0;               
wire [ (32-1):0] reg_data_1;               
reg [ (32-1):0] bypass_data_0;             
reg [ (32-1):0] bypass_data_1;             
wire reg_write_enable_q_w;

reg interlock;                                  

wire stall_a;                                   
wire stall_f;                                   
wire stall_d;                                   
wire stall_x;                                   
wire stall_m;                                   


wire adder_op_d;                                
reg adder_op_x;                                 
reg adder_op_x_n;                               
wire [ (32-1):0] adder_result_x;           
wire adder_overflow_x;                          
wire adder_carry_n_x;                           


wire [ 3:0] logic_op_d;           
reg [ 3:0] logic_op_x;            
wire [ (32-1):0] logic_result_x;           

  
`line 1119 "/tmp/lm32-customizer/tmp.v"


wire [ (32-1):0] sextb_result_x;           
wire [ (32-1):0] sexth_result_x;           
wire [ (32-1):0] sext_result_x;            
 
`line 1124 "/tmp/lm32-customizer/tmp.v"



  
`line 1127 "/tmp/lm32-customizer/tmp.v"

  
                                   
                                     

`line 1131 "/tmp/lm32-customizer/tmp.v"

wire direction_d;                               
reg direction_x;                                        
reg direction_m;
wire [ (32-1):0] shifter_result_m;         
 
`line 1136 "/tmp/lm32-customizer/tmp.v"

  
                               
 
                              
 

`line 1142 "/tmp/lm32-customizer/tmp.v"

  
           

`line 1145 "/tmp/lm32-customizer/tmp.v"



  
`line 1148 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] multiplier_result_w;      
 
`line 1150 "/tmp/lm32-customizer/tmp.v"

  
                                 
 

`line 1154 "/tmp/lm32-customizer/tmp.v"



  
`line 1157 "/tmp/lm32-customizer/tmp.v"

wire divide_d;                                  
wire divide_q_d;
wire modulus_d;
wire modulus_q_d;
wire divide_by_zero_x;                          
 
`line 1163 "/tmp/lm32-customizer/tmp.v"



  
`line 1166 "/tmp/lm32-customizer/tmp.v"

wire mc_stall_request_x;                        
wire [ (32-1):0] mc_result_x;
 
`line 1169 "/tmp/lm32-customizer/tmp.v"



  
`line 1172 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] interrupt_csr_read_data_x;
 
`line 1174 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] cfg;                      
wire [ (32-1):0] cfg2;                     
  
                          

`line 1179 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] csr_read_data_x;           


wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                       
  
                          

`line 1190 "/tmp/lm32-customizer/tmp.v"

  
`line 1191 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] instruction_f;     
 
`line 1193 "/tmp/lm32-customizer/tmp.v"



wire [ (32-1):0] instruction_d;     
  
`line 1197 "/tmp/lm32-customizer/tmp.v"

wire iflush;                                    
wire icache_stall_request;                      
wire icache_restart_request;                    
wire icache_refill_request;                     
wire icache_refilling;                          
 
`line 1203 "/tmp/lm32-customizer/tmp.v"

  
          
            
                
                                 
                       

`line 1210 "/tmp/lm32-customizer/tmp.v"



  
`line 1213 "/tmp/lm32-customizer/tmp.v"

wire dflush_x;                                  
reg dflush_m;                                    
wire dcache_stall_request;                      
wire dcache_restart_request;                    
wire dcache_refill_request;                     
wire dcache_refilling;                          
 
`line 1220 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] load_data_w;              
wire stall_wb_load;                             


  
 
          
          

 
                      
        
                    
                           
  
 
  
  
 

 
                                 


`line 1244 "/tmp/lm32-customizer/tmp.v"



wire raw_x_0;                                   
wire raw_x_1;                                   
wire raw_m_0;                                   
wire raw_m_1;                                   
wire raw_w_0;                                   
wire raw_w_1;                                   


wire cmp_zero;                                  
wire cmp_negative;                              
wire cmp_overflow;                              
wire cmp_carry_n;                               
reg condition_met_x;                            
reg condition_met_m;
  
`line 1261 "/tmp/lm32-customizer/tmp.v"
    
wire branch_taken_x;                            
 
`line 1263 "/tmp/lm32-customizer/tmp.v"

wire branch_taken_m;                            

wire kill_f;                                    
wire kill_d;                                    
wire kill_x;                                    
wire kill_m;                                    
wire kill_w;                                    

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] eba;                 
  
                  

`line 1275 "/tmp/lm32-customizer/tmp.v"

reg [ (3-1):0] eid_x;                      
  
                        
                        

`line 1280 "/tmp/lm32-customizer/tmp.v"


  
 
                                      

                                      
                                
                                 
                          
 
 
 
                      
 
 
 

`line 1297 "/tmp/lm32-customizer/tmp.v"

wire exception_x;                               
reg exception_m;
reg exception_w;
wire exception_q_w;
 
`line 1302 "/tmp/lm32-customizer/tmp.v"


  
 
                            


`line 1308 "/tmp/lm32-customizer/tmp.v"

  
`line 1309 "/tmp/lm32-customizer/tmp.v"

wire interrupt_exception;                       
 
`line 1311 "/tmp/lm32-customizer/tmp.v"

  
                       
                       

`line 1315 "/tmp/lm32-customizer/tmp.v"

  
`line 1316 "/tmp/lm32-customizer/tmp.v"

wire instruction_bus_error_exception;           
wire data_bus_error_exception;                  
 
`line 1319 "/tmp/lm32-customizer/tmp.v"

  
`line 1320 "/tmp/lm32-customizer/tmp.v"

wire divide_by_zero_exception;                  
 
`line 1322 "/tmp/lm32-customizer/tmp.v"

wire system_call_exception;                     

  
`line 1325 "/tmp/lm32-customizer/tmp.v"

reg data_bus_error_seen;                        
 
`line 1327 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







lm32_instruction_unit_full #(
    .associativity          (icache_associativity),
    .sets                   (icache_sets),
    .bytes_per_line         (icache_bytes_per_line),
    .base_address           (icache_base_address),
    .limit                  (icache_limit)
  ) instruction_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .stall_d                (stall_d),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .valid_f                (valid_f),
    .valid_d                (valid_d),
    .kill_f                 (kill_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .branch_predict_address_d (branch_predict_address_d),
  
`line 1361 "/tmp/lm32-customizer/tmp.v"
    
    .branch_taken_x         (branch_taken_x),
    .branch_target_x        (branch_target_x),
 
`line 1364 "/tmp/lm32-customizer/tmp.v"

    .exception_m            (exception_m),
    .branch_taken_m         (branch_taken_m),
    .branch_mispredict_taken_m (branch_mispredict_taken_m),
    .branch_target_m        (branch_target_m),
  
`line 1369 "/tmp/lm32-customizer/tmp.v"

    .iflush                 (iflush),
 
`line 1371 "/tmp/lm32-customizer/tmp.v"

  
          
            
                 

`line 1376 "/tmp/lm32-customizer/tmp.v"

  
`line 1377 "/tmp/lm32-customizer/tmp.v"

    .dcache_restart_request (dcache_restart_request),
    .dcache_refill_request  (dcache_refill_request),
    .dcache_refilling       (dcache_refilling),
 
`line 1381 "/tmp/lm32-customizer/tmp.v"
        
  
`line 1382 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_i                (I_DAT_I),
    .i_ack_i                (I_ACK_I),
    .i_err_i                (I_ERR_I),
    .i_rty_i                (I_RTY_I),
 
`line 1388 "/tmp/lm32-customizer/tmp.v"

  
           
          
            
               

`line 1394 "/tmp/lm32-customizer/tmp.v"

    
    
    .pc_f                   (pc_f),
    .pc_d                   (pc_d),
    .pc_x                   (pc_x),
    .pc_m                   (pc_m),
    .pc_w                   (pc_w),
  
`line 1402 "/tmp/lm32-customizer/tmp.v"

    .icache_stall_request   (icache_stall_request),
    .icache_restart_request (icache_restart_request),
    .icache_refill_request  (icache_refill_request),
    .icache_refilling       (icache_refilling),
 
`line 1407 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1410 "/tmp/lm32-customizer/tmp.v"

  
`line 1411 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_o                (I_DAT_O),
    .i_adr_o                (I_ADR_O),
    .i_cyc_o                (I_CYC_O),
    .i_sel_o                (I_SEL_O),
    .i_stb_o                (I_STB_O),
    .i_we_o                 (I_WE_O),
    .i_cti_o                (I_CTI_O),
    .i_lock_o               (I_LOCK_O),
    .i_bte_o                (I_BTE_O),
 
`line 1422 "/tmp/lm32-customizer/tmp.v"

  
             
       

`line 1426 "/tmp/lm32-customizer/tmp.v"

  
`line 1427 "/tmp/lm32-customizer/tmp.v"

    .bus_error_d            (bus_error_d),
 
`line 1429 "/tmp/lm32-customizer/tmp.v"

  
`line 1430 "/tmp/lm32-customizer/tmp.v"

    .instruction_f          (instruction_f),
 
`line 1432 "/tmp/lm32-customizer/tmp.v"

    .instruction_d          (instruction_d)
    );


lm32_decoder_full decoder (
    
    .instruction            (instruction_d),
    
    .d_result_sel_0         (d_result_sel_0_d),
    .d_result_sel_1         (d_result_sel_1_d),
    .x_result_sel_csr       (x_result_sel_csr_d),
  
`line 1444 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_mc_arith  (x_result_sel_mc_arith_d),
 
`line 1446 "/tmp/lm32-customizer/tmp.v"

      
         

`line 1449 "/tmp/lm32-customizer/tmp.v"

  
`line 1450 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_sext      (x_result_sel_sext_d),
 
`line 1452 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_logic     (x_result_sel_logic_d),
  
          

`line 1456 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_add       (x_result_sel_add_d),
    .m_result_sel_compare   (m_result_sel_compare_d),
  
`line 1459 "/tmp/lm32-customizer/tmp.v"

    .m_result_sel_shift     (m_result_sel_shift_d),  
 
`line 1461 "/tmp/lm32-customizer/tmp.v"
    
    .w_result_sel_load      (w_result_sel_load_d),
  
`line 1463 "/tmp/lm32-customizer/tmp.v"

    .w_result_sel_mul       (w_result_sel_mul_d),
 
`line 1465 "/tmp/lm32-customizer/tmp.v"

    .x_bypass_enable        (x_bypass_enable_d),
    .m_bypass_enable        (m_bypass_enable_d),
    .read_enable_0          (read_enable_0_d),
    .read_idx_0             (read_idx_0_d),
    .read_enable_1          (read_enable_1_d),
    .read_idx_1             (read_idx_1_d),
    .write_enable           (write_enable_d),
    .write_idx              (write_idx_d),
    .immediate              (immediate_d),
    .branch_offset          (branch_offset_d),
    .load                   (load_d),
    .store                  (store_d),
    .size                   (size_d),
    .sign_extend            (sign_extend_d),
    .adder_op               (adder_op_d),
    .logic_op               (logic_op_d),
  
`line 1482 "/tmp/lm32-customizer/tmp.v"

    .direction              (direction_d),
 
`line 1484 "/tmp/lm32-customizer/tmp.v"

  
                 
                

`line 1488 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1491 "/tmp/lm32-customizer/tmp.v"

  
`line 1492 "/tmp/lm32-customizer/tmp.v"

    .divide                 (divide_d),
    .modulus                (modulus_d),
 
`line 1495 "/tmp/lm32-customizer/tmp.v"

    .branch                 (branch_d),
    .bi_unconditional       (bi_unconditional),
    .bi_conditional         (bi_conditional),
    .branch_reg             (branch_reg_d),
    .condition              (condition_d),
  
               

`line 1503 "/tmp/lm32-customizer/tmp.v"

    .scall                  (scall_d),
    .eret                   (eret_d),
  
                       

`line 1508 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1511 "/tmp/lm32-customizer/tmp.v"

    .csr_write_enable       (csr_write_enable_d)
    ); 


lm32_load_store_unit_full #(
    .associativity          (dcache_associativity),
    .sets                   (dcache_sets),
    .bytes_per_line         (dcache_bytes_per_line),
    .base_address           (dcache_base_address),
    .limit                  (dcache_limit)
  ) load_store_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .kill_x                 (kill_x),
    .kill_m                 (kill_m),
    .exception_m            (exception_m),
    .store_operand_x        (store_operand_x),
    .load_store_address_x   (adder_result_x),
    .load_store_address_m   (operand_m),
    .load_store_address_w   (operand_w[1:0]),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_q_x               (load_q_x),
    .store_q_x              (store_q_x),
    .load_q_m               (load_q_m),
    .store_q_m              (store_q_m),
    .sign_extend_x          (sign_extend_x),
    .size_x                 (size_x),
  
`line 1545 "/tmp/lm32-customizer/tmp.v"

    .dflush                 (dflush_m),
 
`line 1547 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1550 "/tmp/lm32-customizer/tmp.v"

    
    .d_dat_i                (D_DAT_I),
    .d_ack_i                (D_ACK_I),
    .d_err_i                (D_ERR_I),
    .d_rty_i                (D_RTY_I),
    
    
  
`line 1558 "/tmp/lm32-customizer/tmp.v"

    .dcache_refill_request  (dcache_refill_request),
    .dcache_restart_request (dcache_restart_request),
    .dcache_stall_request   (dcache_stall_request),
    .dcache_refilling       (dcache_refilling),
 
`line 1563 "/tmp/lm32-customizer/tmp.v"
    
  
          
            
                 
       

`line 1569 "/tmp/lm32-customizer/tmp.v"

    .load_data_w            (load_data_w),
    .stall_wb_load          (stall_wb_load),
    
    .d_dat_o                (D_DAT_O),
    .d_adr_o                (D_ADR_O),
    .d_cyc_o                (D_CYC_O),
    .d_sel_o                (D_SEL_O),
    .d_stb_o                (D_STB_O),
    .d_we_o                 (D_WE_O),
    .d_cti_o                (D_CTI_O),
    .d_lock_o               (D_LOCK_O),
    .d_bte_o                (D_BTE_O)
    );      
       

lm32_adder adder (
    
    .adder_op_x             (adder_op_x),
    .adder_op_x_n           (adder_op_x_n),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .adder_result_x         (adder_result_x),
    .adder_carry_n_x        (adder_carry_n_x),
    .adder_overflow_x       (adder_overflow_x)
    );


lm32_logic_op logic_op (
    
    .logic_op_x             (logic_op_x),
    .operand_0_x            (operand_0_x),

    .operand_1_x            (operand_1_x),
    
    .logic_result_x         (logic_result_x)
    );
              
  
`line 1608 "/tmp/lm32-customizer/tmp.v"


lm32_shifter shifter (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .direction_x            (direction_x),
    .sign_extend_x          (sign_extend_x),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .shifter_result_m       (shifter_result_m)
    );
 
`line 1622 "/tmp/lm32-customizer/tmp.v"


  
`line 1624 "/tmp/lm32-customizer/tmp.v"


lm32_multiplier multiplier (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .operand_0              (d_result_0),
    .operand_1              (d_result_1),
    
    .result                 (multiplier_result_w)    
    );
 
`line 1637 "/tmp/lm32-customizer/tmp.v"


  
`line 1639 "/tmp/lm32-customizer/tmp.v"


lm32_mc_arithmetic_full mc_arithmetic (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_d                (stall_d),
    .kill_x                 (kill_x),
  
`line 1647 "/tmp/lm32-customizer/tmp.v"
                  
    .divide_d               (divide_q_d),
    .modulus_d              (modulus_q_d),
 
`line 1650 "/tmp/lm32-customizer/tmp.v"

          
                 

`line 1653 "/tmp/lm32-customizer/tmp.v"

  
               
              
              

`line 1658 "/tmp/lm32-customizer/tmp.v"
    
    .operand_0_d            (d_result_0),
    .operand_1_d            (d_result_1),
    
    .result_x               (mc_result_x),
  
`line 1663 "/tmp/lm32-customizer/tmp.v"
                  
    .divide_by_zero_x       (divide_by_zero_x),
 
`line 1665 "/tmp/lm32-customizer/tmp.v"

    .stall_request_x        (mc_stall_request_x)
    );
 
`line 1668 "/tmp/lm32-customizer/tmp.v"

              
  
`line 1670 "/tmp/lm32-customizer/tmp.v"


lm32_interrupt_full interrupt_unit (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    
    .interrupt              (interrupt),
    
    .stall_x                (stall_x),
  
         
            

`line 1683 "/tmp/lm32-customizer/tmp.v"

    .exception              (exception_q_w), 
 
`line 1685 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
  
                   

`line 1689 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    
    .interrupt_exception    (interrupt_exception),
    
    .csr_read_data          (interrupt_csr_read_data_x)
    );
 
`line 1698 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
    
                   
                
                 
            
    
 
                        
             
           
                    

 
             
       

 
                
    
    
    
 
          
          

 
      
        
                   
           
          
            
               

 
                 
                 

    
                 
            
    

`line 1748 "/tmp/lm32-customizer/tmp.v"


  

 
                
                
    
    
                       
                      
                       
                     
                    
       
         
             
                      
 
      
        
                   

 
                   
                   
                    
                
                        
 
      


    
 
                      

                      
                   
                   
    

`line 1789 "/tmp/lm32-customizer/tmp.v"




  
`line 1793 "/tmp/lm32-customizer/tmp.v"

   
           
            
          
            


             
              
    

   wire [31:0] regfile_data_0, regfile_data_1;
   reg [31:0]  w_result_d;
   reg 	       regfile_raw_0, regfile_raw_0_nxt;
   reg 	       regfile_raw_1, regfile_raw_1_nxt;
   
   
             
          

   always @(reg_write_enable_q_w or write_idx_w or instruction_f)
     begin
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[25:21]))
	  regfile_raw_0_nxt = 1'b1;
	else
	  regfile_raw_0_nxt = 1'b0;
	
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[20:16]))
	  regfile_raw_1_nxt = 1'b1;
	else
	  regfile_raw_1_nxt = 1'b0;
     end
   
   
           
           
       

   always @(regfile_raw_0 or w_result_d or regfile_data_0)
     if (regfile_raw_0)
       reg_data_live_0 = w_result_d;
     else
       reg_data_live_0 = regfile_data_0;
   
   
           
           
       

   always @(regfile_raw_1 or w_result_d or regfile_data_1)
     if (regfile_raw_1)
       reg_data_live_1 = w_result_d;
     else
       reg_data_live_1 = regfile_data_1;
   
   
     

   always @(posedge clk_i  )
     if (rst_i ==  1'b1)
       begin
	  regfile_raw_0 <= 1'b0;
	  regfile_raw_1 <= 1'b0;
	  w_result_d <= 32'b0;
       end
     else
       begin
	  regfile_raw_0 <= regfile_raw_0_nxt;
	  regfile_raw_1 <= regfile_raw_1_nxt;
	  w_result_d <= w_result;
       end
   
   
      

   
   lm32_dp_ram
     #(
       
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_0
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[25:21]),
      
      .rdata_o	(regfile_data_0)
      );

   lm32_dp_ram
     #(
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_1
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[20:16]),
      
      .rdata_o	(regfile_data_1)
      );
 
`line 1910 "/tmp/lm32-customizer/tmp.v"


  
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      
   
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      

`line 1978 "/tmp/lm32-customizer/tmp.v"







  
`line 1985 "/tmp/lm32-customizer/tmp.v"


assign reg_data_0 = use_buf ? reg_data_buf_0 : reg_data_live_0;
assign reg_data_1 = use_buf ? reg_data_buf_1 : reg_data_live_1;
 
`line 1989 "/tmp/lm32-customizer/tmp.v"

  
`line 1990 "/tmp/lm32-customizer/tmp.v"

 

   
   

`line 1995 "/tmp/lm32-customizer/tmp.v"



assign raw_x_0 = (write_idx_x == read_idx_0_d) && (write_enable_q_x ==  1'b1);
assign raw_m_0 = (write_idx_m == read_idx_0_d) && (write_enable_q_m ==  1'b1);
assign raw_w_0 = (write_idx_w == read_idx_0_d) && (write_enable_q_w ==  1'b1);
assign raw_x_1 = (write_idx_x == read_idx_1_d) && (write_enable_q_x ==  1'b1);
assign raw_m_1 = (write_idx_m == read_idx_1_d) && (write_enable_q_m ==  1'b1);
assign raw_w_1 = (write_idx_w == read_idx_1_d) && (write_enable_q_w ==  1'b1);


always @(*)
begin
    if (   (   (x_bypass_enable_x ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_x_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_x_1 ==  1'b1))
               )
           )
        || (   (m_bypass_enable_m ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_m_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_m_1 ==  1'b1))
               )
           )
       )
        interlock =  1'b1;
    else
        interlock =  1'b0;
end


always @(*)
begin
    if (raw_x_0 ==  1'b1)        
        bypass_data_0 = x_result;
    else if (raw_m_0 ==  1'b1)
        bypass_data_0 = m_result;
    else if (raw_w_0 ==  1'b1)
        bypass_data_0 = w_result;
    else
        bypass_data_0 = reg_data_0;
end


always @(*)
begin
    if (raw_x_1 ==  1'b1)
        bypass_data_1 = x_result;
    else if (raw_m_1 ==  1'b1)
        bypass_data_1 = m_result;
    else if (raw_w_1 ==  1'b1)
        bypass_data_1 = w_result;
    else
        bypass_data_1 = reg_data_1;
end

   
          
       
       
     

   assign branch_predict_d = bi_unconditional | bi_conditional;
   assign branch_predict_taken_d = bi_unconditional ? 1'b1 : (bi_conditional ? instruction_d[15] : 1'b0);
   
   
   assign branch_target_d = pc_d + branch_offset_d;

   
   
   
   assign branch_predict_address_d = branch_predict_taken_d ? branch_target_d : pc_f;


always @(*)
begin
    d_result_0 = d_result_sel_0_d[0] ? {pc_f, 2'b00} : bypass_data_0; 
    case (d_result_sel_1_d)
     2'b00:      d_result_1 = { 32{1'b0}};
     2'b01:     d_result_1 = bypass_data_1;
     2'b10: d_result_1 = immediate_d;
    default:                        d_result_1 = { 32{1'bx}};
    endcase
end

      

   
   

`line 2083 "/tmp/lm32-customizer/tmp.v"


  
`line 2085 "/tmp/lm32-customizer/tmp.v"


assign sextb_result_x = {{24{operand_0_x[7]}}, operand_0_x[7:0]};
assign sexth_result_x = {{16{operand_0_x[15]}}, operand_0_x[15:0]};
assign sext_result_x = size_x ==  2'b00 ? sextb_result_x : sexth_result_x;
 
`line 2090 "/tmp/lm32-customizer/tmp.v"


  

      

`line 2095 "/tmp/lm32-customizer/tmp.v"



assign cmp_zero = operand_0_x == operand_1_x;
assign cmp_negative = adder_result_x[ 32-1];
assign cmp_overflow = adder_overflow_x;
assign cmp_carry_n = adder_carry_n_x;
always @(*)
begin
    case (condition_x)
     3'b000:   condition_met_x =  1'b1;
     3'b110:   condition_met_x =  1'b1;
     3'b001:    condition_met_x = cmp_zero;
     3'b111:   condition_met_x = !cmp_zero;
     3'b010:    condition_met_x = !cmp_zero && (cmp_negative == cmp_overflow);
     3'b101:   condition_met_x = cmp_carry_n && !cmp_zero;
     3'b011:   condition_met_x = cmp_negative == cmp_overflow;
     3'b100:  condition_met_x = cmp_carry_n;
    default:              condition_met_x = 1'bx;
    endcase 
end


always @(*)
begin
    x_result =   x_result_sel_add_x ? adder_result_x 
               : x_result_sel_csr_x ? csr_read_data_x
  
`line 2122 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_sext_x ? sext_result_x
 
`line 2124 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2127 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2130 "/tmp/lm32-customizer/tmp.v"

  
`line 2131 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_mc_arith_x ? mc_result_x
 
`line 2133 "/tmp/lm32-customizer/tmp.v"

               : logic_result_x;
end


always @(*)
begin
    m_result =   m_result_sel_compare_m ? {{ 32-1{1'b0}}, condition_met_m}
  
`line 2141 "/tmp/lm32-customizer/tmp.v"

               : m_result_sel_shift_m ? shifter_result_m
 
`line 2143 "/tmp/lm32-customizer/tmp.v"

               : operand_m; 
end


always @(*)
begin
    w_result =    w_result_sel_load_w ? load_data_w
  
`line 2151 "/tmp/lm32-customizer/tmp.v"

                : w_result_sel_mul_w ? multiplier_result_w
 
`line 2153 "/tmp/lm32-customizer/tmp.v"

                : operand_w;
end

  
`line 2157 "/tmp/lm32-customizer/tmp.v"
    

assign branch_taken_x =      (stall_x ==  1'b0)
                          && (   (branch_x ==  1'b1)
                              && ((condition_x ==  3'b000) || (condition_x ==  3'b110))
                              && (valid_x ==  1'b1)
                              && (branch_predict_x ==  1'b0)
                             ); 
 
`line 2165 "/tmp/lm32-customizer/tmp.v"



assign branch_taken_m =      (stall_m ==  1'b0) 
                          && (   (   (branch_m ==  1'b1) 
                                  && (valid_m ==  1'b1)
                                  && (   (   (condition_met_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b0)
					 )
				      || (   (condition_met_m ==  1'b0)
					  && (branch_predict_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b1)
					 )
				     )
                                 ) 
                              || (exception_m ==  1'b1)
                             );


assign branch_mispredict_taken_m =    (condition_met_m ==  1'b0)
                                   && (branch_predict_m ==  1'b1)
	   			   && (branch_predict_taken_m ==  1'b1);
   

assign branch_flushX_m =    (stall_m ==  1'b0)
                         && (   (   (branch_m ==  1'b1) 
                                 && (valid_m ==  1'b1)
			         && (   (condition_met_m ==  1'b1)
				     || (   (condition_met_m ==  1'b0)
					 && (branch_predict_m ==  1'b1)
					 && (branch_predict_taken_m ==  1'b1)
					)
				    )
			        )
			     || (exception_m ==  1'b1)
			    );


assign kill_f =    (   (valid_d ==  1'b1)
                    && (branch_predict_taken_d ==  1'b1)
		   )
                || (branch_taken_m ==  1'b1) 
  
`line 2207 "/tmp/lm32-customizer/tmp.v"
    
                || (branch_taken_x ==  1'b1)
 
`line 2209 "/tmp/lm32-customizer/tmp.v"

  
`line 2210 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1) 
 
`line 2212 "/tmp/lm32-customizer/tmp.v"

  
`line 2213 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2215 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_d =    (branch_taken_m ==  1'b1) 
  
`line 2218 "/tmp/lm32-customizer/tmp.v"
    
                || (branch_taken_x ==  1'b1)
 
`line 2220 "/tmp/lm32-customizer/tmp.v"

  
`line 2221 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1)     
 
`line 2223 "/tmp/lm32-customizer/tmp.v"
                
  
`line 2224 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2226 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_x =    (branch_flushX_m ==  1'b1) 
  
`line 2229 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2231 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_m =     1'b0
  
`line 2234 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2236 "/tmp/lm32-customizer/tmp.v"

                ;                
assign kill_w =     1'b0
  
`line 2239 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2241 "/tmp/lm32-customizer/tmp.v"
                
                ;



  
              
				         
				     
				     
				 
 
                                 

                              

`line 2256 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2260 "/tmp/lm32-customizer/tmp.v"


  
`line 2262 "/tmp/lm32-customizer/tmp.v"

assign instruction_bus_error_exception = (   (bus_error_x ==  1'b1)
                                          && (valid_x ==  1'b1)
                                         );
assign data_bus_error_exception = data_bus_error_seen ==  1'b1;
 
`line 2267 "/tmp/lm32-customizer/tmp.v"


  
`line 2269 "/tmp/lm32-customizer/tmp.v"

assign divide_by_zero_exception = divide_by_zero_x ==  1'b1;
 
`line 2271 "/tmp/lm32-customizer/tmp.v"


assign system_call_exception = (   (scall_x ==  1'b1)
  
`line 2274 "/tmp/lm32-customizer/tmp.v"

                                && (valid_x ==  1'b1)
 
`line 2276 "/tmp/lm32-customizer/tmp.v"

			       );

  
      
                            
                         

     
 
                               

 
                               
                               

 
                               

 
                                  
 
                                   
                            
 
 				   
				   

                               

                            

         

`line 2309 "/tmp/lm32-customizer/tmp.v"

assign exception_x =           (system_call_exception ==  1'b1)
  
`line 2311 "/tmp/lm32-customizer/tmp.v"

                            || (instruction_bus_error_exception ==  1'b1)
                            || (data_bus_error_exception ==  1'b1)
 
`line 2314 "/tmp/lm32-customizer/tmp.v"

  
`line 2315 "/tmp/lm32-customizer/tmp.v"

                            || (divide_by_zero_exception ==  1'b1)
 
`line 2317 "/tmp/lm32-customizer/tmp.v"

  
`line 2318 "/tmp/lm32-customizer/tmp.v"

                            || (   (interrupt_exception ==  1'b1)
  
                                   

`line 2322 "/tmp/lm32-customizer/tmp.v"
                            
  
`line 2323 "/tmp/lm32-customizer/tmp.v"

 				&& (store_q_m ==  1'b0)
				&& (D_CYC_O ==  1'b0)
 
`line 2326 "/tmp/lm32-customizer/tmp.v"

                               )
 
`line 2328 "/tmp/lm32-customizer/tmp.v"

                            ;
 
`line 2330 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
  
 
       
          
    
     
 
            
          
    

            
          
    

`line 2349 "/tmp/lm32-customizer/tmp.v"

  
`line 2350 "/tmp/lm32-customizer/tmp.v"

         if (data_bus_error_exception ==  1'b1)
        eid_x =  3'h4;
    else
         if (instruction_bus_error_exception ==  1'b1)
        eid_x =  3'h2;
    else
 
`line 2357 "/tmp/lm32-customizer/tmp.v"

  
            
          
     

`line 2362 "/tmp/lm32-customizer/tmp.v"

  
`line 2363 "/tmp/lm32-customizer/tmp.v"

         if (divide_by_zero_exception ==  1'b1)
        eid_x =  3'h5;
    else
 
`line 2367 "/tmp/lm32-customizer/tmp.v"

  
`line 2368 "/tmp/lm32-customizer/tmp.v"

         if (   (interrupt_exception ==  1'b1)
  
                

`line 2372 "/tmp/lm32-customizer/tmp.v"
                            
            )
        eid_x =  3'h6;
    else
 
`line 2376 "/tmp/lm32-customizer/tmp.v"

        eid_x =  3'h7;
end



assign stall_a = (stall_f ==  1'b1);
                
assign stall_f = (stall_d ==  1'b1);
                
assign stall_d =   (stall_x ==  1'b1) 
                || (   (interlock ==  1'b1)
                    && (kill_d ==  1'b0)
                   ) 
		|| (   (   (eret_d ==  1'b1)
			|| (scall_d ==  1'b1)
  
`line 2392 "/tmp/lm32-customizer/tmp.v"

			|| (bus_error_d ==  1'b1)
 
`line 2394 "/tmp/lm32-customizer/tmp.v"

		       )
		    && (   (load_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
  
		         
			   
		       
		          
			   
			   
			   
			   
		       
                       
		   

`line 2416 "/tmp/lm32-customizer/tmp.v"
                   
                || (   (csr_write_enable_d ==  1'b1)
                    && (load_q_x ==  1'b1)
                   )                      
                ;
                
assign stall_x =    (stall_m ==  1'b1)
  
`line 2423 "/tmp/lm32-customizer/tmp.v"

                 || (   (mc_stall_request_x ==  1'b1)
                     && (kill_x ==  1'b0)
                    ) 
 
`line 2427 "/tmp/lm32-customizer/tmp.v"

  
                 
                 
                       
		           
			    
			
		    

`line 2436 "/tmp/lm32-customizer/tmp.v"

                 ;

assign stall_m =    (stall_wb_load ==  1'b1)
  
                    

`line 2442 "/tmp/lm32-customizer/tmp.v"

                 || (   (D_CYC_O ==  1'b1)
                     && (   (store_m ==  1'b1)
		         
          
          

		  
	 
	

          
           
          
       

  
`line 2458 "/tmp/lm32-customizer/tmp.v"

		         || ((store_x ==  1'b1) && (interrupt_exception ==  1'b1))
 
`line 2460 "/tmp/lm32-customizer/tmp.v"

                         || (load_m ==  1'b1)
                         || (load_x ==  1'b1)
                        ) 
                    ) 
 
`line 2465 "/tmp/lm32-customizer/tmp.v"
                 
  
`line 2466 "/tmp/lm32-customizer/tmp.v"

                 || (dcache_stall_request ==  1'b1)     
 
`line 2468 "/tmp/lm32-customizer/tmp.v"
                                    
  
`line 2469 "/tmp/lm32-customizer/tmp.v"

                 || (icache_stall_request ==  1'b1)     
                 || ((I_CYC_O ==  1'b1) && ((branch_m ==  1'b1) || (exception_m ==  1'b1))) 
 
 
                                


`line 2476 "/tmp/lm32-customizer/tmp.v"
                               
  
                                  
                        
                    

`line 2481 "/tmp/lm32-customizer/tmp.v"

                 ;      


  
`line 2485 "/tmp/lm32-customizer/tmp.v"

assign q_d = (valid_d ==  1'b1) && (kill_d ==  1'b0);
 
`line 2487 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2491 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2494 "/tmp/lm32-customizer/tmp.v"

  
`line 2495 "/tmp/lm32-customizer/tmp.v"

assign divide_q_d = (divide_d ==  1'b1) && (q_d ==  1'b1);
assign modulus_q_d = (modulus_d ==  1'b1) && (q_d ==  1'b1);
 
`line 2498 "/tmp/lm32-customizer/tmp.v"

assign q_x = (valid_x ==  1'b1) && (kill_x ==  1'b0);
assign csr_write_enable_q_x = (csr_write_enable_x ==  1'b1) && (q_x ==  1'b1);
assign eret_q_x = (eret_x ==  1'b1) && (q_x ==  1'b1);
  
         

`line 2504 "/tmp/lm32-customizer/tmp.v"

assign load_q_x = (load_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2509 "/tmp/lm32-customizer/tmp.v"

                  ;
assign store_q_x = (store_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2515 "/tmp/lm32-customizer/tmp.v"

                  ;
  
         

`line 2519 "/tmp/lm32-customizer/tmp.v"
                              
assign q_m = (valid_m ==  1'b1) && (kill_m ==  1'b0) && (exception_m ==  1'b0);
assign load_q_m = (load_m ==  1'b1) && (q_m ==  1'b1);
assign store_q_m = (store_m ==  1'b1) && (q_m ==  1'b1);
  
         
                 

`line 2526 "/tmp/lm32-customizer/tmp.v"

assign exception_q_w = ((exception_w ==  1'b1) && (valid_w ==  1'b1));        
 
`line 2528 "/tmp/lm32-customizer/tmp.v"


assign write_enable_q_x = (write_enable_x ==  1'b1) && (valid_x ==  1'b1) && (branch_flushX_m ==  1'b0);
assign write_enable_q_m = (write_enable_m ==  1'b1) && (valid_m ==  1'b1);
assign write_enable_q_w = (write_enable_w ==  1'b1) && (valid_w ==  1'b1);

assign reg_write_enable_q_w = (write_enable_w ==  1'b1) && (kill_w ==  1'b0) && (valid_w ==  1'b1);


assign cfg = {
               6'h02,
              watchpoints[3:0],
              breakpoints[3:0],
              interrupts[5:0],
  
              

`line 2544 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2546 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2549 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2551 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2554 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2556 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2559 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2561 "/tmp/lm32-customizer/tmp.v"

  
`line 2562 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2566 "/tmp/lm32-customizer/tmp.v"

  
`line 2567 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2571 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2574 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2576 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2579 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2581 "/tmp/lm32-customizer/tmp.v"

  
`line 2582 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2586 "/tmp/lm32-customizer/tmp.v"

  
`line 2587 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2591 "/tmp/lm32-customizer/tmp.v"

  
`line 2592 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2596 "/tmp/lm32-customizer/tmp.v"

  
`line 2597 "/tmp/lm32-customizer/tmp.v"
 
               1'b1
 
              

`line 2601 "/tmp/lm32-customizer/tmp.v"

              };

assign cfg2 = {
		     30'b0,
  
		     

`line 2608 "/tmp/lm32-customizer/tmp.v"

		      1'b0,
 
`line 2610 "/tmp/lm32-customizer/tmp.v"

  
		     

`line 2613 "/tmp/lm32-customizer/tmp.v"

		      1'b0
 
`line 2615 "/tmp/lm32-customizer/tmp.v"

		     };
   

  
`line 2619 "/tmp/lm32-customizer/tmp.v"

assign iflush = (   (csr_write_enable_d ==  1'b1) 
                 && (csr_d ==  3'h3)
                 && (stall_d ==  1'b0)
                 && (kill_d ==  1'b0)
                 && (valid_d ==  1'b1))

  
             
                     
		    

`line 2630 "/tmp/lm32-customizer/tmp.v"

		 ;
 
`line 2632 "/tmp/lm32-customizer/tmp.v"
 
  
`line 2633 "/tmp/lm32-customizer/tmp.v"

assign dflush_x = (   (csr_write_enable_q_x ==  1'b1) 
                   && (csr_x ==  3'h4))

  
               
                       
		      

`line 2641 "/tmp/lm32-customizer/tmp.v"

		   ;
 
`line 2643 "/tmp/lm32-customizer/tmp.v"
 


assign csr_d = read_idx_0_d[ (3-1):0];


always @(*)
begin
    case (csr_x)
  
`line 2652 "/tmp/lm32-customizer/tmp.v"

     3'h0,
     3'h1,
     3'h2:   csr_read_data_x = interrupt_csr_read_data_x;  
 
`line 2656 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2659 "/tmp/lm32-customizer/tmp.v"

     3'h6:  csr_read_data_x = cfg;
     3'h7:  csr_read_data_x = {eba, 8'h00};
  
        

`line 2664 "/tmp/lm32-customizer/tmp.v"

  
          
        

`line 2668 "/tmp/lm32-customizer/tmp.v"

     3'ha: csr_read_data_x = cfg2;
      
    default:        csr_read_data_x = { 32{1'bx}};
    endcase
end






always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        eba <= eba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  3'h7) && (stall_x ==  1'b0))
            eba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
               
              

`line 2691 "/tmp/lm32-customizer/tmp.v"

    end
end

  

   

       
          
    
    
                   
              
 
               
              

    


`line 2711 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
            


`line 2722 "/tmp/lm32-customizer/tmp.v"


  
`line 2724 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        data_bus_error_seen <=  1'b0;
    else
    begin
        
        if ((D_ERR_I ==  1'b1) && (D_CYC_O ==  1'b1))
            data_bus_error_seen <=  1'b1;
        
        if ((exception_m ==  1'b1) && (kill_m ==  1'b0))
            data_bus_error_seen <=  1'b0;
    end
end
 
`line 2740 "/tmp/lm32-customizer/tmp.v"

 


  
`line 2744 "/tmp/lm32-customizer/tmp.v"

  
`line 2745 "/tmp/lm32-customizer/tmp.v"

always @(*)
begin
    if (   (icache_refill_request ==  1'b1) 
        || (dcache_refill_request ==  1'b1)
       )
        valid_a =  1'b0;
    else if (   (icache_restart_request ==  1'b1) 
             || (dcache_restart_request ==  1'b1) 
            ) 
        valid_a =  1'b1;
    else 
        valid_a = !icache_refilling && !dcache_refilling;
end 
 
 

        
          
         
          
     
          
 

`line 2769 "/tmp/lm32-customizer/tmp.v"

 
 
 

        
          
         
          
     
          
 


`line 2782 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        valid_f <=  1'b0;
        valid_d <=  1'b0;
        valid_x <=  1'b0;
        valid_m <=  1'b0;
        valid_w <=  1'b0;
    end
    else
    begin    
        if ((kill_f ==  1'b1) || (stall_a ==  1'b0))
  
`line 2797 "/tmp/lm32-customizer/tmp.v"

            valid_f <= valid_a;    
 
              

`line 2801 "/tmp/lm32-customizer/tmp.v"
            
        else if (stall_f ==  1'b0)
            valid_f <=  1'b0;            

        if (kill_d ==  1'b1)
            valid_d <=  1'b0;
        else if (stall_f ==  1'b0)
            valid_d <= valid_f & !kill_f;
        else if (stall_d ==  1'b0)
            valid_d <=  1'b0;
       
        if (stall_d ==  1'b0)
            valid_x <= valid_d & !kill_d;
        else if (kill_x ==  1'b1)
            valid_x <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_x <=  1'b0;

        if (kill_m ==  1'b1)
            valid_m <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_m <= valid_x & !kill_x;
        else if (stall_m ==  1'b0)
            valid_m <=  1'b0;

        if (stall_m ==  1'b0)
            valid_w <= valid_m & !kill_m;
        else 
            valid_w <=  1'b0;        
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
  
                 

`line 2840 "/tmp/lm32-customizer/tmp.v"
        
        operand_0_x <= { 32{1'b0}};
        operand_1_x <= { 32{1'b0}};
        store_operand_x <= { 32{1'b0}};
        branch_target_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};        
        x_result_sel_csr_x <=  1'b0;
  
`line 2846 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_mc_arith_x <=  1'b0;
 
`line 2848 "/tmp/lm32-customizer/tmp.v"

      
          

`line 2851 "/tmp/lm32-customizer/tmp.v"

  
`line 2852 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_sext_x <=  1'b0;
 
`line 2854 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_logic_x <=  1'b0;
  
          

`line 2858 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_add_x <=  1'b0;
        m_result_sel_compare_x <=  1'b0;
  
`line 2861 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_x <=  1'b0;
 
`line 2863 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_x <=  1'b0;
  
`line 2865 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_x <=  1'b0;
 
`line 2867 "/tmp/lm32-customizer/tmp.v"

        x_bypass_enable_x <=  1'b0;
        m_bypass_enable_x <=  1'b0;
        write_enable_x <=  1'b0;
        write_idx_x <= { 5{1'b0}};
        csr_x <= { 3{1'b0}};
        load_x <=  1'b0;
        store_x <=  1'b0;
        size_x <= { 2{1'b0}};
        sign_extend_x <=  1'b0;
        adder_op_x <=  1'b0;
        adder_op_x_n <=  1'b0;
        logic_op_x <= 4'h0;
  
`line 2880 "/tmp/lm32-customizer/tmp.v"

        direction_x <=  1'b0;
 
`line 2882 "/tmp/lm32-customizer/tmp.v"

  
          


`line 2886 "/tmp/lm32-customizer/tmp.v"

        branch_x <=  1'b0;
        branch_predict_x <=  1'b0;
        branch_predict_taken_x <=  1'b0;
        condition_x <=  3'b000;
  
          

`line 2893 "/tmp/lm32-customizer/tmp.v"

        scall_x <=  1'b0;
        eret_x <=  1'b0;
  
          

`line 2898 "/tmp/lm32-customizer/tmp.v"

  
`line 2899 "/tmp/lm32-customizer/tmp.v"

        bus_error_x <=  1'b0;
        data_bus_error_exception_m <=  1'b0;
 
`line 2902 "/tmp/lm32-customizer/tmp.v"

        csr_write_enable_x <=  1'b0;
        operand_m <= { 32{1'b0}};
        branch_target_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        m_result_sel_compare_m <=  1'b0;
  
`line 2907 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_m <=  1'b0;
 
`line 2909 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_m <=  1'b0;
  
`line 2911 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_m <=  1'b0;
 
`line 2913 "/tmp/lm32-customizer/tmp.v"

        m_bypass_enable_m <=  1'b0;
        branch_m <=  1'b0;
        branch_predict_m <=  1'b0;
	branch_predict_taken_m <=  1'b0;
        exception_m <=  1'b0;
        load_m <=  1'b0;
        store_m <=  1'b0;
  
`line 2921 "/tmp/lm32-customizer/tmp.v"

        direction_m <=  1'b0;
 
`line 2923 "/tmp/lm32-customizer/tmp.v"

        write_enable_m <=  1'b0;            
        write_idx_m <= { 5{1'b0}};
        condition_met_m <=  1'b0;
  
`line 2927 "/tmp/lm32-customizer/tmp.v"

        dflush_m <=  1'b0;
 
`line 2929 "/tmp/lm32-customizer/tmp.v"

  
          
                  

`line 2933 "/tmp/lm32-customizer/tmp.v"

        operand_w <= { 32{1'b0}};        
        w_result_sel_load_w <=  1'b0;
  
`line 2936 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <=  1'b0;
 
`line 2938 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= { 5{1'b0}};        
        write_enable_w <=  1'b0;
  
          
                  

`line 2944 "/tmp/lm32-customizer/tmp.v"

        exception_w <=  1'b0;
 
`line 2946 "/tmp/lm32-customizer/tmp.v"

  
`line 2947 "/tmp/lm32-customizer/tmp.v"

        memop_pc_w <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
 
`line 2949 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        
       
        if (stall_x ==  1'b0)
        begin
  
                     

`line 2959 "/tmp/lm32-customizer/tmp.v"
        
            operand_0_x <= d_result_0;
            operand_1_x <= d_result_1;
            store_operand_x <= bypass_data_1;
            branch_target_x <= branch_reg_d ==  1'b1 ? bypass_data_0[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] : branch_target_d;            
            x_result_sel_csr_x <= x_result_sel_csr_d;
  
`line 2965 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_mc_arith_x <= x_result_sel_mc_arith_d;
 
`line 2967 "/tmp/lm32-customizer/tmp.v"

      
              

`line 2970 "/tmp/lm32-customizer/tmp.v"

  
`line 2971 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_sext_x <= x_result_sel_sext_d;
 
`line 2973 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_logic_x <= x_result_sel_logic_d;
  
              

`line 2977 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_add_x <= x_result_sel_add_d;
            m_result_sel_compare_x <= m_result_sel_compare_d;
  
`line 2980 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_x <= m_result_sel_shift_d;
 
`line 2982 "/tmp/lm32-customizer/tmp.v"
    
            w_result_sel_load_x <= w_result_sel_load_d;
  
`line 2984 "/tmp/lm32-customizer/tmp.v"

            w_result_sel_mul_x <= w_result_sel_mul_d;
 
`line 2986 "/tmp/lm32-customizer/tmp.v"

            x_bypass_enable_x <= x_bypass_enable_d;
            m_bypass_enable_x <= m_bypass_enable_d;
            load_x <= load_d;
            store_x <= store_d;
            branch_x <= branch_d;
	    branch_predict_x <= branch_predict_d;
	    branch_predict_taken_x <= branch_predict_taken_d;
	    write_idx_x <= write_idx_d;
            csr_x <= csr_d;
            size_x <= size_d;
            sign_extend_x <= sign_extend_d;
            adder_op_x <= adder_op_d;
            adder_op_x_n <= ~adder_op_d;
            logic_op_x <= logic_op_d;
  
`line 3001 "/tmp/lm32-customizer/tmp.v"

            direction_x <= direction_d;
 
`line 3003 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3006 "/tmp/lm32-customizer/tmp.v"

            condition_x <= condition_d;
            csr_write_enable_x <= csr_write_enable_d;
  
              

`line 3011 "/tmp/lm32-customizer/tmp.v"

            scall_x <= scall_d;
  
`line 3013 "/tmp/lm32-customizer/tmp.v"

            bus_error_x <= bus_error_d;
 
`line 3015 "/tmp/lm32-customizer/tmp.v"

            eret_x <= eret_d;
  
               

`line 3019 "/tmp/lm32-customizer/tmp.v"

            write_enable_x <= write_enable_d;
        end
        
        

        if (stall_m ==  1'b0)
        begin
            operand_m <= x_result;
            m_result_sel_compare_m <= m_result_sel_compare_x;
  
`line 3029 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_m <= m_result_sel_shift_x;
 
`line 3031 "/tmp/lm32-customizer/tmp.v"
    
            if (exception_x ==  1'b1)
            begin
                w_result_sel_load_m <=  1'b0;
  
`line 3035 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <=  1'b0;
 
`line 3037 "/tmp/lm32-customizer/tmp.v"

            end
            else
            begin
                w_result_sel_load_m <= w_result_sel_load_x;
  
`line 3042 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <= w_result_sel_mul_x;
 
`line 3044 "/tmp/lm32-customizer/tmp.v"

            end
            m_bypass_enable_m <= m_bypass_enable_x;
  
`line 3047 "/tmp/lm32-customizer/tmp.v"

            direction_m <= direction_x;
 
`line 3049 "/tmp/lm32-customizer/tmp.v"

            load_m <= load_x;
            store_m <= store_x;
  
`line 3052 "/tmp/lm32-customizer/tmp.v"
    
            branch_m <= branch_x && !branch_taken_x;
 
              
	      
	      

`line 3058 "/tmp/lm32-customizer/tmp.v"

  
	   
	   
	   
	   
	   
                
                  
                
                  
             
                  

`line 3071 "/tmp/lm32-customizer/tmp.v"

            if (exception_x ==  1'b1)
                write_idx_m <=  5'd30;
            else 
                write_idx_m <= write_idx_x;
 
`line 3076 "/tmp/lm32-customizer/tmp.v"

            condition_met_m <= condition_met_x;
  
	      
	        
		     
		        
	           
	     
	           
	   
	       

`line 3088 "/tmp/lm32-customizer/tmp.v"

            branch_target_m <= exception_x ==  1'b1 ? {eba, eid_x, {3{1'b0}}} : branch_target_x;
 
`line 3090 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3093 "/tmp/lm32-customizer/tmp.v"

  
`line 3094 "/tmp/lm32-customizer/tmp.v"

            dflush_m <= dflush_x;
 
`line 3096 "/tmp/lm32-customizer/tmp.v"

            eret_m <= eret_q_x;
  
               

`line 3100 "/tmp/lm32-customizer/tmp.v"

            write_enable_m <= exception_x ==  1'b1 ?  1'b1 : write_enable_x;            
  
              
                      

`line 3105 "/tmp/lm32-customizer/tmp.v"

        end
        
        
        if (stall_m ==  1'b0)
        begin
            if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
                exception_m <=  1'b1;
            else 
                exception_m <=  1'b0;
  
`line 3115 "/tmp/lm32-customizer/tmp.v"

	   data_bus_error_exception_m <=    (data_bus_error_exception ==  1'b1) 
  
					    

`line 3119 "/tmp/lm32-customizer/tmp.v"

					 ;
 
`line 3121 "/tmp/lm32-customizer/tmp.v"

	end
                
        
  
`line 3125 "/tmp/lm32-customizer/tmp.v"

        operand_w <= exception_m ==  1'b1 ? (data_bus_error_exception_m ? {memop_pc_w, 2'b00} : {pc_m, 2'b00}) : m_result;
 
                 

`line 3129 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_load_w <= w_result_sel_load_m;
  
`line 3131 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <= w_result_sel_mul_m;
 
`line 3133 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= write_idx_m;
  
          
          
 
           


`line 3141 "/tmp/lm32-customizer/tmp.v"

        write_enable_w <= write_enable_m;
  
          
          

`line 3146 "/tmp/lm32-customizer/tmp.v"

        exception_w <= exception_m;
 
`line 3148 "/tmp/lm32-customizer/tmp.v"

  
`line 3149 "/tmp/lm32-customizer/tmp.v"

        if (   (stall_m ==  1'b0)
            && (   (load_q_m ==  1'b1) 
                || (store_q_m ==  1'b1)
               )
	   )
          memop_pc_w <= pc_m;
 
`line 3156 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 3160 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        use_buf <=  1'b0;
        reg_data_buf_0 <= { 32{1'b0}};
        reg_data_buf_1 <= { 32{1'b0}};
    end
    else
    begin
        if (stall_d ==  1'b0)
            use_buf <=  1'b0;
        else if (use_buf ==  1'b0)
        begin        
            reg_data_buf_0 <= reg_data_live_0;
            reg_data_buf_1 <= reg_data_live_1;
            use_buf <=  1'b1;
        end        
        if (reg_write_enable_q_w ==  1'b1)
        begin
            if (write_idx_w == read_idx_0_d)
                reg_data_buf_0 <= w_result;
            if (write_idx_w == read_idx_1_d)
                reg_data_buf_1 <= w_result;
        end
    end
end
 
`line 3190 "/tmp/lm32-customizer/tmp.v"


  
`line 3192 "/tmp/lm32-customizer/tmp.v"

 

   

        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
        
     
           
            
        


`line 3236 "/tmp/lm32-customizer/tmp.v"


  

   

       
    
          
          
          
          
          
 
          

          
    
    
    
          
        
 
               

           

                
              
              
              
              
        
        
              
        
             
        
            
                 
            
                
                  
                  
            
            
              
            
              
 
              

        
        
        
              
 
              

        
    


`line 3298 "/tmp/lm32-customizer/tmp.v"

      







initial
begin
  
`line 3309 "/tmp/lm32-customizer/tmp.v"

    reg_0.ram[0] = { 32{1'b0}};
    reg_1.ram[0] = { 32{1'b0}};
 
      

`line 3314 "/tmp/lm32-customizer/tmp.v"

end


        
endmodule 









































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_load_store_unit_full (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_x,
    stall_m,
    kill_x,
    kill_m,
    exception_m,
    store_operand_x,
    load_store_address_x,
    load_store_address_m,
    load_store_address_w,
    load_x,
    store_x,
    load_q_x,
    store_q_x,
    load_q_m,
    store_q_m,
    sign_extend_x,
    size_x,
  
`line 3390 "/tmp/lm32-customizer/tmp.v"

    dflush,
 
`line 3392 "/tmp/lm32-customizer/tmp.v"

  
    

`line 3395 "/tmp/lm32-customizer/tmp.v"

    
    d_dat_i,
    d_ack_i,
    d_err_i,
    d_rty_i,
    
    
  
`line 3403 "/tmp/lm32-customizer/tmp.v"

    dcache_refill_request,
    dcache_restart_request,
    dcache_stall_request,
    dcache_refilling,
 
`line 3408 "/tmp/lm32-customizer/tmp.v"
    
  
    
    
    
    

`line 3414 "/tmp/lm32-customizer/tmp.v"
			     
    load_data_w,
    stall_wb_load,
    
    d_dat_o,
    d_adr_o,
    d_cyc_o,
    d_sel_o,
    d_stb_o,
    d_we_o,
    d_cti_o,
    d_lock_o,
    d_bte_o
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          
input kill_x;                                           
input kill_m;                                           
input exception_m;                                      

input [ (32-1):0] store_operand_x;                 
input [ (32-1):0] load_store_address_x;            
input [ (32-1):0] load_store_address_m;            
input [1:0] load_store_address_w;                       
input load_x;                                           
input store_x;                                          
input load_q_x;                                         
input store_q_x;                                        
input load_q_m;                                         
input store_q_m;                                        
input sign_extend_x;                                    
input [ 1:0] size_x;                          

  
`line 3471 "/tmp/lm32-customizer/tmp.v"

input dflush;                                           
 
`line 3473 "/tmp/lm32-customizer/tmp.v"


     
                       

`line 3477 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] d_dat_i;                         
input d_ack_i;                                          
input d_err_i;                                          
input d_rty_i;                                          





  
`line 3488 "/tmp/lm32-customizer/tmp.v"

output dcache_refill_request;                           
wire   dcache_refill_request;
output dcache_restart_request;                          
wire   dcache_restart_request;
output dcache_stall_request;                            
wire   dcache_stall_request;
output dcache_refilling;
wire   dcache_refilling;
 
`line 3497 "/tmp/lm32-customizer/tmp.v"


     
                                
    
                  
    
                                       
   
                             
                               

`line 3508 "/tmp/lm32-customizer/tmp.v"

   
output [ (32-1):0] load_data_w;                    
reg    [ (32-1):0] load_data_w;
output stall_wb_load;                                   
reg    stall_wb_load;

output [ (32-1):0] d_dat_o;                        
reg    [ (32-1):0] d_dat_o;
output [ (32-1):0] d_adr_o;                        
reg    [ (32-1):0] d_adr_o;
output d_cyc_o;                                         
reg    d_cyc_o;
output [ (4-1):0] d_sel_o;                 
reg    [ (4-1):0] d_sel_o;
output d_stb_o;                                         
reg    d_stb_o; 
output d_we_o;                                          
reg    d_we_o;
output [ (3-1):0] d_cti_o;                       
reg    [ (3-1):0] d_cti_o;
output d_lock_o;                                        
reg    d_lock_o;
output [ (2-1):0] d_bte_o;                       
wire   [ (2-1):0] d_bte_o;






reg [ 1:0] size_m;
reg [ 1:0] size_w;
reg sign_extend_m;
reg sign_extend_w;
reg [ (32-1):0] store_data_x;       
reg [ (32-1):0] store_data_m;       
reg [ (4-1):0] byte_enable_x;
reg [ (4-1):0] byte_enable_m;
wire [ (32-1):0] data_m;
reg [ (32-1):0] data_w;

  
`line 3550 "/tmp/lm32-customizer/tmp.v"

wire dcache_select_x;                                   
reg dcache_select_m;
wire [ (32-1):0] dcache_data_m;                    
wire [ (32-1):0] dcache_refill_address;            
reg dcache_refill_ready;                                
wire [ (3-1):0] first_cycle_type;                
wire [ (3-1):0] next_cycle_type;                 
wire last_word;                                         
wire [ (32-1):0] first_address;                    
 
`line 3560 "/tmp/lm32-customizer/tmp.v"

  
                                      
 
                                      
                    
                      
                        
                  

`line 3569 "/tmp/lm32-customizer/tmp.v"

wire wb_select_x;                                       
  
                                      
  

`line 3574 "/tmp/lm32-customizer/tmp.v"

reg wb_select_m;
reg [ (32-1):0] wb_data_m;                         
reg wb_load_complete;                                   





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






  
   
    
     
       
                    

       
       
       
       
       
       
	
              
              
              
              
              
              

                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	    
	                   
	                   
	                        
	                           
	    
	                         
	                         
	    
   
   
               
              
              
    
      
        
       
	    
	    
       
     
       
	     
	      
	  
	         
                 
	         
	            
	             
		 
	         
	     
	      
	  
	          
		   
	       
	        
       
   
          

`line 3671 "/tmp/lm32-customizer/tmp.v"


  
`line 3673 "/tmp/lm32-customizer/tmp.v"


lm32_dcache_full #(
    .associativity          (associativity),
    .sets                   (sets),
    .bytes_per_line         (bytes_per_line),
    .base_address           (base_address),
    .limit                  (limit)
    ) dcache ( 
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),      
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .address_x              (load_store_address_x),
    .address_m              (load_store_address_m),
    .load_q_m               (load_q_m & dcache_select_m),
    .store_q_m              (store_q_m & dcache_select_m),
    .store_data             (store_data_m),
    .store_byte_select      (byte_enable_m & {4{dcache_select_m}}),
    .refill_ready           (dcache_refill_ready),
    .refill_data            (wb_data_m),
    .dflush                 (dflush),
    
    .stall_request          (dcache_stall_request),
    .restart_request        (dcache_restart_request),
    .refill_request         (dcache_refill_request),
    .refill_address         (dcache_refill_address),
    .refilling              (dcache_refilling),
    .load_data              (dcache_data_m)
    );
 
`line 3705 "/tmp/lm32-customizer/tmp.v"







  
            
                             

`line 3715 "/tmp/lm32-customizer/tmp.v"


  
            
                             

`line 3720 "/tmp/lm32-customizer/tmp.v"

   
  
`line 3722 "/tmp/lm32-customizer/tmp.v"

   assign dcache_select_x =    (load_store_address_x >=  32'h0) 
                            && (load_store_address_x <=  32'h7fffffff)
  
                               

`line 3727 "/tmp/lm32-customizer/tmp.v"

  
                               

`line 3730 "/tmp/lm32-customizer/tmp.v"

                     ;
 
`line 3732 "/tmp/lm32-customizer/tmp.v"

	  
   assign wb_select_x =     1'b1
  
`line 3735 "/tmp/lm32-customizer/tmp.v"

                        && !dcache_select_x 
 
`line 3737 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3740 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3743 "/tmp/lm32-customizer/tmp.v"

                     ;


always @(*)
begin
    case (size_x)
     2'b00:  store_data_x = {4{store_operand_x[7:0]}};
     2'b11: store_data_x = {2{store_operand_x[15:0]}};
     2'b10:  store_data_x = store_operand_x;    
    default:          store_data_x = { 32{1'bx}};
    endcase
end


always @(*)
begin
    casez ({size_x, load_store_address_x[1:0]})
    { 2'b00, 2'b11}:  byte_enable_x = 4'b0001;
    { 2'b00, 2'b10}:  byte_enable_x = 4'b0010;
    { 2'b00, 2'b01}:  byte_enable_x = 4'b0100;
    { 2'b00, 2'b00}:  byte_enable_x = 4'b1000;
    { 2'b11, 2'b1?}: byte_enable_x = 4'b0011;
    { 2'b11, 2'b0?}: byte_enable_x = 4'b1100;
    { 2'b10, 2'b??}:  byte_enable_x = 4'b1111;
    default:                   byte_enable_x = 4'bxxxx;
    endcase
end

  

       
       
       
       

`line 3778 "/tmp/lm32-customizer/tmp.v"


  

       
       
       
       

`line 3786 "/tmp/lm32-customizer/tmp.v"


  
   
   
   
   
            
	                     
	                     
   
   
           
	                  
   
   
   
   
   
           
	                            

`line 3807 "/tmp/lm32-customizer/tmp.v"

   
  
`line 3809 "/tmp/lm32-customizer/tmp.v"

   
   
   
         
                    
                       
                      
                        
                         
                        
  
   
         
                    
                       
                      
                      
  
 
`line 3828 "/tmp/lm32-customizer/tmp.v"

    
   
         
                    
                       
                      
                      
  
`line 3836 "/tmp/lm32-customizer/tmp.v"

   
   assign data_m = wb_select_m ==  1'b1 
                   ? wb_data_m 
                   : dcache_data_m;
   
`line 3841 "/tmp/lm32-customizer/tmp.v"

  
`line 3842 "/tmp/lm32-customizer/tmp.v"

 
  
   
   
         
                     
                      
                      
                      
  
   
         
                     
                    
  
 
   
   
         
                     
                    
  
   
      
  
 

`line 3869 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    casez ({size_w, load_store_address_w[1:0]})
    { 2'b00, 2'b11}:  load_data_w = {{24{sign_extend_w & data_w[7]}}, data_w[7:0]};
    { 2'b00, 2'b10}:  load_data_w = {{24{sign_extend_w & data_w[15]}}, data_w[15:8]};
    { 2'b00, 2'b01}:  load_data_w = {{24{sign_extend_w & data_w[23]}}, data_w[23:16]};
    { 2'b00, 2'b00}:  load_data_w = {{24{sign_extend_w & data_w[31]}}, data_w[31:24]};
    { 2'b11, 2'b1?}: load_data_w = {{16{sign_extend_w & data_w[15]}}, data_w[15:0]};
    { 2'b11, 2'b0?}: load_data_w = {{16{sign_extend_w & data_w[31]}}, data_w[31:16]};
    { 2'b10, 2'b??}:  load_data_w = data_w;
    default:                   load_data_w = { 32{1'bx}};
    endcase
end


assign d_bte_o =  2'b00;

  
`line 3889 "/tmp/lm32-customizer/tmp.v"
                

generate 
    case (bytes_per_line)
    4:
    begin
assign first_cycle_type =  3'b111;
assign next_cycle_type =  3'b111;
assign last_word =  1'b1;
assign first_address = {dcache_refill_address[ 32-1:2], 2'b00};
    end
    8:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type =  3'b111;
assign last_word = (&d_adr_o[addr_offset_msb:addr_offset_lsb]) == 1'b1;
assign first_address = {dcache_refill_address[ 32-1:addr_offset_msb+1], {addr_offset_width{1'b0}}, 2'b00};
    end
    16:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type = d_adr_o[addr_offset_msb] == 1'b1 ?  3'b111 :  3'b010;
assign last_word = (&d_adr_o[addr_offset_msb:addr_offset_lsb]) == 1'b1;
assign first_address = {dcache_refill_address[ 32-1:addr_offset_msb+1], {addr_offset_width{1'b0}}, 2'b00};
    end
    endcase
endgenerate
 
`line 3916 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        d_cyc_o <=  1'b0;
        d_stb_o <=  1'b0;
        d_dat_o <= { 32{1'b0}};
        d_adr_o <= { 32{1'b0}};
        d_sel_o <= { 4{ 1'b0}};
        d_we_o <=  1'b0;
        d_cti_o <=  3'b111;
        d_lock_o <=  1'b0;
        wb_data_m <= { 32{1'b0}};
        wb_load_complete <=  1'b0;
        stall_wb_load <=  1'b0;
  
`line 3938 "/tmp/lm32-customizer/tmp.v"
                
        dcache_refill_ready <=  1'b0;
 
`line 3940 "/tmp/lm32-customizer/tmp.v"
                
    end
    else
    begin
  
`line 3944 "/tmp/lm32-customizer/tmp.v"
 
        
        dcache_refill_ready <=  1'b0;
 
`line 3947 "/tmp/lm32-customizer/tmp.v"
                
        
        if (d_cyc_o ==  1'b1)
        begin
            
            if ((d_ack_i ==  1'b1) || (d_err_i ==  1'b1))
            begin
  
`line 3954 "/tmp/lm32-customizer/tmp.v"
                
                if ((dcache_refilling ==  1'b1) && (!last_word))
                begin
                    
                    d_adr_o[addr_offset_msb:addr_offset_lsb] <= d_adr_o[addr_offset_msb:addr_offset_lsb] + 1'b1;
                end
                else
 
`line 3961 "/tmp/lm32-customizer/tmp.v"
                
                begin
                    
                    d_cyc_o <=  1'b0;
                    d_stb_o <=  1'b0;
                    d_lock_o <=  1'b0;
                end
  
`line 3968 "/tmp/lm32-customizer/tmp.v"
    
                d_cti_o <= next_cycle_type;
                
                dcache_refill_ready <= dcache_refilling;
 
`line 3972 "/tmp/lm32-customizer/tmp.v"

                
                wb_data_m <= d_dat_i;
                
                wb_load_complete <= !d_we_o;
            end
            
            if (d_err_i ==  1'b1)
                $display ("Data bus error. Address: %x", d_adr_o);
            
        end
        else
        begin
  
`line 3985 "/tmp/lm32-customizer/tmp.v"
                
            if (dcache_refill_request ==  1'b1)
            begin
                
                d_adr_o <= first_address;
                d_cyc_o <=  1'b1;
                d_sel_o <= { 32/8{ 1'b1}};
                d_stb_o <=  1'b1;                
                d_we_o <=  1'b0;
                d_cti_o <= first_cycle_type;
                
            end
            else 
 
`line 3998 "/tmp/lm32-customizer/tmp.v"
            
                 if (   (store_q_m ==  1'b1)
                     && (stall_m ==  1'b0)
  
                        

`line 4003 "/tmp/lm32-customizer/tmp.v"

  
		        

`line 4006 "/tmp/lm32-customizer/tmp.v"
			
                    )
            begin
                
                d_dat_o <= store_data_m;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b1;
                d_cti_o <=  3'b111;
            end        
            else if (   (load_q_m ==  1'b1) 
                     && (wb_select_m ==  1'b1) 
                     && (wb_load_complete ==  1'b0)
                     
                    )
            begin
                
                stall_wb_load <=  1'b0;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b0;
                d_cti_o <=  3'b111;
            end
        end
        
        if (stall_m ==  1'b0)
            wb_load_complete <=  1'b0;
        
        if ((load_q_x ==  1'b1) && (wb_select_x ==  1'b1) && (stall_x ==  1'b0))
            stall_wb_load <=  1'b1;
        
        if ((kill_m ==  1'b1) || (exception_m ==  1'b1))
            stall_wb_load <=  1'b0;
    end
end




always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        sign_extend_m <=  1'b0;
        size_m <= 2'b00;
        byte_enable_m <=  1'b0;
        store_data_m <= { 32{1'b0}};
  
`line 4057 "/tmp/lm32-customizer/tmp.v"

        dcache_select_m <=  1'b0;
 
`line 4059 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4062 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4065 "/tmp/lm32-customizer/tmp.v"

        wb_select_m <=  1'b0;        
    end
    else
    begin
        if (stall_m ==  1'b0)
        begin
            sign_extend_m <= sign_extend_x;
            size_m <= size_x;
            byte_enable_m <= byte_enable_x;    
            store_data_m <= store_data_x;
  
`line 4076 "/tmp/lm32-customizer/tmp.v"

            dcache_select_m <= dcache_select_x;
 
`line 4078 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4081 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4084 "/tmp/lm32-customizer/tmp.v"

            wb_select_m <= wb_select_x;
        end
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        size_w <= 2'b00;
        data_w <= { 32{1'b0}};
        sign_extend_w <=  1'b0;
    end
    else
    begin
        size_w <= size_m;
        data_w <= data_m;
        sign_extend_w <= sign_extend_m;
    end
end








always @(posedge clk_i)
begin
    if (((load_q_m ==  1'b1) || (store_q_m ==  1'b1)) && (stall_m ==  1'b0)) 
    begin
        if ((size_m ===  2'b11) && (load_store_address_m[0] !== 1'b0))
            $display ("Warning: Non-aligned halfword access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
        if ((size_m ===  2'b10) && (load_store_address_m[1:0] !== 2'b00))
            $display ("Warning: Non-aligned word access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
    end
end



endmodule


































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"



  
`line 4165 "/tmp/lm32-customizer/tmp.v"

  
`line 4166 "/tmp/lm32-customizer/tmp.v"



  
`line 4169 "/tmp/lm32-customizer/tmp.v"

  
`line 4170 "/tmp/lm32-customizer/tmp.v"

  
`line 4171 "/tmp/lm32-customizer/tmp.v"

  
`line 4172 "/tmp/lm32-customizer/tmp.v"

  
`line 4173 "/tmp/lm32-customizer/tmp.v"

  
`line 4174 "/tmp/lm32-customizer/tmp.v"

  
`line 4175 "/tmp/lm32-customizer/tmp.v"

  
`line 4176 "/tmp/lm32-customizer/tmp.v"

  
`line 4177 "/tmp/lm32-customizer/tmp.v"

  
`line 4178 "/tmp/lm32-customizer/tmp.v"

  
`line 4179 "/tmp/lm32-customizer/tmp.v"

  
`line 4180 "/tmp/lm32-customizer/tmp.v"

  
`line 4181 "/tmp/lm32-customizer/tmp.v"

  
`line 4182 "/tmp/lm32-customizer/tmp.v"

  
`line 4183 "/tmp/lm32-customizer/tmp.v"

  
`line 4184 "/tmp/lm32-customizer/tmp.v"

  
`line 4185 "/tmp/lm32-customizer/tmp.v"

  
`line 4186 "/tmp/lm32-customizer/tmp.v"

  
`line 4187 "/tmp/lm32-customizer/tmp.v"

  
`line 4188 "/tmp/lm32-customizer/tmp.v"

  
`line 4189 "/tmp/lm32-customizer/tmp.v"

  
`line 4190 "/tmp/lm32-customizer/tmp.v"

  
`line 4191 "/tmp/lm32-customizer/tmp.v"

  
`line 4192 "/tmp/lm32-customizer/tmp.v"

  
`line 4193 "/tmp/lm32-customizer/tmp.v"

  
`line 4194 "/tmp/lm32-customizer/tmp.v"

  
`line 4195 "/tmp/lm32-customizer/tmp.v"

  
`line 4196 "/tmp/lm32-customizer/tmp.v"

  
`line 4197 "/tmp/lm32-customizer/tmp.v"

  
`line 4198 "/tmp/lm32-customizer/tmp.v"

  
`line 4199 "/tmp/lm32-customizer/tmp.v"

  
`line 4200 "/tmp/lm32-customizer/tmp.v"

  
`line 4201 "/tmp/lm32-customizer/tmp.v"

  
`line 4202 "/tmp/lm32-customizer/tmp.v"

  
`line 4203 "/tmp/lm32-customizer/tmp.v"

  
`line 4204 "/tmp/lm32-customizer/tmp.v"

  
`line 4205 "/tmp/lm32-customizer/tmp.v"

  
`line 4206 "/tmp/lm32-customizer/tmp.v"

  
`line 4207 "/tmp/lm32-customizer/tmp.v"

  
`line 4208 "/tmp/lm32-customizer/tmp.v"

  
`line 4209 "/tmp/lm32-customizer/tmp.v"

  
`line 4210 "/tmp/lm32-customizer/tmp.v"

  
`line 4211 "/tmp/lm32-customizer/tmp.v"

  
`line 4212 "/tmp/lm32-customizer/tmp.v"

  
`line 4213 "/tmp/lm32-customizer/tmp.v"






module lm32_decoder_full (
    
    instruction,
    
    d_result_sel_0,
    d_result_sel_1,        
    x_result_sel_csr,
  
`line 4226 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_mc_arith,
 
`line 4228 "/tmp/lm32-customizer/tmp.v"
    
      
    

`line 4231 "/tmp/lm32-customizer/tmp.v"

  
`line 4232 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext,
 
`line 4234 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_logic,
  
    

`line 4238 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add,
    m_result_sel_compare,
  
`line 4241 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift,  
 
`line 4243 "/tmp/lm32-customizer/tmp.v"
    
    w_result_sel_load,
  
`line 4245 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul,
 
`line 4247 "/tmp/lm32-customizer/tmp.v"

    x_bypass_enable,
    m_bypass_enable,
    read_enable_0,
    read_idx_0,
    read_enable_1,
    read_idx_1,
    write_enable,
    write_idx,
    immediate,
    branch_offset,
    load,
    store,
    size,
    sign_extend,
    adder_op,
    logic_op,
  
`line 4264 "/tmp/lm32-customizer/tmp.v"

    direction,
 
`line 4266 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4270 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4273 "/tmp/lm32-customizer/tmp.v"

  
`line 4274 "/tmp/lm32-customizer/tmp.v"

    divide,
    modulus,
 
`line 4277 "/tmp/lm32-customizer/tmp.v"

    branch,
    branch_reg,
    condition,
    bi_conditional,
    bi_unconditional,
  
    

`line 4285 "/tmp/lm32-customizer/tmp.v"

    scall,
    eret,
  
    

`line 4290 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4293 "/tmp/lm32-customizer/tmp.v"

    csr_write_enable
    );





input [ (32-1):0] instruction;       





output [ 0:0] d_result_sel_0;
reg    [ 0:0] d_result_sel_0;
output [ 1:0] d_result_sel_1;
reg    [ 1:0] d_result_sel_1;
output x_result_sel_csr;
reg    x_result_sel_csr;
  
`line 4313 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_mc_arith;
reg    x_result_sel_mc_arith;
 
`line 4316 "/tmp/lm32-customizer/tmp.v"

      
 
    

`line 4320 "/tmp/lm32-customizer/tmp.v"

  
`line 4321 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_sext;
reg    x_result_sel_sext;
 
`line 4324 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_logic;
reg    x_result_sel_logic;
  
 
    

`line 4330 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_add;
reg    x_result_sel_add;
output m_result_sel_compare;
reg    m_result_sel_compare;
  
`line 4335 "/tmp/lm32-customizer/tmp.v"

output m_result_sel_shift;
reg    m_result_sel_shift;
 
`line 4338 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_load;
reg    w_result_sel_load;
  
`line 4341 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_mul;
reg    w_result_sel_mul;
 
`line 4344 "/tmp/lm32-customizer/tmp.v"

output x_bypass_enable;
wire   x_bypass_enable;
output m_bypass_enable;
wire   m_bypass_enable;
output read_enable_0;
wire   read_enable_0;
output [ (5-1):0] read_idx_0;
wire   [ (5-1):0] read_idx_0;
output read_enable_1;
wire   read_enable_1;
output [ (5-1):0] read_idx_1;
wire   [ (5-1):0] read_idx_1;
output write_enable;
wire   write_enable;
output [ (5-1):0] write_idx;
wire   [ (5-1):0] write_idx;
output [ (32-1):0] immediate;
wire   [ (32-1):0] immediate;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
wire   [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
output load;
wire   load;
output store;
wire   store;
output [ 1:0] size;
wire   [ 1:0] size;
output sign_extend;
wire   sign_extend;
output adder_op;
wire   adder_op;
output [ 3:0] logic_op;
wire   [ 3:0] logic_op;
  
`line 4377 "/tmp/lm32-customizer/tmp.v"

output direction;
wire   direction;
 
`line 4380 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4386 "/tmp/lm32-customizer/tmp.v"

  
 
   

`line 4390 "/tmp/lm32-customizer/tmp.v"

  
`line 4391 "/tmp/lm32-customizer/tmp.v"

output divide;
wire   divide;
output modulus;
wire   modulus;
 
`line 4396 "/tmp/lm32-customizer/tmp.v"

output branch;
wire   branch;
output branch_reg;
wire   branch_reg;
output [ (3-1):0] condition;
wire   [ (3-1):0] condition;
output bi_conditional;
wire bi_conditional;
output bi_unconditional;
wire bi_unconditional;
  
 
   

`line 4410 "/tmp/lm32-customizer/tmp.v"

output scall;
wire   scall;
output eret;
wire   eret;
  
 
   

`line 4418 "/tmp/lm32-customizer/tmp.v"

  
  
    

`line 4422 "/tmp/lm32-customizer/tmp.v"

output csr_write_enable;
wire   csr_write_enable;





wire [ (32-1):0] extended_immediate;       
wire [ (32-1):0] high_immediate;           
wire [ (32-1):0] call_immediate;           
wire [ (32-1):0] branch_immediate;         
wire sign_extend_immediate;                     
wire select_high_immediate;                     
wire select_call_immediate;                     





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







assign op_add    = instruction[ 30:26] ==  5'b01101;
assign op_and    = instruction[ 30:26] ==  5'b01000;
assign op_andhi  = instruction[ 31:26] ==  6'b011000;
assign op_b      = instruction[ 31:26] ==  6'b110000;
assign op_bi     = instruction[ 31:26] ==  6'b111000;
assign op_be     = instruction[ 31:26] ==  6'b010001;
assign op_bg     = instruction[ 31:26] ==  6'b010010;
assign op_bge    = instruction[ 31:26] ==  6'b010011;
assign op_bgeu   = instruction[ 31:26] ==  6'b010100;
assign op_bgu    = instruction[ 31:26] ==  6'b010101;
assign op_bne    = instruction[ 31:26] ==  6'b010111;
assign op_call   = instruction[ 31:26] ==  6'b110110;
assign op_calli  = instruction[ 31:26] ==  6'b111110;
assign op_cmpe   = instruction[ 30:26] ==  5'b11001;
assign op_cmpg   = instruction[ 30:26] ==  5'b11010;
assign op_cmpge  = instruction[ 30:26] ==  5'b11011;
assign op_cmpgeu = instruction[ 30:26] ==  5'b11100;
assign op_cmpgu  = instruction[ 30:26] ==  5'b11101;
assign op_cmpne  = instruction[ 30:26] ==  5'b11111;
  
`line 4468 "/tmp/lm32-customizer/tmp.v"

assign op_divu   = instruction[ 31:26] ==  6'b100011;
 
`line 4470 "/tmp/lm32-customizer/tmp.v"

assign op_lb     = instruction[ 31:26] ==  6'b000100;
assign op_lbu    = instruction[ 31:26] ==  6'b010000;
assign op_lh     = instruction[ 31:26] ==  6'b000111;
assign op_lhu    = instruction[ 31:26] ==  6'b001011;
assign op_lw     = instruction[ 31:26] ==  6'b001010;
  
`line 4476 "/tmp/lm32-customizer/tmp.v"

assign op_modu   = instruction[ 31:26] ==  6'b110001;
 
`line 4478 "/tmp/lm32-customizer/tmp.v"

  
`line 4479 "/tmp/lm32-customizer/tmp.v"

assign op_mul    = instruction[ 30:26] ==  5'b00010;
 
`line 4481 "/tmp/lm32-customizer/tmp.v"

assign op_nor    = instruction[ 30:26] ==  5'b00001;
assign op_or     = instruction[ 30:26] ==  5'b01110;
assign op_orhi   = instruction[ 31:26] ==  6'b011110;
assign op_raise  = instruction[ 31:26] ==  6'b101011;
assign op_rcsr   = instruction[ 31:26] ==  6'b100100;
assign op_sb     = instruction[ 31:26] ==  6'b001100;
  
`line 4488 "/tmp/lm32-customizer/tmp.v"

assign op_sextb  = instruction[ 31:26] ==  6'b101100;
assign op_sexth  = instruction[ 31:26] ==  6'b110111;
 
`line 4491 "/tmp/lm32-customizer/tmp.v"

assign op_sh     = instruction[ 31:26] ==  6'b000011;
  
`line 4493 "/tmp/lm32-customizer/tmp.v"

assign op_sl     = instruction[ 30:26] ==  5'b01111;      
 
`line 4495 "/tmp/lm32-customizer/tmp.v"

assign op_sr     = instruction[ 30:26] ==  5'b00101;
assign op_sru    = instruction[ 30:26] ==  5'b00000;
assign op_sub    = instruction[ 31:26] ==  6'b110010;
assign op_sw     = instruction[ 31:26] ==  6'b010110;
assign op_user   = instruction[ 31:26] ==  6'b110011;
assign op_wcsr   = instruction[ 31:26] ==  6'b110100;
assign op_xnor   = instruction[ 30:26] ==  5'b01001;
assign op_xor    = instruction[ 30:26] ==  5'b00110;


assign arith = op_add | op_sub;
assign logical = op_and | op_andhi | op_nor | op_or | op_orhi | op_xor | op_xnor;
assign cmp = op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne;
assign bi_conditional = op_be | op_bg | op_bge | op_bgeu  | op_bgu | op_bne;
assign bi_unconditional = op_bi;
assign bra = op_b | bi_unconditional | bi_conditional;
assign call = op_call | op_calli;
  
`line 4513 "/tmp/lm32-customizer/tmp.v"

assign shift = op_sl | op_sr | op_sru;
 
`line 4515 "/tmp/lm32-customizer/tmp.v"

  
     

`line 4518 "/tmp/lm32-customizer/tmp.v"

  
   
     

`line 4522 "/tmp/lm32-customizer/tmp.v"

  
`line 4523 "/tmp/lm32-customizer/tmp.v"

assign sext = op_sextb | op_sexth;
 
`line 4525 "/tmp/lm32-customizer/tmp.v"

  
`line 4526 "/tmp/lm32-customizer/tmp.v"

assign multiply = op_mul;
 
`line 4528 "/tmp/lm32-customizer/tmp.v"

  
`line 4529 "/tmp/lm32-customizer/tmp.v"

assign divide = op_divu; 
assign modulus = op_modu;
 
`line 4532 "/tmp/lm32-customizer/tmp.v"

assign load = op_lb | op_lbu | op_lh | op_lhu | op_lw;
assign store = op_sb | op_sh | op_sw;


always @(*)
begin
    
    if (call) 
        d_result_sel_0 =  1'b1;
    else 
        d_result_sel_0 =  1'b0;
    if (call) 
        d_result_sel_1 =  2'b00;         
    else if ((instruction[31] == 1'b0) && !bra) 
        d_result_sel_1 =  2'b10;
    else
        d_result_sel_1 =  2'b01; 
    
    x_result_sel_csr =  1'b0;
  
`line 4552 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_mc_arith =  1'b0;
 
`line 4554 "/tmp/lm32-customizer/tmp.v"

  
      

`line 4557 "/tmp/lm32-customizer/tmp.v"

  
`line 4558 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext =  1'b0;
 
`line 4560 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_logic =  1'b0;
          
      

`line 4564 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add =  1'b0;
    if (op_rcsr)
        x_result_sel_csr =  1'b1;
  
`line 4568 "/tmp/lm32-customizer/tmp.v"
    
  
         
          

`line 4572 "/tmp/lm32-customizer/tmp.v"

  
`line 4573 "/tmp/lm32-customizer/tmp.v"

    else if (divide | modulus)
        x_result_sel_mc_arith =  1'b1;        
 
`line 4576 "/tmp/lm32-customizer/tmp.v"

  
      
                      

`line 4580 "/tmp/lm32-customizer/tmp.v"

 
`line 4581 "/tmp/lm32-customizer/tmp.v"

  
      
                  

`line 4585 "/tmp/lm32-customizer/tmp.v"

  
`line 4586 "/tmp/lm32-customizer/tmp.v"

    else if (sext)
        x_result_sel_sext =  1'b1;
 
`line 4589 "/tmp/lm32-customizer/tmp.v"
        
    else if (logical) 
        x_result_sel_logic =  1'b1;
          
      
          

`line 4595 "/tmp/lm32-customizer/tmp.v"

    else 
        x_result_sel_add =  1'b1;        
    
    

    m_result_sel_compare = cmp;
  
`line 4602 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift = shift;
 
`line 4604 "/tmp/lm32-customizer/tmp.v"


    
    w_result_sel_load = load;
  
`line 4608 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul = op_mul; 
 
`line 4610 "/tmp/lm32-customizer/tmp.v"

end


assign x_bypass_enable =  arith 
                        | logical
  
                         
                         

`line 4619 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4622 "/tmp/lm32-customizer/tmp.v"

  
`line 4623 "/tmp/lm32-customizer/tmp.v"

                        | divide
                        | modulus
 
`line 4626 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 4629 "/tmp/lm32-customizer/tmp.v"
                  
  
`line 4630 "/tmp/lm32-customizer/tmp.v"

                        | sext 
 
`line 4632 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4635 "/tmp/lm32-customizer/tmp.v"

                        | op_rcsr
                        ;

assign m_bypass_enable = x_bypass_enable 
  
`line 4640 "/tmp/lm32-customizer/tmp.v"

                        | shift
 
`line 4642 "/tmp/lm32-customizer/tmp.v"

                        | cmp
                        ;

assign read_enable_0 = ~(op_bi | op_calli);
assign read_idx_0 = instruction[25:21];

assign read_enable_1 = ~(op_bi | op_calli | load);
assign read_idx_1 = instruction[20:16];

assign write_enable = ~(bra | op_raise | store | op_wcsr);
assign write_idx = call
                    ? 5'd29
                    : instruction[31] == 1'b0 
                        ? instruction[20:16] 
                        : instruction[15:11];
                        

assign size = instruction[27:26];

assign sign_extend = instruction[28];                      

assign adder_op = op_sub | op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne | bra;

assign logic_op = instruction[29:26];
  
`line 4667 "/tmp/lm32-customizer/tmp.v"


assign direction = instruction[29];
 
`line 4670 "/tmp/lm32-customizer/tmp.v"


assign branch = bra | call;
assign branch_reg = op_call | op_b;
assign condition = instruction[28:26];      
  
     

`line 4677 "/tmp/lm32-customizer/tmp.v"

assign scall = op_raise & instruction[2];
assign eret = op_b & (instruction[25:21] == 5'd30);
  
       

`line 4682 "/tmp/lm32-customizer/tmp.v"

  

   

`line 4686 "/tmp/lm32-customizer/tmp.v"


assign csr_write_enable = op_wcsr;



assign sign_extend_immediate = ~(op_and | op_cmpgeu | op_cmpgu | op_nor | op_or | op_xnor | op_xor);
assign select_high_immediate = op_andhi | op_orhi;
assign select_call_immediate = instruction[31];

assign high_immediate = {instruction[15:0], 16'h0000};
assign extended_immediate = {{16{sign_extend_immediate & instruction[15]}}, instruction[15:0]};
assign call_immediate = {{6{instruction[25]}}, instruction[25:0]};
assign branch_immediate = {{16{instruction[15]}}, instruction[15:0]};

assign immediate = select_high_immediate ==  1'b1 
                        ? high_immediate 
                        : extended_immediate;
   
assign branch_offset = select_call_immediate ==  1'b1   
                        ? call_immediate
                        : branch_immediate;
    
endmodule 



































					  
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 4748 "/tmp/lm32-customizer/tmp.v"


  
`line 4750 "/tmp/lm32-customizer/tmp.v"

  
`line 4751 "/tmp/lm32-customizer/tmp.v"

  
`line 4752 "/tmp/lm32-customizer/tmp.v"

  
`line 4753 "/tmp/lm32-customizer/tmp.v"


  
`line 4755 "/tmp/lm32-customizer/tmp.v"

  
`line 4756 "/tmp/lm32-customizer/tmp.v"

  
`line 4757 "/tmp/lm32-customizer/tmp.v"

  
`line 4758 "/tmp/lm32-customizer/tmp.v"


  
`line 4760 "/tmp/lm32-customizer/tmp.v"

  
`line 4761 "/tmp/lm32-customizer/tmp.v"

  
`line 4762 "/tmp/lm32-customizer/tmp.v"

  
`line 4763 "/tmp/lm32-customizer/tmp.v"


  
`line 4765 "/tmp/lm32-customizer/tmp.v"

  
`line 4766 "/tmp/lm32-customizer/tmp.v"

  
`line 4767 "/tmp/lm32-customizer/tmp.v"

  
`line 4768 "/tmp/lm32-customizer/tmp.v"

  
`line 4769 "/tmp/lm32-customizer/tmp.v"






module lm32_icache_full ( 
    
    clk_i,
    rst_i,    
    stall_a,
    stall_f,
    address_a,
    address_f,
    read_enable_f,
    refill_ready,
    refill_data,
    iflush,
  
    

`line 4789 "/tmp/lm32-customizer/tmp.v"

    valid_d,
    branch_predict_taken_d,
    
    stall_request,
    restart_request,
    refill_request,
    refill_address,
    refilling,
    inst
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    

localparam addr_offset_width = clogb2(bytes_per_line)-1-2;
localparam addr_set_width = clogb2(sets)-1;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);
localparam addr_set_lsb = (addr_offset_msb+1);
localparam addr_set_msb = (addr_set_lsb+addr_set_width-1);
localparam addr_tag_lsb = (addr_set_msb+1);
localparam addr_tag_msb = clogb2( 32'h7fffffff- 32'h0)-1;
localparam addr_tag_width = (addr_tag_msb-addr_tag_lsb+1);





input clk_i;                                        
input rst_i;                                        

input stall_a;                                      
input stall_f;                                      

input valid_d;                                      
input branch_predict_taken_d;                       
   
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_a;                     
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_f;                     
input read_enable_f;                                

input refill_ready;                                 
input [ (32-1):0] refill_data;          

input iflush;                                       
  
                                      

`line 4844 "/tmp/lm32-customizer/tmp.v"

   




output stall_request;                               
wire   stall_request;
output restart_request;                             
reg    restart_request;
output refill_request;                              
wire   refill_request;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
output refilling;                                   
reg    refilling;
output [ (32-1):0] inst;                
wire   [ (32-1):0] inst;





wire enable;
wire [0:associativity-1] way_mem_we;
wire [ (32-1):0] way_data[0:associativity-1];
wire [ ((addr_tag_width+1)-1):1] way_tag[0:associativity-1];
wire [0:associativity-1] way_valid;
wire [0:associativity-1] way_match;
wire miss;

wire [ (addr_set_width-1):0] tmem_read_address;
wire [ (addr_set_width-1):0] tmem_write_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_read_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_write_address;
wire [ ((addr_tag_width+1)-1):0] tmem_write_data;

reg [ 3:0] state;
wire flushing;
wire check;
wire refill;

reg [associativity-1:0] refill_way_select;
reg [ addr_offset_msb:addr_offset_lsb] refill_offset;
wire last_refill;
reg [ (addr_set_width-1):0] flush_set;

genvar i;





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






   generate
      for (i = 0; i < associativity; i = i + 1)
	begin : memories
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 (32),
	       .address_width              ( (addr_offset_width+addr_set_width))

) 
	   way_0_data_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (dmem_read_address),
	      .enable_read                (enable),
	      .write_address              (dmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i]),
	      .write_data                 (refill_data),    
	      
	      .read_data                  (way_data[i])
	      );
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 ( (addr_tag_width+1)),
	       .address_width              ( addr_set_width)

	       ) 
	   way_0_tag_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (tmem_read_address),
	      .enable_read                (enable),
	      .write_address              (tmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i] | flushing),
	      .write_data                 (tmem_write_data),
	      
	      .read_data                  ({way_tag[i], way_valid[i]})
	      );
	   
	end
endgenerate






generate
    for (i = 0; i < associativity; i = i + 1)
    begin : match
assign way_match[i] = ({way_tag[i], way_valid[i]} == {address_f[ addr_tag_msb:addr_tag_lsb],  1'b1});
    end
endgenerate


generate
    if (associativity == 1)
    begin : inst_1
assign inst = way_match[0] ? way_data[0] : 32'b0;
    end
    else if (associativity == 2)
	 begin : inst_2
assign inst = way_match[0] ? way_data[0] : (way_match[1] ? way_data[1] : 32'b0);
    end
endgenerate


generate 
    if (bytes_per_line > 4)
assign dmem_write_address = {refill_address[ addr_set_msb:addr_set_lsb], refill_offset};
    else
assign dmem_write_address = refill_address[ addr_set_msb:addr_set_lsb];
endgenerate
    
assign dmem_read_address = address_a[ addr_set_msb:addr_offset_lsb];


assign tmem_read_address = address_a[ addr_set_msb:addr_set_lsb];
assign tmem_write_address = flushing 
                                ? flush_set
                                : refill_address[ addr_set_msb:addr_set_lsb];


generate 
    if (bytes_per_line > 4)                            
assign last_refill = refill_offset == {addr_offset_width{1'b1}};
    else
assign last_refill =  1'b1;
endgenerate


assign enable = (stall_a ==  1'b0);


generate
    if (associativity == 1) 
    begin : we_1     
assign way_mem_we[0] = (refill_ready ==  1'b1);
    end
    else
    begin : we_2
assign way_mem_we[0] = (refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1);
assign way_mem_we[1] = (refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1);
    end
endgenerate                     


assign tmem_write_data[ 0] = last_refill & !flushing;
assign tmem_write_data[ ((addr_tag_width+1)-1):1] = refill_address[ addr_tag_msb:addr_tag_lsb];


assign flushing = |state[1:0];
assign check = state[2];
assign refill = state[3];

assign miss = (~(|way_match)) && (read_enable_f ==  1'b1) && (stall_f ==  1'b0) && !(valid_d && branch_predict_taken_d);
assign stall_request = (check ==  1'b0);
assign refill_request = (refill ==  1'b1);
                      





generate
    if (associativity >= 2) 
    begin : way_select      
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_way_select <= {{associativity-1{1'b0}}, 1'b1};
    else
    begin        
        if (miss ==  1'b1)
            refill_way_select <= {refill_way_select[0], refill_way_select[1]};
    end
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refilling <=  1'b0;
    else
        refilling <= refill;
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'b0001;
        flush_set <= { addr_set_width{1'b1}};
        refill_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        restart_request <=  1'b0;
    end
    else 
    begin
        case (state)

        
         4'b0001:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
                state <=  4'b0100;
            flush_set <= flush_set - 1'b1;
        end

        
         4'b0010:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
  
	       
                  
	      

`line 5093 "/tmp/lm32-customizer/tmp.v"

		state <=  4'b0100;
	   
            flush_set <= flush_set - 1'b1;
        end
        
        
         4'b0100:
        begin            
            if (stall_a ==  1'b0)
                restart_request <=  1'b0;
            if (iflush ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b0010;
            end
            else if (miss ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b1000;
            end
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
            begin
                if (last_refill ==  1'b1)
                begin
                    restart_request <=  1'b1;
                    state <=  4'b0100;
                end
            end
        end

        endcase        
    end
end

generate 
    if (bytes_per_line > 4)
    begin

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_offset <= {addr_offset_width{1'b0}};
    else 
    begin
        case (state)
        
        
         4'b0100:
        begin            
            if (iflush ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
            else if (miss ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
                refill_offset <= refill_offset + 1'b1;
        end

        endcase        
    end
end
    end
endgenerate
   
endmodule

 
`line 5169 "/tmp/lm32-customizer/tmp.v"































								 
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 5203 "/tmp/lm32-customizer/tmp.v"


  
`line 5205 "/tmp/lm32-customizer/tmp.v"

  
`line 5206 "/tmp/lm32-customizer/tmp.v"

  
`line 5207 "/tmp/lm32-customizer/tmp.v"

  
`line 5208 "/tmp/lm32-customizer/tmp.v"


  
`line 5210 "/tmp/lm32-customizer/tmp.v"

  
`line 5211 "/tmp/lm32-customizer/tmp.v"

  
`line 5212 "/tmp/lm32-customizer/tmp.v"

  
`line 5213 "/tmp/lm32-customizer/tmp.v"


  
`line 5215 "/tmp/lm32-customizer/tmp.v"

  
`line 5216 "/tmp/lm32-customizer/tmp.v"

  
`line 5217 "/tmp/lm32-customizer/tmp.v"

  
`line 5218 "/tmp/lm32-customizer/tmp.v"


  
`line 5220 "/tmp/lm32-customizer/tmp.v"

  
`line 5221 "/tmp/lm32-customizer/tmp.v"

  
`line 5222 "/tmp/lm32-customizer/tmp.v"

  
`line 5223 "/tmp/lm32-customizer/tmp.v"






module lm32_dcache_full ( 
    
    clk_i,
    rst_i,    
    stall_a,
    stall_x,
    stall_m,
    address_x,
    address_m,
    load_q_m,
    store_q_m,
    store_data,
    store_byte_select,
    refill_ready,
    refill_data,
    dflush,
    
    stall_request,
    restart_request,
    refill_request,
    refill_address,
    refilling,
    load_data
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    

localparam addr_offset_width = clogb2(bytes_per_line)-1-2;
localparam addr_set_width = clogb2(sets)-1;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);
localparam addr_set_lsb = (addr_offset_msb+1);
localparam addr_set_msb = (addr_set_lsb+addr_set_width-1);
localparam addr_tag_lsb = (addr_set_msb+1);
localparam addr_tag_msb = clogb2( 32'h7fffffff- 32'h0)-1;
localparam addr_tag_width = (addr_tag_msb-addr_tag_lsb+1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          

input [ (32-1):0] address_x;                       
input [ (32-1):0] address_m;                       
input load_q_m;                                         
input store_q_m;                                        
input [ (32-1):0] store_data;                      
input [ (4-1):0] store_byte_select;        

input refill_ready;                                     
input [ (32-1):0] refill_data;                     

input dflush;                                           





output stall_request;                                   
wire   stall_request;
output restart_request;                                 
reg    restart_request;
output refill_request;                                  
reg    refill_request;
output [ (32-1):0] refill_address;                 
reg    [ (32-1):0] refill_address;
output refilling;                                       
reg    refilling;
output [ (32-1):0] load_data;                      
wire   [ (32-1):0] load_data;





wire read_port_enable;                                  
wire write_port_enable;                                 
wire [0:associativity-1] way_tmem_we;                   
wire [0:associativity-1] way_dmem_we;                   
wire [ (32-1):0] way_data[0:associativity-1];      
wire [ ((addr_tag_width+1)-1):1] way_tag[0:associativity-1];
wire [0:associativity-1] way_valid;                     
wire [0:associativity-1] way_match;                     
wire miss;                                              

wire [ (addr_set_width-1):0] tmem_read_address;        
wire [ (addr_set_width-1):0] tmem_write_address;       
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_read_address;        
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_write_address;       
wire [ ((addr_tag_width+1)-1):0] tmem_write_data;               
reg [ (32-1):0] dmem_write_data;                   

reg [ 2:0] state;                         
wire flushing;                                          
wire check;                                             
wire refill;                                            

wire valid_store;                                       
reg [associativity-1:0] refill_way_select;              
reg [ addr_offset_msb:addr_offset_lsb] refill_offset;           
wire last_refill;                                       
reg [ (addr_set_width-1):0] flush_set;                 

genvar i, j;





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






   generate
      for (i = 0; i < associativity; i = i + 1)    
	begin : memories
	   
           if ( (addr_offset_width+addr_set_width) < 11)
             begin : data_memories
		lm32_ram 
		  #(
		    
		    .data_width (32),
		    .address_width ( (addr_offset_width+addr_set_width))

		    ) way_0_data_ram 
		    (
		     
		     .read_clk (clk_i),
		     .write_clk (clk_i),
		     .reset (rst_i),
		     .read_address (dmem_read_address),
		     .enable_read (read_port_enable),
		     .write_address (dmem_write_address),
		     .enable_write (write_port_enable),
		     .write_enable (way_dmem_we[i]),
		     .write_data (dmem_write_data),    
		     
		     .read_data (way_data[i])
		     );    
             end
           else
             begin
		for (j = 0; j < 4; j = j + 1)    
		  begin : byte_memories
		     lm32_ram 
		       #(
			 
			 .data_width (8),
			 .address_width ( (addr_offset_width+addr_set_width))

			 ) way_0_data_ram 
			 (
			  
			  .read_clk (clk_i),
			  .write_clk (clk_i),
			  .reset (rst_i),
			  .read_address (dmem_read_address),
			  .enable_read (read_port_enable),
			  .write_address (dmem_write_address),
			  .enable_write (write_port_enable),
			  .write_enable (way_dmem_we[i] & (store_byte_select[j] | refill)),
			  .write_data (dmem_write_data[(j+1)*8-1:j*8]),    
			  
			  .read_data (way_data[i][(j+1)*8-1:j*8])
			  );
		  end
             end
	   
	   
	   lm32_ram 
	     #(
	       
	       .data_width ( (addr_tag_width+1)),
	       .address_width ( addr_set_width)

	       ) way_0_tag_ram 
	       (
		
		.read_clk (clk_i),
		.write_clk (clk_i),
		.reset (rst_i),
		.read_address (tmem_read_address),
		.enable_read (read_port_enable),
		.write_address (tmem_write_address),
		.enable_write ( 1'b1),
		.write_enable (way_tmem_we[i]),
		.write_data (tmem_write_data),
		
		.read_data ({way_tag[i], way_valid[i]})
		);
	end
      
   endgenerate






generate
    for (i = 0; i < associativity; i = i + 1)
    begin : match
assign way_match[i] = ({way_tag[i], way_valid[i]} == {address_m[ addr_tag_msb:addr_tag_lsb],  1'b1});
    end
endgenerate


generate
    if (associativity == 1)    
	 begin : data_1
assign load_data = way_data[0];
    end
    else if (associativity == 2)
	 begin : data_2
assign load_data = way_match[0] ? way_data[0] : way_data[1]; 
    end
endgenerate

generate
    if ( (addr_offset_width+addr_set_width) < 11)
    begin

always @(*)
begin
    if (refill ==  1'b1)
        dmem_write_data = refill_data;
    else
    begin
        dmem_write_data[ 7:0] = store_byte_select[0] ? store_data[ 7:0] : load_data[ 7:0];
        dmem_write_data[ 15:8] = store_byte_select[1] ? store_data[ 15:8] : load_data[ 15:8];
        dmem_write_data[ 23:16] = store_byte_select[2] ? store_data[ 23:16] : load_data[ 23:16];
        dmem_write_data[ 31:24] = store_byte_select[3] ? store_data[ 31:24] : load_data[ 31:24];
    end
end
    end
    else
    begin

always @(*)
begin
    if (refill ==  1'b1)
        dmem_write_data = refill_data;
    else
        dmem_write_data = store_data;
end
    end
endgenerate


generate 
     if (bytes_per_line > 4)
assign dmem_write_address = (refill ==  1'b1) 
                            ? {refill_address[ addr_set_msb:addr_set_lsb], refill_offset}
                            : address_m[ addr_set_msb:addr_offset_lsb];
    else
assign dmem_write_address = (refill ==  1'b1) 
                            ? refill_address[ addr_set_msb:addr_set_lsb]
                            : address_m[ addr_set_msb:addr_offset_lsb];
endgenerate
assign dmem_read_address = address_x[ addr_set_msb:addr_offset_lsb];

assign tmem_write_address = (flushing ==  1'b1)
                            ? flush_set
                            : refill_address[ addr_set_msb:addr_set_lsb];
assign tmem_read_address = address_x[ addr_set_msb:addr_set_lsb];


generate 
    if (bytes_per_line > 4)                            
assign last_refill = refill_offset == {addr_offset_width{1'b1}};
    else
assign last_refill =  1'b1;
endgenerate


assign read_port_enable = (stall_x ==  1'b0);
assign write_port_enable = (refill_ready ==  1'b1) || !stall_m;


assign valid_store = (store_q_m ==  1'b1) && (check ==  1'b1);


generate
    if (associativity == 1) 
    begin : we_1     
assign way_dmem_we[0] = (refill_ready ==  1'b1) || ((valid_store ==  1'b1) && (way_match[0] ==  1'b1));
assign way_tmem_we[0] = (refill_ready ==  1'b1) || (flushing ==  1'b1);
    end 
    else 
    begin : we_2
assign way_dmem_we[0] = ((refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1)) || ((valid_store ==  1'b1) && (way_match[0] ==  1'b1));
assign way_dmem_we[1] = ((refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1)) || ((valid_store ==  1'b1) && (way_match[1] ==  1'b1));
assign way_tmem_we[0] = ((refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1)) || (flushing ==  1'b1);
assign way_tmem_we[1] = ((refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1)) || (flushing ==  1'b1);
    end
endgenerate


assign tmem_write_data[ 0] = ((last_refill ==  1'b1) || (valid_store ==  1'b1)) && (flushing ==  1'b0);
assign tmem_write_data[ ((addr_tag_width+1)-1):1] = refill_address[ addr_tag_msb:addr_tag_lsb];


assign flushing = state[0];
assign check = state[1];
assign refill = state[2];

assign miss = (~(|way_match)) && (load_q_m ==  1'b1) && (stall_m ==  1'b0);
assign stall_request = (check ==  1'b0);
                      





generate
    if (associativity >= 2) 
    begin : way_select      
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_way_select <= {{associativity-1{1'b0}}, 1'b1};
    else
    begin        
        if (refill_request ==  1'b1)
            refill_way_select <= {refill_way_select[0], refill_way_select[1]};
    end
end
    end 
endgenerate   


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refilling <=  1'b0;
    else 
        refilling <= refill;
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  3'b001;
        flush_set <= { addr_set_width{1'b1}};
        refill_request <=  1'b0;
        refill_address <= { 32{1'bx}};
        restart_request <=  1'b0;
    end
    else 
    begin
        case (state)

        
         3'b001:
        begin
            if (flush_set == { addr_set_width{1'b0}})
                state <=  3'b010;
            flush_set <= flush_set - 1'b1;
        end
        
        
         3'b010:
        begin
            if (stall_a ==  1'b0)
                restart_request <=  1'b0;
            if (miss ==  1'b1)
            begin
                refill_request <=  1'b1;
                refill_address <= address_m;
                state <=  3'b100;
            end
            else if (dflush ==  1'b1)
                state <=  3'b001;
        end

        
         3'b100:
        begin
            refill_request <=  1'b0;
            if (refill_ready ==  1'b1)
            begin
                if (last_refill ==  1'b1)
                begin
                    restart_request <=  1'b1;
                    state <=  3'b010;
                end
            end
        end
        
        endcase        
    end
end

generate
    if (bytes_per_line > 4)
    begin

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_offset <= {addr_offset_width{1'b0}};
    else 
    begin
        case (state)
        
        
         3'b010:
        begin
            if (miss ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
        end

        
         3'b100:
        begin
            if (refill_ready ==  1'b1)
                refill_offset <= refill_offset + 1'b1;
        end
        
        endcase        
    end
end
    end
endgenerate

endmodule

 
`line 5675 "/tmp/lm32-customizer/tmp.v"

































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  


                  
                 
         
     
     
              





  
    
     
    
    
    
    
    
    
    
    
 
    
    
    

 
    
    
    
    
    
 
    


    
 
    

    
    
    
    
    




                         
                         





                                     
                                     

                        
                                    
                                   
      
                        
            
                      
 
                     
       
                   

 
                                  
                                  
                                   
                               
                                       
 
                     







 
                                    
    

                                    
    
                                 
           
                                 
   





                                        



         
                       
                

     
         
                

                     
       
                   

 

             







 







               
      
         
    

 
 
        
       
    
     

        
   
    
   

    
               

 
               
      
             
                   


        
                   
    
   

                
                 

         
         
         

   
   
   








               
      
   

       
    
          
          
    
    
    
                 
        
              
              
        
    
    
    




               
      
   

       
    
          
          
    
    
    
           
        
               
                  
                 
                  
        
      

    



   

       
          
    
    
               
              
    
    

 

   

       
    
          
          
    
    
    
               
        
              
                
                  
             
                  
        
         
        
        
            
                     
                       
                    
                   
               
                   
        
        
        
            
                   
                  
        
        
        
            
 
               
                  
             

                            
            
                  
                  
            
        
        
        
            
 
               
                  
             

                  
        
        
    






`line 6024 "/tmp/lm32-customizer/tmp.v"















































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_instruction_unit_full (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_f,
    stall_d,
    stall_x,
    stall_m,
    valid_f,
    valid_d,
    kill_f,
    branch_predict_taken_d,
    branch_predict_address_d,
  
`line 6092 "/tmp/lm32-customizer/tmp.v"
    
    branch_taken_x,
    branch_target_x,
 
`line 6095 "/tmp/lm32-customizer/tmp.v"

    exception_m,
    branch_taken_m,
    branch_mispredict_taken_m,
    branch_target_m,
  
`line 6100 "/tmp/lm32-customizer/tmp.v"

    iflush,
 
`line 6102 "/tmp/lm32-customizer/tmp.v"

  
`line 6103 "/tmp/lm32-customizer/tmp.v"

    dcache_restart_request,
    dcache_refill_request,
    dcache_refilling,
 
`line 6107 "/tmp/lm32-customizer/tmp.v"
        
  
    
    
    

`line 6112 "/tmp/lm32-customizer/tmp.v"

  
`line 6113 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_i,
    i_ack_i,
    i_err_i,
    i_rty_i,
 
`line 6119 "/tmp/lm32-customizer/tmp.v"

  
    
    
    
    

`line 6125 "/tmp/lm32-customizer/tmp.v"

    
    
    pc_f,
    pc_d,
    pc_x,
    pc_m,
    pc_w,
  
`line 6133 "/tmp/lm32-customizer/tmp.v"

    icache_stall_request,
    icache_restart_request,
    icache_refill_request,
    icache_refilling,
 
`line 6138 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6141 "/tmp/lm32-customizer/tmp.v"

  
`line 6142 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_o,
    i_adr_o,
    i_cyc_o,
    i_sel_o,
    i_stb_o,
    i_we_o,
    i_cti_o,
    i_lock_o,
    i_bte_o,
 
`line 6153 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 6157 "/tmp/lm32-customizer/tmp.v"

  
`line 6158 "/tmp/lm32-customizer/tmp.v"

    bus_error_d,
 
`line 6160 "/tmp/lm32-customizer/tmp.v"

  
`line 6161 "/tmp/lm32-customizer/tmp.v"

    instruction_f,
 
`line 6163 "/tmp/lm32-customizer/tmp.v"
    
    instruction_d
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_f;                                          
input stall_d;                                          
input stall_x;                                          
input stall_m;                                          
input valid_f;                                          
input valid_d;                                          
input kill_f;                                           

input branch_predict_taken_d;                           
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;          
   
  
`line 6201 "/tmp/lm32-customizer/tmp.v"
    
input branch_taken_x;                                   
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_x;                   
 
`line 6204 "/tmp/lm32-customizer/tmp.v"

input exception_m;
input branch_taken_m;                                   
input branch_mispredict_taken_m;                        
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;                   

  
`line 6210 "/tmp/lm32-customizer/tmp.v"

input iflush;                                           
 
`line 6212 "/tmp/lm32-customizer/tmp.v"

  
`line 6213 "/tmp/lm32-customizer/tmp.v"

input dcache_restart_request;                           
input dcache_refill_request;                            
input dcache_refilling;
 
`line 6217 "/tmp/lm32-customizer/tmp.v"
        

  
                 
                   
                                        

`line 6223 "/tmp/lm32-customizer/tmp.v"


  
`line 6225 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] i_dat_i;                         
input i_ack_i;                                          
input i_err_i;                                          
input i_rty_i;                                          
 
`line 6230 "/tmp/lm32-customizer/tmp.v"


  
                                  
                                 
                   
                      

`line 6237 "/tmp/lm32-customizer/tmp.v"





        
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;

  
`line 6254 "/tmp/lm32-customizer/tmp.v"

output icache_stall_request;                            
wire   icache_stall_request;
output icache_restart_request;                          
wire   icache_restart_request;
output icache_refill_request;                           
wire   icache_refill_request;
output icache_refilling;                                
wire   icache_refilling;
 
`line 6263 "/tmp/lm32-customizer/tmp.v"


  
                      
                          

`line 6268 "/tmp/lm32-customizer/tmp.v"
   

  
`line 6270 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_dat_o;                        
  
     

`line 6274 "/tmp/lm32-customizer/tmp.v"

wire   [ (32-1):0] i_dat_o;
 
`line 6276 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_adr_o;                        
reg    [ (32-1):0] i_adr_o;
output i_cyc_o;                                         
reg    i_cyc_o; 
output [ (4-1):0] i_sel_o;                 
  
     

`line 6284 "/tmp/lm32-customizer/tmp.v"

wire   [ (4-1):0] i_sel_o;
 
`line 6286 "/tmp/lm32-customizer/tmp.v"

output i_stb_o;                                         
reg    i_stb_o;
output i_we_o;                                          
  
    

`line 6292 "/tmp/lm32-customizer/tmp.v"

wire   i_we_o;
 
`line 6294 "/tmp/lm32-customizer/tmp.v"

output [ (3-1):0] i_cti_o;                       
reg    [ (3-1):0] i_cti_o;
output i_lock_o;                                        
reg    i_lock_o;
output [ (2-1):0] i_bte_o;                       
wire   [ (2-1):0] i_bte_o;
 
`line 6301 "/tmp/lm32-customizer/tmp.v"


  
                   
     
                             
   

`line 6308 "/tmp/lm32-customizer/tmp.v"


  
`line 6310 "/tmp/lm32-customizer/tmp.v"

output bus_error_d;                                     
reg    bus_error_d;
 
`line 6313 "/tmp/lm32-customizer/tmp.v"

  
`line 6314 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_f;           
wire   [ (32-1):0] instruction_f;
 
`line 6317 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_d;           
reg    [ (32-1):0] instruction_d;





reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_a;                                

  
`line 6327 "/tmp/lm32-customizer/tmp.v"

reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] restart_address;                     
 
`line 6329 "/tmp/lm32-customizer/tmp.v"


  
`line 6331 "/tmp/lm32-customizer/tmp.v"

wire icache_read_enable_f;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] icache_refill_address;              
reg icache_refill_ready;                                
reg [ (32-1):0] icache_refill_data;         
wire [ (32-1):0] icache_data_f;             
wire [ (3-1):0] first_cycle_type;                
wire [ (3-1):0] next_cycle_type;                 
wire last_word;                                         
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] first_address;                      
 
 
                    


`line 6345 "/tmp/lm32-customizer/tmp.v"

  
                                      
                                       
                 

`line 6350 "/tmp/lm32-customizer/tmp.v"

  
`line 6351 "/tmp/lm32-customizer/tmp.v"

 
               

`line 6354 "/tmp/lm32-customizer/tmp.v"

  
`line 6355 "/tmp/lm32-customizer/tmp.v"

reg bus_error_f;                                        
 
`line 6357 "/tmp/lm32-customizer/tmp.v"


  
                                         

`line 6361 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







    
    
     
       
                    
	 
       
       
       
       
       
       
	 
              
              
              
              
              
              
	 
                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	                   
	                     
	                        
	                         
	    
	                         
	                         
	    

`line 6420 "/tmp/lm32-customizer/tmp.v"
    
 
  
`line 6422 "/tmp/lm32-customizer/tmp.v"


lm32_icache_full #(
    .associativity          (associativity),
    .sets                   (sets),
    .bytes_per_line         (bytes_per_line),
    .base_address           (base_address),
    .limit                  (limit)
    ) icache ( 
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),      
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .valid_d                (valid_d),
    .address_a              (pc_a),
    .address_f              (pc_f),
    .read_enable_f          (icache_read_enable_f),
    .refill_ready           (icache_refill_ready),
    .refill_data            (icache_refill_data),
    .iflush                 (iflush),
    
    .stall_request          (icache_stall_request),
    .restart_request        (icache_restart_request),
    .refill_request         (icache_refill_request),
    .refill_address         (icache_refill_address),
    .refilling              (icache_refilling),
    .inst                   (icache_data_f)
    );
 
`line 6452 "/tmp/lm32-customizer/tmp.v"






  
`line 6458 "/tmp/lm32-customizer/tmp.v"


assign icache_read_enable_f =    (valid_f ==  1'b1)
                              && (kill_f ==  1'b0)
  
`line 6462 "/tmp/lm32-customizer/tmp.v"

                              && (dcache_restart_request ==  1'b0)
 
`line 6464 "/tmp/lm32-customizer/tmp.v"
                         
   
                                 

`line 6467 "/tmp/lm32-customizer/tmp.v"
       
                              ;
 
`line 6469 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    
  
`line 6475 "/tmp/lm32-customizer/tmp.v"

    if (dcache_restart_request ==  1'b1)
        pc_a = restart_address;
    else 
 
`line 6479 "/tmp/lm32-customizer/tmp.v"
    
      if (branch_taken_m ==  1'b1)
	if ((branch_mispredict_taken_m ==  1'b1) && (exception_m ==  1'b0))
	  pc_a = pc_x;
	else
          pc_a = branch_target_m;
  
`line 6485 "/tmp/lm32-customizer/tmp.v"
    
      else if (branch_taken_x ==  1'b1)
        pc_a = branch_target_x;
 
`line 6488 "/tmp/lm32-customizer/tmp.v"

      else
	if ( (valid_d ==  1'b1) && (branch_predict_taken_d ==  1'b1) )
	  pc_a = branch_predict_address_d;
	else
  
`line 6493 "/tmp/lm32-customizer/tmp.v"

          if (icache_restart_request ==  1'b1)
            pc_a = restart_address;
	  else 
 
`line 6497 "/tmp/lm32-customizer/tmp.v"
        
            pc_a = pc_f + 1'b1;
end


  
           

`line 6504 "/tmp/lm32-customizer/tmp.v"

                     

  
`line 6507 "/tmp/lm32-customizer/tmp.v"

  
         

`line 6510 "/tmp/lm32-customizer/tmp.v"

assign instruction_f = icache_data_f;
 
`line 6512 "/tmp/lm32-customizer/tmp.v"

 
 
 
         

   


   


`line 6523 "/tmp/lm32-customizer/tmp.v"



  
`line 6526 "/tmp/lm32-customizer/tmp.v"

  

`line 6528 "/tmp/lm32-customizer/tmp.v"

assign i_dat_o = 32'd0;
assign i_we_o =  1'b0;
assign i_sel_o = 4'b1111;
 
`line 6532 "/tmp/lm32-customizer/tmp.v"

assign i_bte_o =  2'b00;
 
`line 6534 "/tmp/lm32-customizer/tmp.v"


  
`line 6536 "/tmp/lm32-customizer/tmp.v"


generate
    case (bytes_per_line)
    4:
    begin
assign first_cycle_type =  3'b111;
assign next_cycle_type =  3'b111;
assign last_word =  1'b1;
assign first_address = icache_refill_address;
    end
    8:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type =  3'b111;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 1'b1;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    16:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type = i_adr_o[addr_offset_msb] == 1'b1 ?  3'b111 :  3'b010;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 2'b11;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    endcase
endgenerate
 
`line 6563 "/tmp/lm32-customizer/tmp.v"

                     





always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        pc_f <= ( 32'h00000000-4)/4;
        pc_d <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_w <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    end
    else
    begin
        if (stall_f ==  1'b0)
            pc_f <= pc_a;
        if (stall_d ==  1'b0)
            pc_d <= pc_f;
        if (stall_x ==  1'b0)
            pc_x <= pc_d;
        if (stall_m ==  1'b0)
            pc_m <= pc_x;
        pc_w <= pc_m;
    end
end

  
`line 6594 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        restart_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    else
    begin
  
`line 6602 "/tmp/lm32-customizer/tmp.v"

  
`line 6603 "/tmp/lm32-customizer/tmp.v"
        
            
            if (dcache_refill_request ==  1'b1)
                restart_address <= pc_w;
            else if ((icache_refill_request ==  1'b1) && (!dcache_refilling) && (!dcache_restart_request))
                restart_address <= icache_refill_address;
 
               
                  

`line 6612 "/tmp/lm32-customizer/tmp.v"

 
         
               
                  


`line 6618 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 6621 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
    
           
              
    


`line 6635 "/tmp/lm32-customizer/tmp.v"


  
                 
 

     
       
       
       
       
     


`line 6648 "/tmp/lm32-customizer/tmp.v"


  
`line 6650 "/tmp/lm32-customizer/tmp.v"


  
`line 6652 "/tmp/lm32-customizer/tmp.v"
                
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        i_cyc_o <=  1'b0;
        i_stb_o <=  1'b0;
        i_adr_o <= { 32{1'b0}};
        i_cti_o <=  3'b111;
        i_lock_o <=  1'b0;
        icache_refill_data <= { 32{1'b0}};
        icache_refill_ready <=  1'b0;
  
`line 6664 "/tmp/lm32-customizer/tmp.v"

        bus_error_f <=  1'b0;
 
`line 6666 "/tmp/lm32-customizer/tmp.v"

  
          
          
          

`line 6671 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin   
        icache_refill_ready <=  1'b0;
        
        if (i_cyc_o ==  1'b1)
        begin
            
            if ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1))
            begin
  
                   
                
                      
                             
                        
                          
                
                

`line 6691 "/tmp/lm32-customizer/tmp.v"

                begin
                    if (last_word ==  1'b1)
                    begin
                        
                        i_cyc_o <=  1'b0;
                        i_stb_o <=  1'b0;
                        i_lock_o <=  1'b0;
                    end
                    
                    i_adr_o[addr_offset_msb:addr_offset_lsb] <= i_adr_o[addr_offset_msb:addr_offset_lsb] + 1'b1;
                    i_cti_o <= next_cycle_type;
                    
                    icache_refill_ready <=  1'b1;
                    icache_refill_data <= i_dat_i;
                end
            end
  
`line 6708 "/tmp/lm32-customizer/tmp.v"

            if (i_err_i ==  1'b1)
            begin
                bus_error_f <=  1'b1;
                $display ("Instruction bus error. Address: %x", i_adr_o);
            end
 
`line 6714 "/tmp/lm32-customizer/tmp.v"

        end
        else
        begin
            if ((icache_refill_request ==  1'b1) && (icache_refill_ready ==  1'b0))
            begin
                
       
                  

`line 6723 "/tmp/lm32-customizer/tmp.v"

                i_adr_o <= {first_address, 2'b00};
                i_cyc_o <=  1'b1;
                i_stb_o <=  1'b1;                
                i_cti_o <= first_cycle_type;
                
  
`line 6729 "/tmp/lm32-customizer/tmp.v"

                bus_error_f <=  1'b0;
 
`line 6731 "/tmp/lm32-customizer/tmp.v"

            end
  
            
            
                       
                
                     
                       
                       
                       
                       
                    
                      
                      
                      
                      
                      
                      
                      
                
             

`line 6753 "/tmp/lm32-customizer/tmp.v"
                    
  
`line 6754 "/tmp/lm32-customizer/tmp.v"

            
            
  
`line 6757 "/tmp/lm32-customizer/tmp.v"
    
            if (branch_taken_x ==  1'b1)
                bus_error_f <=  1'b0;
 
`line 6760 "/tmp/lm32-customizer/tmp.v"

            if (branch_taken_m ==  1'b1)
                bus_error_f <=  1'b0;
 
`line 6763 "/tmp/lm32-customizer/tmp.v"

        end
    end
end
 
   

       
    
          
          
          
          
          
          
 
          

    
    
       
        
           
        
            
                  
            
                
                  
                  
                
                  
            
 
               
            
                  
                  
            

        
        
        
            
                   
  
                   
       
               
            
                
      
                  

                   
                  
                  
 
                  

            
	    
	    
	               
  
		       
       
	           
		
 
		      

		
	    
        
    


`line 6840 "/tmp/lm32-customizer/tmp.v"

 
`line 6841 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        instruction_d <= { 32{1'b0}};
  
`line 6849 "/tmp/lm32-customizer/tmp.v"

        bus_error_d <=  1'b0;
 
`line 6851 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        if (stall_d ==  1'b0)
        begin
            instruction_d <= instruction_f;
  
`line 6858 "/tmp/lm32-customizer/tmp.v"

            bus_error_d <= bus_error_f;
 
`line 6860 "/tmp/lm32-customizer/tmp.v"

        end
    end
end  
  
endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

                              
                              
                              


                          
                  
                 
              
             
                    
                        
                        


                  
         
          
          
          
          
          
      
      
         





  
    
    
    
     
    
    
    
 
    
    
    
    

 
    
    

 
    

    
 
    
    

 
    
    
    
    
    
    
    

 
    
    

    
    
    





                                             
                                             

                                          
                                       
                        
                              

 
                                
                                  
                    
                                           

 
                    
                              

 
                                     





       
 
                
    
                
    

 
                            
    
              
    
                          
    
                                 
    
                                
    
                  
            
                     
    

 
                                       
    
                                       
    

  
     
  
    
             




                           
                         
                       
                     



     
  

                  
        
                       
        
                       


               
 
         
  
  
  
  
                          


         





 
      
   
      
   

                 

                  
             

   

 
   

   


                  
     
     
         
                 




   
   



   

       
    
          
          
          
          
    
    
    
          
          
          
          
    



   

       
    
          
          
          
 
          
          
          
          

 
          
          

                  
          
          
          
          

    
    
    
                  
               
        
             
            
            
                
                  
                  
            
            
            
                
                  
            
            
        

 
        
           
        
              
              
        

         
        
        
            
                 
            
                                  
                 
 
                
                
                     
 
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                    
      
                              
                                   

                          
                    
                    
                    
      
                              
                                   

                          
                    
                                                   
                

                  
                
                
                      
                      
                                    
                
                
                      
                      
                

                
                    
                                
            
        
 
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                   
                      
                 
                      
            
        
        
        
                 
            
                  
                  
            
        
        
        
             
            
            
            
                  
                  
                  
            
            
            
            
                  
                  
                  
            
            
            
                  
                  
                  
            
            
        
        
        
               
                      
                  
                  
                    
                  
                  
            
            
        
        
              
              
              
            

        
    

  



`line 7334 "/tmp/lm32-customizer/tmp.v"





























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_interrupt_full (
    
    clk_i, 
    rst_i,
    
    interrupt,
    
    stall_x,
  
    
    

`line 7380 "/tmp/lm32-customizer/tmp.v"

    exception,
 
`line 7382 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
  
    

`line 7386 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_data,
    csr_write_enable,
    
    interrupt_exception,
    
    csr_read_data
    );





parameter interrupts =  32;         





input clk_i;                                    
input rst_i;                                    

input [interrupts-1:0] interrupt;               

input stall_x;                                  

  
                       
                           

`line 7416 "/tmp/lm32-customizer/tmp.v"

input exception;                                
 
`line 7418 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
  
                                  

`line 7422 "/tmp/lm32-customizer/tmp.v"


input [ (3-1):0] csr;                      
input [ (32-1):0] csr_write_data;          
input csr_write_enable;                         





output interrupt_exception;                     
wire   interrupt_exception;

output [ (32-1):0] csr_read_data;          
reg    [ (32-1):0] csr_read_data;





wire [interrupts-1:0] asserted;                 

wire [interrupts-1:0] interrupt_n_exception;



reg ie;                                         
reg eie;                                        
  
                                         

`line 7452 "/tmp/lm32-customizer/tmp.v"

reg [interrupts-1:0] ip;                        
reg [interrupts-1:0] im;                        






assign interrupt_n_exception = ip & im;


assign interrupt_exception = (|interrupt_n_exception) & ie;


assign asserted = ip | interrupt;
       
assign ie_csr_read_data = {{ 32-3{1'b0}}, 
  
                           

`line 7472 "/tmp/lm32-customizer/tmp.v"

                           1'b0,
 
`line 7474 "/tmp/lm32-customizer/tmp.v"
                             
                           eie, 
                           ie
                          };
assign ip_csr_read_data = ip;
assign im_csr_read_data = im;
generate
    if (interrupts > 1) 
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                    

`line 7490 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                     
 
`line 7492 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
     3'h1:  csr_read_data = im;
    default:       csr_read_data = { 32{1'bx}};
    endcase
end
    end
    else
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                     

`line 7511 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                    
 
`line 7513 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
    default:       csr_read_data = { 32{1'bx}};
      endcase
end
    end
endgenerate
    




  
`line 7528 "/tmp/lm32-customizer/tmp.v"

   reg [ 10:0] eie_delay  = 0;

   
generate

   
    if (interrupts > 1)
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie                   <=  1'b0;
        eie                  <=  1'b0;
  
                           

`line 7546 "/tmp/lm32-customizer/tmp.v"

        im                   <= {interrupts{1'b0}};
        ip                   <= {interrupts{1'b0}};
       eie_delay             <= 0;
       
    end
    else
    begin
        
        ip                   <= asserted;
  
           
        
            
                           
                            
        
            
        
            
                           
                            
        

`line 7569 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie              <= ie;
            ie               <=  1'b0;
        end
 
`line 7576 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
        begin

           if(eie_delay[0])
             ie              <= eie;
           
           eie_delay         <= {1'b0, eie_delay[ 10:1]};

            if (eret_q_x ==  1'b1) begin
                
               eie_delay[ 10] <=  1'b1;
               eie_delay[ 10-1:0] <= 0;
            end
           
                      
           
  
                
                
                       

`line 7597 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7607 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h1)
                    im  <= csr_write_data[interrupts-1:0];
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
else
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie              <=  1'b0;
        eie             <=  1'b0;
  
                      

`line 7629 "/tmp/lm32-customizer/tmp.v"

        ip              <= {interrupts{1'b0}};
       eie_delay        <= 0;
    end
    else
    begin
        
        ip              <= asserted;
  
           
        
            
                      
                       
        
            
        
            
                      
                       
        

`line 7650 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie         <= ie;
            ie          <=  1'b0;
        end
 
`line 7657 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
          begin

             if(eie_delay[0])
               ie              <= eie;
           
             eie_delay         <= {1'b0, eie_delay[ 10:1]};

             if (eret_q_x ==  1'b1) begin
                
                eie_delay[ 10] <=  1'b1;
                eie_delay[ 10-1:0] <= 0;
             end
           
  
                
                
                       

`line 7676 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7686 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
endgenerate

endmodule



`line 1 "/tmp/lm32-customizer/tmp.v"




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  

`line 33 "src/lm32_include.v"

  
`line 34 "src/lm32_include.v"



  
`line 1 "/tmp/lm32-customizer/system_conf.v"

`line 1 "/tmp/lm32-customizer/system_conf.v"
  
`line 1 "/tmp/lm32-customizer/system_conf.v"

  
`line 2 "/tmp/lm32-customizer/system_conf.v"

  
`line 3 "/tmp/lm32-customizer/system_conf.v"

  
`line 4 "/tmp/lm32-customizer/system_conf.v"

  
`line 5 "/tmp/lm32-customizer/system_conf.v"

  
`line 6 "/tmp/lm32-customizer/system_conf.v"

  
`line 7 "/tmp/lm32-customizer/system_conf.v"

  
`line 8 "/tmp/lm32-customizer/system_conf.v"

  
`line 9 "/tmp/lm32-customizer/system_conf.v"

  
`line 10 "/tmp/lm32-customizer/system_conf.v"

  
`line 11 "/tmp/lm32-customizer/system_conf.v"

  
`line 12 "/tmp/lm32-customizer/system_conf.v"

  
`line 13 "/tmp/lm32-customizer/system_conf.v"

	  
`line 14 "/tmp/lm32-customizer/system_conf.v"

	  
`line 15 "/tmp/lm32-customizer/system_conf.v"

	  
`line 16 "/tmp/lm32-customizer/system_conf.v"

	  
`line 17 "/tmp/lm32-customizer/system_conf.v"

	  
`line 18 "/tmp/lm32-customizer/system_conf.v"

	  
`line 19 "/tmp/lm32-customizer/system_conf.v"

	  
`line 20 "/tmp/lm32-customizer/system_conf.v"

	  
`line 21 "/tmp/lm32-customizer/system_conf.v"

	  
`line 22 "/tmp/lm32-customizer/system_conf.v"

	  
`line 23 "/tmp/lm32-customizer/system_conf.v"

	  
`line 24 "/tmp/lm32-customizer/system_conf.v"

	  
`line 25 "/tmp/lm32-customizer/system_conf.v"

	  
`line 26 "/tmp/lm32-customizer/system_conf.v"

	  
`line 27 "/tmp/lm32-customizer/system_conf.v"

	  
`line 28 "/tmp/lm32-customizer/system_conf.v"

	  
`line 29 "/tmp/lm32-customizer/system_conf.v"

	  
`line 30 "/tmp/lm32-customizer/system_conf.v"

	  
`line 31 "/tmp/lm32-customizer/system_conf.v"

	  
`line 32 "/tmp/lm32-customizer/system_conf.v"

	 
`line 33 "/tmp/lm32-customizer/system_conf.v"

 
`line 34 "/tmp/lm32-customizer/system_conf.v"


`line 35 "src/lm32_include.v"


  

`line 40 "src/lm32_include.v"

  
`line 41 "src/lm32_include.v"

  
`line 42 "src/lm32_include.v"

  
`line 43 "src/lm32_include.v"

  
`line 44 "src/lm32_include.v"

 
`line 45 "src/lm32_include.v"



  
`line 48 "src/lm32_include.v"

  
`line 49 "src/lm32_include.v"



  
`line 52 "src/lm32_include.v"

  
`line 53 "src/lm32_include.v"

  
`line 54 "src/lm32_include.v"

  
`line 55 "src/lm32_include.v"

  
`line 56 "src/lm32_include.v"

  
`line 57 "src/lm32_include.v"



  
`line 60 "src/lm32_include.v"

  
`line 61 "src/lm32_include.v"

  
`line 62 "src/lm32_include.v"



  
`line 65 "src/lm32_include.v"

  
`line 66 "src/lm32_include.v"

  
`line 67 "src/lm32_include.v"



  
`line 70 "src/lm32_include.v"

  
`line 71 "src/lm32_include.v"

 
 
                    

                    


`line 78 "src/lm32_include.v"

  
`line 79 "src/lm32_include.v"



  
`line 82 "src/lm32_include.v"

  
`line 83 "src/lm32_include.v"



  
`line 86 "src/lm32_include.v"

  
`line 87 "src/lm32_include.v"



  
`line 90 "src/lm32_include.v"

  
`line 91 "src/lm32_include.v"



  
 

`line 96 "src/lm32_include.v"

  
`line 97 "src/lm32_include.v"

  
`line 98 "src/lm32_include.v"

 
`line 99 "src/lm32_include.v"

 
`line 100 "src/lm32_include.v"



  
`line 103 "src/lm32_include.v"

  
`line 104 "src/lm32_include.v"

 
 
 



`line 110 "src/lm32_include.v"



  
`line 113 "src/lm32_include.v"

  
`line 114 "src/lm32_include.v"

  
 
 

 


`line 121 "src/lm32_include.v"
 


  
`line 124 "src/lm32_include.v"

  
`line 125 "src/lm32_include.v"

 
 
 


`line 130 "src/lm32_include.v"



  
`line 133 "src/lm32_include.v"

  
`line 134 "src/lm32_include.v"

 
`line 135 "src/lm32_include.v"

  
 

`line 138 "src/lm32_include.v"

  
 

`line 141 "src/lm32_include.v"



  
`line 144 "src/lm32_include.v"

  
`line 145 "src/lm32_include.v"

 
`line 146 "src/lm32_include.v"

  
 

`line 149 "src/lm32_include.v"



  
`line 152 "src/lm32_include.v"



  
`line 155 "src/lm32_include.v"



  
`line 158 "src/lm32_include.v"

  
`line 159 "src/lm32_include.v"

  
`line 160 "src/lm32_include.v"

  
`line 161 "src/lm32_include.v"

  
`line 162 "src/lm32_include.v"

  
`line 163 "src/lm32_include.v"

  
`line 164 "src/lm32_include.v"

  
`line 165 "src/lm32_include.v"

  
`line 166 "src/lm32_include.v"

  
`line 167 "src/lm32_include.v"



  
`line 170 "src/lm32_include.v"

  
`line 171 "src/lm32_include.v"

  
`line 172 "src/lm32_include.v"

  
`line 173 "src/lm32_include.v"

  
`line 174 "src/lm32_include.v"

  
`line 175 "src/lm32_include.v"



  
`line 178 "src/lm32_include.v"

  
`line 179 "src/lm32_include.v"

  
`line 180 "src/lm32_include.v"

 
 
                   
                     

                   
                     


`line 189 "src/lm32_include.v"



  
`line 192 "src/lm32_include.v"

  
`line 193 "src/lm32_include.v"

  
`line 194 "src/lm32_include.v"

  
`line 195 "src/lm32_include.v"

  
`line 196 "src/lm32_include.v"

  
`line 197 "src/lm32_include.v"

  
`line 198 "src/lm32_include.v"

  
`line 199 "src/lm32_include.v"

  
`line 200 "src/lm32_include.v"

  
`line 201 "src/lm32_include.v"

  
`line 202 "src/lm32_include.v"

 
`line 203 "src/lm32_include.v"

  
`line 204 "src/lm32_include.v"

  
`line 205 "src/lm32_include.v"

  
`line 206 "src/lm32_include.v"

  
`line 207 "src/lm32_include.v"

 
`line 208 "src/lm32_include.v"

  
`line 209 "src/lm32_include.v"

  
`line 210 "src/lm32_include.v"

  
`line 211 "src/lm32_include.v"

  
`line 212 "src/lm32_include.v"

  
`line 213 "src/lm32_include.v"

  
`line 214 "src/lm32_include.v"

  
`line 215 "src/lm32_include.v"

  
`line 216 "src/lm32_include.v"

  
`line 217 "src/lm32_include.v"

 
`line 218 "src/lm32_include.v"
 


  
`line 221 "src/lm32_include.v"

  
`line 222 "src/lm32_include.v"

  
`line 223 "src/lm32_include.v"

  
`line 224 "src/lm32_include.v"

  
`line 225 "src/lm32_include.v"



  
`line 228 "src/lm32_include.v"

  
`line 229 "src/lm32_include.v"

  
`line 230 "src/lm32_include.v"

  
`line 231 "src/lm32_include.v"

  
`line 232 "src/lm32_include.v"

  
`line 233 "src/lm32_include.v"

  
`line 234 "src/lm32_include.v"

  
`line 235 "src/lm32_include.v"

  
`line 236 "src/lm32_include.v"

  
`line 237 "src/lm32_include.v"




  
`line 241 "src/lm32_include.v"

  
`line 242 "src/lm32_include.v"

  
`line 243 "src/lm32_include.v"


  
`line 245 "src/lm32_include.v"

  
`line 246 "src/lm32_include.v"

  
`line 247 "src/lm32_include.v"

  
`line 248 "src/lm32_include.v"


  
`line 250 "src/lm32_include.v"

  
`line 251 "src/lm32_include.v"



  
`line 254 "src/lm32_include.v"

  
`line 255 "src/lm32_include.v"

 
 
 


`line 260 "src/lm32_include.v"







  
`line 267 "src/lm32_include.v"

  
`line 268 "src/lm32_include.v"

  
`line 269 "src/lm32_include.v"







  
`line 276 "src/lm32_include.v"

  
`line 277 "src/lm32_include.v"

  
`line 278 "src/lm32_include.v"

  
`line 279 "src/lm32_include.v"



  
`line 282 "src/lm32_include.v"

  
`line 283 "src/lm32_include.v"

  
`line 284 "src/lm32_include.v"

  
`line 285 "src/lm32_include.v"



  
`line 288 "src/lm32_include.v"

  
`line 289 "src/lm32_include.v"



  
`line 292 "src/lm32_include.v"







  
`line 299 "src/lm32_include.v"

  
`line 300 "src/lm32_include.v"

  
`line 301 "src/lm32_include.v"

  
`line 302 "src/lm32_include.v"

  
`line 303 "src/lm32_include.v"

  
`line 304 "src/lm32_include.v"



  
`line 307 "src/lm32_include.v"

  
`line 308 "src/lm32_include.v"

  
`line 309 "src/lm32_include.v"

  
`line 310 "src/lm32_include.v"

  
`line 311 "src/lm32_include.v"

  
`line 312 "src/lm32_include.v"


 
`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"

           
  
`line 31 "/tmp/lm32-customizer/tmp.v"

  
`line 32 "/tmp/lm32-customizer/tmp.v"

  
`line 33 "/tmp/lm32-customizer/tmp.v"

  
`line 34 "/tmp/lm32-customizer/tmp.v"

  
`line 35 "/tmp/lm32-customizer/tmp.v"

  
`line 36 "/tmp/lm32-customizer/tmp.v"

  
`line 37 "/tmp/lm32-customizer/tmp.v"






module lm32_mc_arithmetic_full_debug (
    
    clk_i,
    rst_i,
    stall_d,
    kill_x,
  
`line 49 "/tmp/lm32-customizer/tmp.v"

    divide_d,
    modulus_d,
 
`line 52 "/tmp/lm32-customizer/tmp.v"

  
    

`line 55 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 60 "/tmp/lm32-customizer/tmp.v"

    operand_0_d,
    operand_1_d,
    
    result_x,
  
`line 65 "/tmp/lm32-customizer/tmp.v"

    divide_by_zero_x,
 
`line 67 "/tmp/lm32-customizer/tmp.v"

    stall_request_x
    );





input clk_i;                                    
input rst_i;                                    
input stall_d;                                  
input kill_x;                                   
  
`line 79 "/tmp/lm32-customizer/tmp.v"

input divide_d;                                 
input modulus_d;                                
 
`line 82 "/tmp/lm32-customizer/tmp.v"

  
                                

`line 85 "/tmp/lm32-customizer/tmp.v"

  
                              
                             
                             

`line 90 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] operand_0_d;
input [ (32-1):0] operand_1_d;





output [ (32-1):0] result_x;               
reg    [ (32-1):0] result_x;
  
`line 100 "/tmp/lm32-customizer/tmp.v"

output divide_by_zero_x;                        
reg    divide_by_zero_x;
 
`line 103 "/tmp/lm32-customizer/tmp.v"

output stall_request_x;                         
wire   stall_request_x;





reg [ (32-1):0] p;                         
reg [ (32-1):0] a;
reg [ (32-1):0] b;
  
`line 114 "/tmp/lm32-customizer/tmp.v"

wire [32:0] t;
 
`line 116 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;                 
reg [5:0] cycles;                               

  
                               
                                 

`line 124 "/tmp/lm32-customizer/tmp.v"







assign stall_request_x = state !=  3'b000;

  
`line 133 "/tmp/lm32-customizer/tmp.v"


assign t = {p[ 32-2:0], a[ 32-1]} - b;
 
`line 136 "/tmp/lm32-customizer/tmp.v"


  

       

`line 141 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        cycles <= {6{1'b0}};
        p <= { 32{1'b0}};
        a <= { 32{1'b0}};
        b <= { 32{1'b0}};
  
          

`line 158 "/tmp/lm32-customizer/tmp.v"

  
`line 159 "/tmp/lm32-customizer/tmp.v"

        divide_by_zero_x <=  1'b0;
 
`line 161 "/tmp/lm32-customizer/tmp.v"

        result_x <= { 32{1'b0}};
        state <=  3'b000;
    end
    else
    begin
  
`line 167 "/tmp/lm32-customizer/tmp.v"

        divide_by_zero_x <=  1'b0;
 
`line 169 "/tmp/lm32-customizer/tmp.v"

        case (state)
         3'b000:
        begin
            if (stall_d ==  1'b0)                 
            begin          
                cycles <=  32;
                p <= 32'b0;
                a <= operand_0_d;
                b <= operand_1_d;                    
  
`line 179 "/tmp/lm32-customizer/tmp.v"

                if (divide_d ==  1'b1)
                    state <=  3'b011 ;
                if (modulus_d ==  1'b1)
                    state <=  3'b010   ;
 
`line 184 "/tmp/lm32-customizer/tmp.v"
                    
  
                   
                      

`line 188 "/tmp/lm32-customizer/tmp.v"

  
                   
                
                      
                      
                      
                      
                      
                
                   
                
                      
                      
                      
                      
                      
                

`line 206 "/tmp/lm32-customizer/tmp.v"

            end            
        end
  
`line 209 "/tmp/lm32-customizer/tmp.v"

         3'b011 :
        begin
            if (t[32] == 1'b0)
            begin
                p <= t[31:0];
                a <= {a[ 32-2:0], 1'b1};
            end
            else 
            begin
                p <= {p[ 32-2:0], a[ 32-1]};
                a <= {a[ 32-2:0], 1'b0};
            end
            result_x <= a;
            if ((cycles ==  32'd0) || (kill_x ==  1'b1))
            begin
                
                divide_by_zero_x <= b == { 32{1'b0}};
                state <=  3'b000;
            end
            cycles <= cycles - 1'b1;
        end
         3'b010   :
        begin
            if (t[32] == 1'b0)
            begin
                p <= t[31:0];
                a <= {a[ 32-2:0], 1'b1};
            end
            else 
            begin
                p <= {p[ 32-2:0], a[ 32-1]};
                a <= {a[ 32-2:0], 1'b0};
            end
            result_x <= p;
            if ((cycles ==  32'd0) || (kill_x ==  1'b1))
            begin
                
                divide_by_zero_x <= b == { 32{1'b0}};
                state <=  3'b000;
            end
            cycles <= cycles - 1'b1;
        end
 
`line 252 "/tmp/lm32-customizer/tmp.v"
        
  
        
        
               
                    
               
               
              
                   
                  
                
        

`line 265 "/tmp/lm32-customizer/tmp.v"
     
  
        
               
               
              
                   
                  
                
        
        
               
               
              
                   
                  
                
        

`line 283 "/tmp/lm32-customizer/tmp.v"
   
        endcase
    end
end 

endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_top_full_debug (
    
    clk_i,
    rst_i,
    

    interrupt,

    
  
    
    

`line 335 "/tmp/lm32-customizer/tmp.v"
     
  
`line 336 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 342 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
      
    
    
    
    

`line 354 "/tmp/lm32-customizer/tmp.v"
    
  
`line 355 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 366 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





input clk_i;                                    
input rst_i;                                    


input [ (32-1):0] interrupt;          


  
               
                             

`line 393 "/tmp/lm32-customizer/tmp.v"
    

  
`line 395 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 400 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                               
   
       
     
           
    
           
    

`line 420 "/tmp/lm32-customizer/tmp.v"


  
`line 422 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 441 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;
  



 
  
`line 466 "/tmp/lm32-customizer/tmp.v"


wire [ 7:0] jtag_reg_d;
wire [ 7:0] jtag_reg_q;
wire jtag_update;
wire [2:0] jtag_reg_addr_d;
wire [2:0] jtag_reg_addr_q;
wire jtck;
wire jrstn;
 
`line 475 "/tmp/lm32-customizer/tmp.v"



  

                     
                             
                            
                   
                                 
 
                                 


`line 488 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"




   

lm32_cpu_full_debug cpu (
    
    .clk_i                 (clk_i),
  
                   

`line 505 "/tmp/lm32-customizer/tmp.v"

    .rst_i                 (rst_i),
    
  
`line 508 "/tmp/lm32-customizer/tmp.v"

    .interrupt             (interrupt),
 
`line 510 "/tmp/lm32-customizer/tmp.v"

    
  
               
             

`line 515 "/tmp/lm32-customizer/tmp.v"
     
  
`line 516 "/tmp/lm32-customizer/tmp.v"

    
    .jtag_clk              (jtck),
    .jtag_update           (jtag_update),
    .jtag_reg_q            (jtag_reg_q),
    .jtag_reg_addr_q       (jtag_reg_addr_q),
 
`line 522 "/tmp/lm32-customizer/tmp.v"

  
`line 523 "/tmp/lm32-customizer/tmp.v"

     
    .I_DAT_I               (I_DAT_I),
    .I_ACK_I               (I_ACK_I),
    .I_ERR_I               (I_ERR_I),
    .I_RTY_I               (I_RTY_I),
 
`line 529 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_I               (D_DAT_I),
    .D_ACK_I               (D_ACK_I),
    .D_ERR_I               (D_ERR_I),
    .D_RTY_I               (D_RTY_I),
    
  
                  
            
           
                 
                
 
                


`line 545 "/tmp/lm32-customizer/tmp.v"

  
`line 546 "/tmp/lm32-customizer/tmp.v"

    .jtag_reg_d            (jtag_reg_d),
    .jtag_reg_addr_d       (jtag_reg_addr_d),
 
`line 549 "/tmp/lm32-customizer/tmp.v"

      
                
               
            
            

`line 555 "/tmp/lm32-customizer/tmp.v"
    
  
`line 556 "/tmp/lm32-customizer/tmp.v"

    
    .I_DAT_O               (I_DAT_O),
    .I_ADR_O               (I_ADR_O),
    .I_CYC_O               (I_CYC_O),
    .I_SEL_O               (I_SEL_O),
    .I_STB_O               (I_STB_O),
    .I_WE_O                (I_WE_O),
    .I_CTI_O               (I_CTI_O),
    .I_LOCK_O              (I_LOCK_O),
    .I_BTE_O               (I_BTE_O),
     
`line 567 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_O               (D_DAT_O),
    .D_ADR_O               (D_ADR_O),
    .D_CYC_O               (D_CYC_O),
    .D_SEL_O               (D_SEL_O),
    .D_STB_O               (D_STB_O),
    .D_WE_O                (D_WE_O),
    .D_CTI_O               (D_CTI_O),
    .D_LOCK_O              (D_LOCK_O),
    .D_BTE_O               (D_BTE_O)
    );
   
  
`line 580 "/tmp/lm32-customizer/tmp.v"
		   

jtag_cores jtag_cores (
    
    .reg_d                 (jtag_reg_d),
    .reg_addr_d            (jtag_reg_addr_d),
    
    .reg_update            (jtag_update),
    .reg_q                 (jtag_reg_q),
    .reg_addr_q            (jtag_reg_addr_q),
    .jtck                  (jtck),
    .jrstn                 (jrstn)
    );
 
`line 593 "/tmp/lm32-customizer/tmp.v"
        
   
endmodule
































































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_cpu_full_debug (
    
    clk_i,
  
    

`line 671 "/tmp/lm32-customizer/tmp.v"
    
    rst_i,
    
  
`line 674 "/tmp/lm32-customizer/tmp.v"

    interrupt,
 
`line 676 "/tmp/lm32-customizer/tmp.v"

    
  
    
    

`line 681 "/tmp/lm32-customizer/tmp.v"
     
  
`line 682 "/tmp/lm32-customizer/tmp.v"

    
    jtag_clk,
    jtag_update, 
    jtag_reg_q,
    jtag_reg_addr_q,
 
`line 688 "/tmp/lm32-customizer/tmp.v"

  
`line 689 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 695 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
  
    
    
    
    
    
 
    


`line 711 "/tmp/lm32-customizer/tmp.v"

  
`line 712 "/tmp/lm32-customizer/tmp.v"

    jtag_reg_d,
    jtag_reg_addr_d,
 
`line 715 "/tmp/lm32-customizer/tmp.v"

      
    
    
    
    

`line 721 "/tmp/lm32-customizer/tmp.v"
    
  
`line 722 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 733 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





parameter eba_reset =  32'h00000000;                           
  
`line 751 "/tmp/lm32-customizer/tmp.v"

parameter deba_reset =  32'h10000000;                         
 
`line 753 "/tmp/lm32-customizer/tmp.v"


  
`line 755 "/tmp/lm32-customizer/tmp.v"

parameter icache_associativity =  1;     
parameter icache_sets =  256;                       
parameter icache_bytes_per_line =  16;   
parameter icache_base_address =  32'h0;       
parameter icache_limit =  32'h7fffffff;                     
 
       
                         
     
         
                       

`line 767 "/tmp/lm32-customizer/tmp.v"


  
`line 769 "/tmp/lm32-customizer/tmp.v"

parameter dcache_associativity =  1;     
parameter dcache_sets =  256;                       
parameter dcache_bytes_per_line =  16;   
parameter dcache_base_address =  32'h0;       
parameter dcache_limit =  32'h7fffffff;                     
 
       
                         
     
         
                       

`line 781 "/tmp/lm32-customizer/tmp.v"


  
`line 783 "/tmp/lm32-customizer/tmp.v"

parameter watchpoints =  32'h4;                       
 
   

`line 787 "/tmp/lm32-customizer/tmp.v"

  
                          

`line 790 "/tmp/lm32-customizer/tmp.v"

parameter breakpoints = 0;
 
`line 792 "/tmp/lm32-customizer/tmp.v"


  
`line 794 "/tmp/lm32-customizer/tmp.v"

parameter interrupts =  32;                         
 
   

`line 798 "/tmp/lm32-customizer/tmp.v"






input clk_i;                                    
  
                                   

`line 807 "/tmp/lm32-customizer/tmp.v"
    
input rst_i;                                    

  
`line 810 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] interrupt;          
 
`line 812 "/tmp/lm32-customizer/tmp.v"


  
               
                             

`line 817 "/tmp/lm32-customizer/tmp.v"
    

  
`line 819 "/tmp/lm32-customizer/tmp.v"

input jtag_clk;                                 
input jtag_update;                              
input [ 7:0] jtag_reg_q;              
input [2:0] jtag_reg_addr_q;
 
`line 824 "/tmp/lm32-customizer/tmp.v"


  
`line 826 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 831 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                   
     
                           
    
                          
    
                 
     
                               
    
 
                               
    


`line 857 "/tmp/lm32-customizer/tmp.v"


  
`line 859 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_reg_d;
wire   [ 7:0] jtag_reg_d;
output [2:0] jtag_reg_addr_d;
wire   [2:0] jtag_reg_addr_d;
 
`line 864 "/tmp/lm32-customizer/tmp.v"


  
                               
   
       
     
           
    
           
    

`line 875 "/tmp/lm32-customizer/tmp.v"


  
`line 877 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 896 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;







  
`line 923 "/tmp/lm32-customizer/tmp.v"

reg valid_a;                                    
 
`line 925 "/tmp/lm32-customizer/tmp.v"

reg valid_f;                                    
reg valid_d;                                    
reg valid_x;                                    
reg valid_m;                                    
reg valid_w;                                    
   
wire q_x;
wire [ (32-1):0] immediate_d;              
wire load_d;                                    
reg load_x;                                     
reg load_m;
wire load_q_x;
wire store_q_x;
wire store_d;                                   
reg store_x;
reg store_m;
wire [ 1:0] size_d;                   
reg [ 1:0] size_x;
wire branch_d;                                  
wire branch_predict_d;                          
wire branch_predict_taken_d;                    
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;   
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_d;
wire bi_unconditional;
wire bi_conditional;
reg branch_x;                                   
reg branch_predict_x;
reg branch_predict_taken_x;
reg branch_m;
reg branch_predict_m;
reg branch_predict_taken_m;
wire branch_mispredict_taken_m;                 
wire branch_flushX_m;                           
wire branch_reg_d;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset_d;            
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_x;             
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;
wire [ 0:0] d_result_sel_0_d; 
wire [ 1:0] d_result_sel_1_d; 

wire x_result_sel_csr_d;                        
reg x_result_sel_csr_x;
  
`line 968 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_mc_arith_d;                   
reg x_result_sel_mc_arith_x;
 
`line 971 "/tmp/lm32-customizer/tmp.v"

      
                       
 

`line 975 "/tmp/lm32-customizer/tmp.v"

  
`line 976 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_sext_d;                       
reg x_result_sel_sext_x;
 
`line 979 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_logic_d;                      
reg x_result_sel_logic_x;
  
                        
 

`line 985 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_add_d;                        
reg x_result_sel_add_x;
wire m_result_sel_compare_d;                    
reg m_result_sel_compare_x;
reg m_result_sel_compare_m;
  
`line 991 "/tmp/lm32-customizer/tmp.v"

wire m_result_sel_shift_d;                      
reg m_result_sel_shift_x;
reg m_result_sel_shift_m;
 
`line 995 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_load_d;                       
reg w_result_sel_load_x;
reg w_result_sel_load_m;
reg w_result_sel_load_w;
  
`line 1000 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_mul_d;                        
reg w_result_sel_mul_x;
reg w_result_sel_mul_m;
reg w_result_sel_mul_w;
 
`line 1005 "/tmp/lm32-customizer/tmp.v"

wire x_bypass_enable_d;                         
reg x_bypass_enable_x;                          
wire m_bypass_enable_d;                         
reg m_bypass_enable_x;                          
reg m_bypass_enable_m;
wire sign_extend_d;                             
reg sign_extend_x;
wire write_enable_d;                            
reg write_enable_x;
wire write_enable_q_x;
reg write_enable_m;
wire write_enable_q_m;
reg write_enable_w;
wire write_enable_q_w;
wire read_enable_0_d;                           
wire [ (5-1):0] read_idx_0_d;          
wire read_enable_1_d;                           
wire [ (5-1):0] read_idx_1_d;          
wire [ (5-1):0] write_idx_d;           
reg [ (5-1):0] write_idx_x;            
reg [ (5-1):0] write_idx_m;
reg [ (5-1):0] write_idx_w;
wire [ (5-1):0] csr_d;                     
reg  [ (5-1):0] csr_x;                  
wire [ (3-1):0] condition_d;         
reg [ (3-1):0] condition_x;          
  
`line 1032 "/tmp/lm32-customizer/tmp.v"

wire break_d;                                   
reg break_x;                                    
 
`line 1035 "/tmp/lm32-customizer/tmp.v"

wire scall_d;                                   
reg scall_x;    
wire eret_d;                                    
reg eret_x;
wire eret_q_x;
reg eret_m;
  
 

`line 1044 "/tmp/lm32-customizer/tmp.v"

  
`line 1045 "/tmp/lm32-customizer/tmp.v"

wire bret_d;                                    
reg bret_x;
wire bret_q_x;
reg bret_m;
  
 

`line 1052 "/tmp/lm32-customizer/tmp.v"

 
`line 1053 "/tmp/lm32-customizer/tmp.v"

wire csr_write_enable_d;                        
reg csr_write_enable_x;
wire csr_write_enable_q_x;
  
       

`line 1059 "/tmp/lm32-customizer/tmp.v"


  
`line 1061 "/tmp/lm32-customizer/tmp.v"

wire bus_error_d;                               
reg bus_error_x;
reg data_bus_error_exception_m;
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] memop_pc_w;
 
`line 1066 "/tmp/lm32-customizer/tmp.v"


reg [ (32-1):0] d_result_0;                
reg [ (32-1):0] d_result_1;                
reg [ (32-1):0] x_result;                  
reg [ (32-1):0] m_result;                  
reg [ (32-1):0] w_result;                  

reg [ (32-1):0] operand_0_x;               
reg [ (32-1):0] operand_1_x;               
reg [ (32-1):0] store_operand_x;           
reg [ (32-1):0] operand_m;                 
reg [ (32-1):0] operand_w;                 


  
`line 1081 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] reg_data_live_0;          
reg [ (32-1):0] reg_data_live_1;  
reg use_buf;                                    
reg [ (32-1):0] reg_data_buf_0;
reg [ (32-1):0] reg_data_buf_1;
 
`line 1087 "/tmp/lm32-customizer/tmp.v"

  
`line 1088 "/tmp/lm32-customizer/tmp.v"

 
     

`line 1091 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] reg_data_0;               
wire [ (32-1):0] reg_data_1;               
reg [ (32-1):0] bypass_data_0;             
reg [ (32-1):0] bypass_data_1;             
wire reg_write_enable_q_w;

reg interlock;                                  

wire stall_a;                                   
wire stall_f;                                   
wire stall_d;                                   
wire stall_x;                                   
wire stall_m;                                   


wire adder_op_d;                                
reg adder_op_x;                                 
reg adder_op_x_n;                               
wire [ (32-1):0] adder_result_x;           
wire adder_overflow_x;                          
wire adder_carry_n_x;                           


wire [ 3:0] logic_op_d;           
reg [ 3:0] logic_op_x;            
wire [ (32-1):0] logic_result_x;           

  
`line 1119 "/tmp/lm32-customizer/tmp.v"


wire [ (32-1):0] sextb_result_x;           
wire [ (32-1):0] sexth_result_x;           
wire [ (32-1):0] sext_result_x;            
 
`line 1124 "/tmp/lm32-customizer/tmp.v"



  
`line 1127 "/tmp/lm32-customizer/tmp.v"

  
                                   
                                     

`line 1131 "/tmp/lm32-customizer/tmp.v"

wire direction_d;                               
reg direction_x;                                        
reg direction_m;
wire [ (32-1):0] shifter_result_m;         
 
`line 1136 "/tmp/lm32-customizer/tmp.v"

  
                               
 
                              
 

`line 1142 "/tmp/lm32-customizer/tmp.v"

  
           

`line 1145 "/tmp/lm32-customizer/tmp.v"



  
`line 1148 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] multiplier_result_w;      
 
`line 1150 "/tmp/lm32-customizer/tmp.v"

  
                                 
 

`line 1154 "/tmp/lm32-customizer/tmp.v"



  
`line 1157 "/tmp/lm32-customizer/tmp.v"

wire divide_d;                                  
wire divide_q_d;
wire modulus_d;
wire modulus_q_d;
wire divide_by_zero_x;                          
 
`line 1163 "/tmp/lm32-customizer/tmp.v"



  
`line 1166 "/tmp/lm32-customizer/tmp.v"

wire mc_stall_request_x;                        
wire [ (32-1):0] mc_result_x;
 
`line 1169 "/tmp/lm32-customizer/tmp.v"



  
`line 1172 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] interrupt_csr_read_data_x;
 
`line 1174 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] cfg;                      
wire [ (32-1):0] cfg2;                     
  
                          

`line 1179 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] csr_read_data_x;           


wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                       
  
                          

`line 1190 "/tmp/lm32-customizer/tmp.v"

  
`line 1191 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] instruction_f;     
 
`line 1193 "/tmp/lm32-customizer/tmp.v"



wire [ (32-1):0] instruction_d;     
  
`line 1197 "/tmp/lm32-customizer/tmp.v"

wire iflush;                                    
wire icache_stall_request;                      
wire icache_restart_request;                    
wire icache_refill_request;                     
wire icache_refilling;                          
 
`line 1203 "/tmp/lm32-customizer/tmp.v"

  
          
            
                
                                 
                       

`line 1210 "/tmp/lm32-customizer/tmp.v"



  
`line 1213 "/tmp/lm32-customizer/tmp.v"

wire dflush_x;                                  
reg dflush_m;                                    
wire dcache_stall_request;                      
wire dcache_restart_request;                    
wire dcache_refill_request;                     
wire dcache_refilling;                          
 
`line 1220 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] load_data_w;              
wire stall_wb_load;                             


  
`line 1225 "/tmp/lm32-customizer/tmp.v"

  
`line 1226 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] jtx_csr_read_data;        
wire [ (32-1):0] jrx_csr_read_data;        
 
`line 1229 "/tmp/lm32-customizer/tmp.v"

  
`line 1230 "/tmp/lm32-customizer/tmp.v"

wire jtag_csr_write_enable;                     
wire [ (32-1):0] jtag_csr_write_data;      
wire [ (5-1):0] jtag_csr;                  
wire jtag_read_enable;                          
wire [ 7:0] jtag_read_data;
wire jtag_write_enable;
wire [ 7:0] jtag_write_data;
wire [ (32-1):0] jtag_address;
wire jtag_access_complete;
 
`line 1240 "/tmp/lm32-customizer/tmp.v"

  
`line 1241 "/tmp/lm32-customizer/tmp.v"

wire jtag_break;                                
 
`line 1243 "/tmp/lm32-customizer/tmp.v"

 
`line 1244 "/tmp/lm32-customizer/tmp.v"



wire raw_x_0;                                   
wire raw_x_1;                                   
wire raw_m_0;                                   
wire raw_m_1;                                   
wire raw_w_0;                                   
wire raw_w_1;                                   


wire cmp_zero;                                  
wire cmp_negative;                              
wire cmp_overflow;                              
wire cmp_carry_n;                               
reg condition_met_x;                            
reg condition_met_m;
  
`line 1261 "/tmp/lm32-customizer/tmp.v"
    
wire branch_taken_x;                            
 
`line 1263 "/tmp/lm32-customizer/tmp.v"

wire branch_taken_m;                            

wire kill_f;                                    
wire kill_d;                                    
wire kill_x;                                    
wire kill_m;                                    
wire kill_w;                                    

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] eba;                 
  
`line 1273 "/tmp/lm32-customizer/tmp.v"

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] deba;                
 
`line 1275 "/tmp/lm32-customizer/tmp.v"

reg [ (3-1):0] eid_x;                      
  
                        
                        

`line 1280 "/tmp/lm32-customizer/tmp.v"


  
`line 1282 "/tmp/lm32-customizer/tmp.v"

  
`line 1283 "/tmp/lm32-customizer/tmp.v"

wire dc_ss;                                     
 
`line 1285 "/tmp/lm32-customizer/tmp.v"

wire dc_re;                                     
wire exception_x;                               
reg exception_m;                                
wire debug_exception_x;                         
reg debug_exception_m;
reg debug_exception_w;
wire debug_exception_q_w;
wire non_debug_exception_x;                     
reg non_debug_exception_m;
reg non_debug_exception_w;
wire non_debug_exception_q_w;
 
                                
 
 
 

`line 1302 "/tmp/lm32-customizer/tmp.v"


  
`line 1304 "/tmp/lm32-customizer/tmp.v"

  
`line 1305 "/tmp/lm32-customizer/tmp.v"

wire reset_exception;                           
 
`line 1307 "/tmp/lm32-customizer/tmp.v"

 
`line 1308 "/tmp/lm32-customizer/tmp.v"

  
`line 1309 "/tmp/lm32-customizer/tmp.v"

wire interrupt_exception;                       
 
`line 1311 "/tmp/lm32-customizer/tmp.v"

  
`line 1312 "/tmp/lm32-customizer/tmp.v"

wire breakpoint_exception;                      
wire watchpoint_exception;                      
 
`line 1315 "/tmp/lm32-customizer/tmp.v"

  
`line 1316 "/tmp/lm32-customizer/tmp.v"

wire instruction_bus_error_exception;           
wire data_bus_error_exception;                  
 
`line 1319 "/tmp/lm32-customizer/tmp.v"

  
`line 1320 "/tmp/lm32-customizer/tmp.v"

wire divide_by_zero_exception;                  
 
`line 1322 "/tmp/lm32-customizer/tmp.v"

wire system_call_exception;                     

  
`line 1325 "/tmp/lm32-customizer/tmp.v"

reg data_bus_error_seen;                        
 
`line 1327 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







lm32_instruction_unit_full_debug #(
    .associativity          (icache_associativity),
    .sets                   (icache_sets),
    .bytes_per_line         (icache_bytes_per_line),
    .base_address           (icache_base_address),
    .limit                  (icache_limit)
  ) instruction_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .stall_d                (stall_d),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .valid_f                (valid_f),
    .valid_d                (valid_d),
    .kill_f                 (kill_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .branch_predict_address_d (branch_predict_address_d),
  
`line 1361 "/tmp/lm32-customizer/tmp.v"
    
    .branch_taken_x         (branch_taken_x),
    .branch_target_x        (branch_target_x),
 
`line 1364 "/tmp/lm32-customizer/tmp.v"

    .exception_m            (exception_m),
    .branch_taken_m         (branch_taken_m),
    .branch_mispredict_taken_m (branch_mispredict_taken_m),
    .branch_target_m        (branch_target_m),
  
`line 1369 "/tmp/lm32-customizer/tmp.v"

    .iflush                 (iflush),
 
`line 1371 "/tmp/lm32-customizer/tmp.v"

  
          
            
                 

`line 1376 "/tmp/lm32-customizer/tmp.v"

  
`line 1377 "/tmp/lm32-customizer/tmp.v"

    .dcache_restart_request (dcache_restart_request),
    .dcache_refill_request  (dcache_refill_request),
    .dcache_refilling       (dcache_refilling),
 
`line 1381 "/tmp/lm32-customizer/tmp.v"
        
  
`line 1382 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_i                (I_DAT_I),
    .i_ack_i                (I_ACK_I),
    .i_err_i                (I_ERR_I),
    .i_rty_i                (I_RTY_I),
 
`line 1388 "/tmp/lm32-customizer/tmp.v"

  
`line 1389 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_enable       (jtag_read_enable),
    .jtag_write_enable      (jtag_write_enable),
    .jtag_write_data        (jtag_write_data),
    .jtag_address           (jtag_address),
 
`line 1394 "/tmp/lm32-customizer/tmp.v"

    
    
    .pc_f                   (pc_f),
    .pc_d                   (pc_d),
    .pc_x                   (pc_x),
    .pc_m                   (pc_m),
    .pc_w                   (pc_w),
  
`line 1402 "/tmp/lm32-customizer/tmp.v"

    .icache_stall_request   (icache_stall_request),
    .icache_restart_request (icache_restart_request),
    .icache_refill_request  (icache_refill_request),
    .icache_refilling       (icache_refilling),
 
`line 1407 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1410 "/tmp/lm32-customizer/tmp.v"

  
`line 1411 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_o                (I_DAT_O),
    .i_adr_o                (I_ADR_O),
    .i_cyc_o                (I_CYC_O),
    .i_sel_o                (I_SEL_O),
    .i_stb_o                (I_STB_O),
    .i_we_o                 (I_WE_O),
    .i_cti_o                (I_CTI_O),
    .i_lock_o               (I_LOCK_O),
    .i_bte_o                (I_BTE_O),
 
`line 1422 "/tmp/lm32-customizer/tmp.v"

  
`line 1423 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_data         (jtag_read_data),
    .jtag_access_complete   (jtag_access_complete),
 
`line 1426 "/tmp/lm32-customizer/tmp.v"

  
`line 1427 "/tmp/lm32-customizer/tmp.v"

    .bus_error_d            (bus_error_d),
 
`line 1429 "/tmp/lm32-customizer/tmp.v"

  
`line 1430 "/tmp/lm32-customizer/tmp.v"

    .instruction_f          (instruction_f),
 
`line 1432 "/tmp/lm32-customizer/tmp.v"

    .instruction_d          (instruction_d)
    );


lm32_decoder_full_debug decoder (
    
    .instruction            (instruction_d),
    
    .d_result_sel_0         (d_result_sel_0_d),
    .d_result_sel_1         (d_result_sel_1_d),
    .x_result_sel_csr       (x_result_sel_csr_d),
  
`line 1444 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_mc_arith  (x_result_sel_mc_arith_d),
 
`line 1446 "/tmp/lm32-customizer/tmp.v"

      
         

`line 1449 "/tmp/lm32-customizer/tmp.v"

  
`line 1450 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_sext      (x_result_sel_sext_d),
 
`line 1452 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_logic     (x_result_sel_logic_d),
  
          

`line 1456 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_add       (x_result_sel_add_d),
    .m_result_sel_compare   (m_result_sel_compare_d),
  
`line 1459 "/tmp/lm32-customizer/tmp.v"

    .m_result_sel_shift     (m_result_sel_shift_d),  
 
`line 1461 "/tmp/lm32-customizer/tmp.v"
    
    .w_result_sel_load      (w_result_sel_load_d),
  
`line 1463 "/tmp/lm32-customizer/tmp.v"

    .w_result_sel_mul       (w_result_sel_mul_d),
 
`line 1465 "/tmp/lm32-customizer/tmp.v"

    .x_bypass_enable        (x_bypass_enable_d),
    .m_bypass_enable        (m_bypass_enable_d),
    .read_enable_0          (read_enable_0_d),
    .read_idx_0             (read_idx_0_d),
    .read_enable_1          (read_enable_1_d),
    .read_idx_1             (read_idx_1_d),
    .write_enable           (write_enable_d),
    .write_idx              (write_idx_d),
    .immediate              (immediate_d),
    .branch_offset          (branch_offset_d),
    .load                   (load_d),
    .store                  (store_d),
    .size                   (size_d),
    .sign_extend            (sign_extend_d),
    .adder_op               (adder_op_d),
    .logic_op               (logic_op_d),
  
`line 1482 "/tmp/lm32-customizer/tmp.v"

    .direction              (direction_d),
 
`line 1484 "/tmp/lm32-customizer/tmp.v"

  
                 
                

`line 1488 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1491 "/tmp/lm32-customizer/tmp.v"

  
`line 1492 "/tmp/lm32-customizer/tmp.v"

    .divide                 (divide_d),
    .modulus                (modulus_d),
 
`line 1495 "/tmp/lm32-customizer/tmp.v"

    .branch                 (branch_d),
    .bi_unconditional       (bi_unconditional),
    .bi_conditional         (bi_conditional),
    .branch_reg             (branch_reg_d),
    .condition              (condition_d),
  
`line 1501 "/tmp/lm32-customizer/tmp.v"

    .break_opcode           (break_d),
 
`line 1503 "/tmp/lm32-customizer/tmp.v"

    .scall                  (scall_d),
    .eret                   (eret_d),
  
`line 1506 "/tmp/lm32-customizer/tmp.v"

    .bret                   (bret_d),
 
`line 1508 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1511 "/tmp/lm32-customizer/tmp.v"

    .csr_write_enable       (csr_write_enable_d)
    ); 


lm32_load_store_unit_full_debug #(
    .associativity          (dcache_associativity),
    .sets                   (dcache_sets),
    .bytes_per_line         (dcache_bytes_per_line),
    .base_address           (dcache_base_address),
    .limit                  (dcache_limit)
  ) load_store_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .kill_x                 (kill_x),
    .kill_m                 (kill_m),
    .exception_m            (exception_m),
    .store_operand_x        (store_operand_x),
    .load_store_address_x   (adder_result_x),
    .load_store_address_m   (operand_m),
    .load_store_address_w   (operand_w[1:0]),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_q_x               (load_q_x),
    .store_q_x              (store_q_x),
    .load_q_m               (load_q_m),
    .store_q_m              (store_q_m),
    .sign_extend_x          (sign_extend_x),
    .size_x                 (size_x),
  
`line 1545 "/tmp/lm32-customizer/tmp.v"

    .dflush                 (dflush_m),
 
`line 1547 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1550 "/tmp/lm32-customizer/tmp.v"

    
    .d_dat_i                (D_DAT_I),
    .d_ack_i                (D_ACK_I),
    .d_err_i                (D_ERR_I),
    .d_rty_i                (D_RTY_I),
    
    
  
`line 1558 "/tmp/lm32-customizer/tmp.v"

    .dcache_refill_request  (dcache_refill_request),
    .dcache_restart_request (dcache_restart_request),
    .dcache_stall_request   (dcache_stall_request),
    .dcache_refilling       (dcache_refilling),
 
`line 1563 "/tmp/lm32-customizer/tmp.v"
    
  
          
            
                 
       

`line 1569 "/tmp/lm32-customizer/tmp.v"

    .load_data_w            (load_data_w),
    .stall_wb_load          (stall_wb_load),
    
    .d_dat_o                (D_DAT_O),
    .d_adr_o                (D_ADR_O),
    .d_cyc_o                (D_CYC_O),
    .d_sel_o                (D_SEL_O),
    .d_stb_o                (D_STB_O),
    .d_we_o                 (D_WE_O),
    .d_cti_o                (D_CTI_O),
    .d_lock_o               (D_LOCK_O),
    .d_bte_o                (D_BTE_O)
    );      
       

lm32_adder adder (
    
    .adder_op_x             (adder_op_x),
    .adder_op_x_n           (adder_op_x_n),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .adder_result_x         (adder_result_x),
    .adder_carry_n_x        (adder_carry_n_x),
    .adder_overflow_x       (adder_overflow_x)
    );


lm32_logic_op logic_op (
    
    .logic_op_x             (logic_op_x),
    .operand_0_x            (operand_0_x),

    .operand_1_x            (operand_1_x),
    
    .logic_result_x         (logic_result_x)
    );
              
  
`line 1608 "/tmp/lm32-customizer/tmp.v"


lm32_shifter shifter (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .direction_x            (direction_x),
    .sign_extend_x          (sign_extend_x),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .shifter_result_m       (shifter_result_m)
    );
 
`line 1622 "/tmp/lm32-customizer/tmp.v"


  
`line 1624 "/tmp/lm32-customizer/tmp.v"


lm32_multiplier multiplier (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .operand_0              (d_result_0),
    .operand_1              (d_result_1),
    
    .result                 (multiplier_result_w)    
    );
 
`line 1637 "/tmp/lm32-customizer/tmp.v"


  
`line 1639 "/tmp/lm32-customizer/tmp.v"


lm32_mc_arithmetic_full_debug mc_arithmetic (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_d                (stall_d),
    .kill_x                 (kill_x),
  
`line 1647 "/tmp/lm32-customizer/tmp.v"
                  
    .divide_d               (divide_q_d),
    .modulus_d              (modulus_q_d),
 
`line 1650 "/tmp/lm32-customizer/tmp.v"

          
                 

`line 1653 "/tmp/lm32-customizer/tmp.v"

  
               
              
              

`line 1658 "/tmp/lm32-customizer/tmp.v"
    
    .operand_0_d            (d_result_0),
    .operand_1_d            (d_result_1),
    
    .result_x               (mc_result_x),
  
`line 1663 "/tmp/lm32-customizer/tmp.v"
                  
    .divide_by_zero_x       (divide_by_zero_x),
 
`line 1665 "/tmp/lm32-customizer/tmp.v"

    .stall_request_x        (mc_stall_request_x)
    );
 
`line 1668 "/tmp/lm32-customizer/tmp.v"

              
  
`line 1670 "/tmp/lm32-customizer/tmp.v"


lm32_interrupt_full_debug interrupt_unit (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    
    .interrupt              (interrupt),
    
    .stall_x                (stall_x),
  
`line 1680 "/tmp/lm32-customizer/tmp.v"

    .non_debug_exception    (non_debug_exception_q_w), 
    .debug_exception        (debug_exception_q_w),
 
                   

`line 1685 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
  
`line 1687 "/tmp/lm32-customizer/tmp.v"

    .bret_q_x               (bret_q_x),
 
`line 1689 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    
    .interrupt_exception    (interrupt_exception),
    
    .csr_read_data          (interrupt_csr_read_data_x)
    );
 
`line 1698 "/tmp/lm32-customizer/tmp.v"


  
`line 1700 "/tmp/lm32-customizer/tmp.v"


lm32_jtag_full_debug jtag (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .jtag_clk               (jtag_clk),
    .jtag_update            (jtag_update),
    .jtag_reg_q             (jtag_reg_q),
    .jtag_reg_addr_q        (jtag_reg_addr_q),
    
  
`line 1712 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    .stall_x                (stall_x),
 
`line 1717 "/tmp/lm32-customizer/tmp.v"

  
`line 1718 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_data         (jtag_read_data),
    .jtag_access_complete   (jtag_access_complete),
 
`line 1721 "/tmp/lm32-customizer/tmp.v"

  
`line 1722 "/tmp/lm32-customizer/tmp.v"

    .exception_q_w          (debug_exception_q_w || non_debug_exception_q_w),
 
`line 1724 "/tmp/lm32-customizer/tmp.v"
    
    
    
  
`line 1727 "/tmp/lm32-customizer/tmp.v"

    .jtx_csr_read_data      (jtx_csr_read_data),
    .jrx_csr_read_data      (jrx_csr_read_data),
 
`line 1730 "/tmp/lm32-customizer/tmp.v"

  
`line 1731 "/tmp/lm32-customizer/tmp.v"

    .jtag_csr_write_enable  (jtag_csr_write_enable),
    .jtag_csr_write_data    (jtag_csr_write_data),
    .jtag_csr               (jtag_csr),
    .jtag_read_enable       (jtag_read_enable),
    .jtag_write_enable      (jtag_write_enable),
    .jtag_write_data        (jtag_write_data),
    .jtag_address           (jtag_address),
 
`line 1739 "/tmp/lm32-customizer/tmp.v"

  
`line 1740 "/tmp/lm32-customizer/tmp.v"

    .jtag_break             (jtag_break),
    .jtag_reset             (reset_exception),
 
`line 1743 "/tmp/lm32-customizer/tmp.v"

    
    .jtag_reg_d             (jtag_reg_d),
    .jtag_reg_addr_d        (jtag_reg_addr_d)
    );
 
`line 1748 "/tmp/lm32-customizer/tmp.v"


  
`line 1750 "/tmp/lm32-customizer/tmp.v"


lm32_debug_full_debug #(
    .breakpoints            (breakpoints),
    .watchpoints            (watchpoints)
  ) hw_debug (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    .pc_x                   (pc_x),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_store_address_x   (adder_result_x),
    .csr_write_enable_x     (csr_write_enable_q_x),
    .csr_write_data         (operand_1_x),
    .csr_x                  (csr_x),
  
`line 1766 "/tmp/lm32-customizer/tmp.v"

    .jtag_csr_write_enable  (jtag_csr_write_enable),
    .jtag_csr_write_data    (jtag_csr_write_data),
    .jtag_csr               (jtag_csr),
 
`line 1770 "/tmp/lm32-customizer/tmp.v"

  
`line 1771 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
    .bret_q_x               (bret_q_x),
    .stall_x                (stall_x),
    .exception_x            (exception_x),
    .q_x                    (q_x),
  
`line 1777 "/tmp/lm32-customizer/tmp.v"

    .dcache_refill_request  (dcache_refill_request),
 
`line 1779 "/tmp/lm32-customizer/tmp.v"

 
`line 1780 "/tmp/lm32-customizer/tmp.v"

    
  
`line 1782 "/tmp/lm32-customizer/tmp.v"

    .dc_ss                  (dc_ss),
 
`line 1784 "/tmp/lm32-customizer/tmp.v"

    .dc_re                  (dc_re),
    .bp_match               (bp_match),
    .wp_match               (wp_match)
    );
 
`line 1789 "/tmp/lm32-customizer/tmp.v"




  
`line 1793 "/tmp/lm32-customizer/tmp.v"

   
           
            
          
            


             
              
    

   wire [31:0] regfile_data_0, regfile_data_1;
   reg [31:0]  w_result_d;
   reg 	       regfile_raw_0, regfile_raw_0_nxt;
   reg 	       regfile_raw_1, regfile_raw_1_nxt;
   
   
             
          

   always @(reg_write_enable_q_w or write_idx_w or instruction_f)
     begin
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[25:21]))
	  regfile_raw_0_nxt = 1'b1;
	else
	  regfile_raw_0_nxt = 1'b0;
	
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[20:16]))
	  regfile_raw_1_nxt = 1'b1;
	else
	  regfile_raw_1_nxt = 1'b0;
     end
   
   
           
           
       

   always @(regfile_raw_0 or w_result_d or regfile_data_0)
     if (regfile_raw_0)
       reg_data_live_0 = w_result_d;
     else
       reg_data_live_0 = regfile_data_0;
   
   
           
           
       

   always @(regfile_raw_1 or w_result_d or regfile_data_1)
     if (regfile_raw_1)
       reg_data_live_1 = w_result_d;
     else
       reg_data_live_1 = regfile_data_1;
   
   
     

   always @(posedge clk_i  )
     if (rst_i ==  1'b1)
       begin
	  regfile_raw_0 <= 1'b0;
	  regfile_raw_1 <= 1'b0;
	  w_result_d <= 32'b0;
       end
     else
       begin
	  regfile_raw_0 <= regfile_raw_0_nxt;
	  regfile_raw_1 <= regfile_raw_1_nxt;
	  w_result_d <= w_result;
       end
   
   
      

   
   lm32_dp_ram
     #(
       
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_0
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[25:21]),
      
      .rdata_o	(regfile_data_0)
      );

   lm32_dp_ram
     #(
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_1
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[20:16]),
      
      .rdata_o	(regfile_data_1)
      );
 
`line 1910 "/tmp/lm32-customizer/tmp.v"


  
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      
   
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      

`line 1978 "/tmp/lm32-customizer/tmp.v"







  
`line 1985 "/tmp/lm32-customizer/tmp.v"


assign reg_data_0 = use_buf ? reg_data_buf_0 : reg_data_live_0;
assign reg_data_1 = use_buf ? reg_data_buf_1 : reg_data_live_1;
 
`line 1989 "/tmp/lm32-customizer/tmp.v"

  
`line 1990 "/tmp/lm32-customizer/tmp.v"

 

   
   

`line 1995 "/tmp/lm32-customizer/tmp.v"



assign raw_x_0 = (write_idx_x == read_idx_0_d) && (write_enable_q_x ==  1'b1);
assign raw_m_0 = (write_idx_m == read_idx_0_d) && (write_enable_q_m ==  1'b1);
assign raw_w_0 = (write_idx_w == read_idx_0_d) && (write_enable_q_w ==  1'b1);
assign raw_x_1 = (write_idx_x == read_idx_1_d) && (write_enable_q_x ==  1'b1);
assign raw_m_1 = (write_idx_m == read_idx_1_d) && (write_enable_q_m ==  1'b1);
assign raw_w_1 = (write_idx_w == read_idx_1_d) && (write_enable_q_w ==  1'b1);


always @(*)
begin
    if (   (   (x_bypass_enable_x ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_x_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_x_1 ==  1'b1))
               )
           )
        || (   (m_bypass_enable_m ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_m_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_m_1 ==  1'b1))
               )
           )
       )
        interlock =  1'b1;
    else
        interlock =  1'b0;
end


always @(*)
begin
    if (raw_x_0 ==  1'b1)        
        bypass_data_0 = x_result;
    else if (raw_m_0 ==  1'b1)
        bypass_data_0 = m_result;
    else if (raw_w_0 ==  1'b1)
        bypass_data_0 = w_result;
    else
        bypass_data_0 = reg_data_0;
end


always @(*)
begin
    if (raw_x_1 ==  1'b1)
        bypass_data_1 = x_result;
    else if (raw_m_1 ==  1'b1)
        bypass_data_1 = m_result;
    else if (raw_w_1 ==  1'b1)
        bypass_data_1 = w_result;
    else
        bypass_data_1 = reg_data_1;
end

   
          
       
       
     

   assign branch_predict_d = bi_unconditional | bi_conditional;
   assign branch_predict_taken_d = bi_unconditional ? 1'b1 : (bi_conditional ? instruction_d[15] : 1'b0);
   
   
   assign branch_target_d = pc_d + branch_offset_d;

   
   
   
   assign branch_predict_address_d = branch_predict_taken_d ? branch_target_d : pc_f;


always @(*)
begin
    d_result_0 = d_result_sel_0_d[0] ? {pc_f, 2'b00} : bypass_data_0; 
    case (d_result_sel_1_d)
     2'b00:      d_result_1 = { 32{1'b0}};
     2'b01:     d_result_1 = bypass_data_1;
     2'b10: d_result_1 = immediate_d;
    default:                        d_result_1 = { 32{1'bx}};
    endcase
end

      

   
   

`line 2083 "/tmp/lm32-customizer/tmp.v"


  
`line 2085 "/tmp/lm32-customizer/tmp.v"


assign sextb_result_x = {{24{operand_0_x[7]}}, operand_0_x[7:0]};
assign sexth_result_x = {{16{operand_0_x[15]}}, operand_0_x[15:0]};
assign sext_result_x = size_x ==  2'b00 ? sextb_result_x : sexth_result_x;
 
`line 2090 "/tmp/lm32-customizer/tmp.v"


  

      

`line 2095 "/tmp/lm32-customizer/tmp.v"



assign cmp_zero = operand_0_x == operand_1_x;
assign cmp_negative = adder_result_x[ 32-1];
assign cmp_overflow = adder_overflow_x;
assign cmp_carry_n = adder_carry_n_x;
always @(*)
begin
    case (condition_x)
     3'b000:   condition_met_x =  1'b1;
     3'b110:   condition_met_x =  1'b1;
     3'b001:    condition_met_x = cmp_zero;
     3'b111:   condition_met_x = !cmp_zero;
     3'b010:    condition_met_x = !cmp_zero && (cmp_negative == cmp_overflow);
     3'b101:   condition_met_x = cmp_carry_n && !cmp_zero;
     3'b011:   condition_met_x = cmp_negative == cmp_overflow;
     3'b100:  condition_met_x = cmp_carry_n;
    default:              condition_met_x = 1'bx;
    endcase 
end


always @(*)
begin
    x_result =   x_result_sel_add_x ? adder_result_x 
               : x_result_sel_csr_x ? csr_read_data_x
  
`line 2122 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_sext_x ? sext_result_x
 
`line 2124 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2127 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2130 "/tmp/lm32-customizer/tmp.v"

  
`line 2131 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_mc_arith_x ? mc_result_x
 
`line 2133 "/tmp/lm32-customizer/tmp.v"

               : logic_result_x;
end


always @(*)
begin
    m_result =   m_result_sel_compare_m ? {{ 32-1{1'b0}}, condition_met_m}
  
`line 2141 "/tmp/lm32-customizer/tmp.v"

               : m_result_sel_shift_m ? shifter_result_m
 
`line 2143 "/tmp/lm32-customizer/tmp.v"

               : operand_m; 
end


always @(*)
begin
    w_result =    w_result_sel_load_w ? load_data_w
  
`line 2151 "/tmp/lm32-customizer/tmp.v"

                : w_result_sel_mul_w ? multiplier_result_w
 
`line 2153 "/tmp/lm32-customizer/tmp.v"

                : operand_w;
end

  
`line 2157 "/tmp/lm32-customizer/tmp.v"
    

assign branch_taken_x =      (stall_x ==  1'b0)
                          && (   (branch_x ==  1'b1)
                              && ((condition_x ==  3'b000) || (condition_x ==  3'b110))
                              && (valid_x ==  1'b1)
                              && (branch_predict_x ==  1'b0)
                             ); 
 
`line 2165 "/tmp/lm32-customizer/tmp.v"



assign branch_taken_m =      (stall_m ==  1'b0) 
                          && (   (   (branch_m ==  1'b1) 
                                  && (valid_m ==  1'b1)
                                  && (   (   (condition_met_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b0)
					 )
				      || (   (condition_met_m ==  1'b0)
					  && (branch_predict_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b1)
					 )
				     )
                                 ) 
                              || (exception_m ==  1'b1)
                             );


assign branch_mispredict_taken_m =    (condition_met_m ==  1'b0)
                                   && (branch_predict_m ==  1'b1)
	   			   && (branch_predict_taken_m ==  1'b1);
   

assign branch_flushX_m =    (stall_m ==  1'b0)
                         && (   (   (branch_m ==  1'b1) 
                                 && (valid_m ==  1'b1)
			         && (   (condition_met_m ==  1'b1)
				     || (   (condition_met_m ==  1'b0)
					 && (branch_predict_m ==  1'b1)
					 && (branch_predict_taken_m ==  1'b1)
					)
				    )
			        )
			     || (exception_m ==  1'b1)
			    );


assign kill_f =    (   (valid_d ==  1'b1)
                    && (branch_predict_taken_d ==  1'b1)
		   )
                || (branch_taken_m ==  1'b1) 
  
`line 2207 "/tmp/lm32-customizer/tmp.v"
    
                || (branch_taken_x ==  1'b1)
 
`line 2209 "/tmp/lm32-customizer/tmp.v"

  
`line 2210 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1) 
 
`line 2212 "/tmp/lm32-customizer/tmp.v"

  
`line 2213 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2215 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_d =    (branch_taken_m ==  1'b1) 
  
`line 2218 "/tmp/lm32-customizer/tmp.v"
    
                || (branch_taken_x ==  1'b1)
 
`line 2220 "/tmp/lm32-customizer/tmp.v"

  
`line 2221 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1)     
 
`line 2223 "/tmp/lm32-customizer/tmp.v"
                
  
`line 2224 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2226 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_x =    (branch_flushX_m ==  1'b1) 
  
`line 2229 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2231 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_m =     1'b0
  
`line 2234 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2236 "/tmp/lm32-customizer/tmp.v"

                ;                
assign kill_w =     1'b0
  
`line 2239 "/tmp/lm32-customizer/tmp.v"
                
                || (dcache_refill_request ==  1'b1)
 
`line 2241 "/tmp/lm32-customizer/tmp.v"
                
                ;



  
`line 2246 "/tmp/lm32-customizer/tmp.v"

assign breakpoint_exception =    (   (   (break_x ==  1'b1)
				      || (bp_match ==  1'b1)
				     )
				  && (valid_x ==  1'b1)
				 )
  
`line 2252 "/tmp/lm32-customizer/tmp.v"

                              || (jtag_break ==  1'b1)
 
`line 2254 "/tmp/lm32-customizer/tmp.v"

                              ;
 
`line 2256 "/tmp/lm32-customizer/tmp.v"


  
`line 2258 "/tmp/lm32-customizer/tmp.v"

assign watchpoint_exception = wp_match ==  1'b1;
 
`line 2260 "/tmp/lm32-customizer/tmp.v"


  
`line 2262 "/tmp/lm32-customizer/tmp.v"

assign instruction_bus_error_exception = (   (bus_error_x ==  1'b1)
                                          && (valid_x ==  1'b1)
                                         );
assign data_bus_error_exception = data_bus_error_seen ==  1'b1;
 
`line 2267 "/tmp/lm32-customizer/tmp.v"


  
`line 2269 "/tmp/lm32-customizer/tmp.v"

assign divide_by_zero_exception = divide_by_zero_x ==  1'b1;
 
`line 2271 "/tmp/lm32-customizer/tmp.v"


assign system_call_exception = (   (scall_x ==  1'b1)
  
`line 2274 "/tmp/lm32-customizer/tmp.v"

                                && (valid_x ==  1'b1)
 
`line 2276 "/tmp/lm32-customizer/tmp.v"

			       );

  
`line 2279 "/tmp/lm32-customizer/tmp.v"

assign debug_exception_x =  (breakpoint_exception ==  1'b1)
                         || (watchpoint_exception ==  1'b1)
                         ;

assign non_debug_exception_x = (system_call_exception ==  1'b1)
  
`line 2285 "/tmp/lm32-customizer/tmp.v"

                            || (reset_exception ==  1'b1)
 
`line 2287 "/tmp/lm32-customizer/tmp.v"

  
`line 2288 "/tmp/lm32-customizer/tmp.v"

                            || (instruction_bus_error_exception ==  1'b1)
                            || (data_bus_error_exception ==  1'b1)
 
`line 2291 "/tmp/lm32-customizer/tmp.v"

  
`line 2292 "/tmp/lm32-customizer/tmp.v"

                            || (divide_by_zero_exception ==  1'b1)
 
`line 2294 "/tmp/lm32-customizer/tmp.v"

  
`line 2295 "/tmp/lm32-customizer/tmp.v"

                            || (   (interrupt_exception ==  1'b1)
  
`line 2297 "/tmp/lm32-customizer/tmp.v"

                                && (dc_ss ==  1'b0)
 
`line 2299 "/tmp/lm32-customizer/tmp.v"
                            
  
`line 2300 "/tmp/lm32-customizer/tmp.v"

 				&& (store_q_m ==  1'b0)
				&& (D_CYC_O ==  1'b0)
 
`line 2303 "/tmp/lm32-customizer/tmp.v"

                               )
 
`line 2305 "/tmp/lm32-customizer/tmp.v"

                            ;

assign exception_x = (debug_exception_x ==  1'b1) || (non_debug_exception_x ==  1'b1);
 
               
 
                               
                               

 
                               

 
                                  
 
                                   
                            
 
 				   
				   

                               

                            

`line 2330 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
  
`line 2335 "/tmp/lm32-customizer/tmp.v"

  
`line 2336 "/tmp/lm32-customizer/tmp.v"

    if (reset_exception ==  1'b1)
        eid_x =  3'h0;
    else
 
`line 2340 "/tmp/lm32-customizer/tmp.v"
     
  
`line 2341 "/tmp/lm32-customizer/tmp.v"

         if (data_bus_error_exception ==  1'b1)
        eid_x =  3'h4;
    else
 
`line 2345 "/tmp/lm32-customizer/tmp.v"

         if (breakpoint_exception ==  1'b1)
        eid_x =  3'd1;
    else
 
`line 2349 "/tmp/lm32-customizer/tmp.v"

  
`line 2350 "/tmp/lm32-customizer/tmp.v"

         if (data_bus_error_exception ==  1'b1)
        eid_x =  3'h4;
    else
         if (instruction_bus_error_exception ==  1'b1)
        eid_x =  3'h2;
    else
 
`line 2357 "/tmp/lm32-customizer/tmp.v"

  
`line 2358 "/tmp/lm32-customizer/tmp.v"

         if (watchpoint_exception ==  1'b1)
        eid_x =  3'd3;
    else 
 
`line 2362 "/tmp/lm32-customizer/tmp.v"

  
`line 2363 "/tmp/lm32-customizer/tmp.v"

         if (divide_by_zero_exception ==  1'b1)
        eid_x =  3'h5;
    else
 
`line 2367 "/tmp/lm32-customizer/tmp.v"

  
`line 2368 "/tmp/lm32-customizer/tmp.v"

         if (   (interrupt_exception ==  1'b1)
  
`line 2370 "/tmp/lm32-customizer/tmp.v"

             && (dc_ss ==  1'b0)
 
`line 2372 "/tmp/lm32-customizer/tmp.v"
                            
            )
        eid_x =  3'h6;
    else
 
`line 2376 "/tmp/lm32-customizer/tmp.v"

        eid_x =  3'h7;
end



assign stall_a = (stall_f ==  1'b1);
                
assign stall_f = (stall_d ==  1'b1);
                
assign stall_d =   (stall_x ==  1'b1) 
                || (   (interlock ==  1'b1)
                    && (kill_d ==  1'b0)
                   ) 
		|| (   (   (eret_d ==  1'b1)
			|| (scall_d ==  1'b1)
  
`line 2392 "/tmp/lm32-customizer/tmp.v"

			|| (bus_error_d ==  1'b1)
 
`line 2394 "/tmp/lm32-customizer/tmp.v"

		       )
		    && (   (load_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
  
`line 2404 "/tmp/lm32-customizer/tmp.v"

		|| (   (   (break_d ==  1'b1)
			|| (bret_d ==  1'b1)
		       )
		    && (   (load_q_x ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
 
`line 2416 "/tmp/lm32-customizer/tmp.v"
                   
                || (   (csr_write_enable_d ==  1'b1)
                    && (load_q_x ==  1'b1)
                   )                      
                ;
                
assign stall_x =    (stall_m ==  1'b1)
  
`line 2423 "/tmp/lm32-customizer/tmp.v"

                 || (   (mc_stall_request_x ==  1'b1)
                     && (kill_x ==  1'b0)
                    ) 
 
`line 2427 "/tmp/lm32-customizer/tmp.v"

  
                 
                 
                       
		           
			    
			
		    

`line 2436 "/tmp/lm32-customizer/tmp.v"

                 ;

assign stall_m =    (stall_wb_load ==  1'b1)
  
                    

`line 2442 "/tmp/lm32-customizer/tmp.v"

                 || (   (D_CYC_O ==  1'b1)
                     && (   (store_m ==  1'b1)
		         
          
          

		  
	 
	

          
           
          
       

  
`line 2458 "/tmp/lm32-customizer/tmp.v"

		         || ((store_x ==  1'b1) && (interrupt_exception ==  1'b1))
 
`line 2460 "/tmp/lm32-customizer/tmp.v"

                         || (load_m ==  1'b1)
                         || (load_x ==  1'b1)
                        ) 
                    ) 
 
`line 2465 "/tmp/lm32-customizer/tmp.v"
                 
  
`line 2466 "/tmp/lm32-customizer/tmp.v"

                 || (dcache_stall_request ==  1'b1)     
 
`line 2468 "/tmp/lm32-customizer/tmp.v"
                                    
  
`line 2469 "/tmp/lm32-customizer/tmp.v"

                 || (icache_stall_request ==  1'b1)     
                 || ((I_CYC_O ==  1'b1) && ((branch_m ==  1'b1) || (exception_m ==  1'b1))) 
 
 
                                


`line 2476 "/tmp/lm32-customizer/tmp.v"
                               
  
                                  
                        
                    

`line 2481 "/tmp/lm32-customizer/tmp.v"

                 ;      


  
`line 2485 "/tmp/lm32-customizer/tmp.v"

assign q_d = (valid_d ==  1'b1) && (kill_d ==  1'b0);
 
`line 2487 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2491 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2494 "/tmp/lm32-customizer/tmp.v"

  
`line 2495 "/tmp/lm32-customizer/tmp.v"

assign divide_q_d = (divide_d ==  1'b1) && (q_d ==  1'b1);
assign modulus_q_d = (modulus_d ==  1'b1) && (q_d ==  1'b1);
 
`line 2498 "/tmp/lm32-customizer/tmp.v"

assign q_x = (valid_x ==  1'b1) && (kill_x ==  1'b0);
assign csr_write_enable_q_x = (csr_write_enable_x ==  1'b1) && (q_x ==  1'b1);
assign eret_q_x = (eret_x ==  1'b1) && (q_x ==  1'b1);
  
`line 2502 "/tmp/lm32-customizer/tmp.v"

assign bret_q_x = (bret_x ==  1'b1) && (q_x ==  1'b1);
 
`line 2504 "/tmp/lm32-customizer/tmp.v"

assign load_q_x = (load_x ==  1'b1) 
               && (q_x ==  1'b1)
  
`line 2507 "/tmp/lm32-customizer/tmp.v"

               && (bp_match ==  1'b0)
 
`line 2509 "/tmp/lm32-customizer/tmp.v"

                  ;
assign store_q_x = (store_x ==  1'b1) 
               && (q_x ==  1'b1)
  
`line 2513 "/tmp/lm32-customizer/tmp.v"

               && (bp_match ==  1'b0)
 
`line 2515 "/tmp/lm32-customizer/tmp.v"

                  ;
  
         

`line 2519 "/tmp/lm32-customizer/tmp.v"
                              
assign q_m = (valid_m ==  1'b1) && (kill_m ==  1'b0) && (exception_m ==  1'b0);
assign load_q_m = (load_m ==  1'b1) && (q_m ==  1'b1);
assign store_q_m = (store_m ==  1'b1) && (q_m ==  1'b1);
  
`line 2523 "/tmp/lm32-customizer/tmp.v"

assign debug_exception_q_w = ((debug_exception_w ==  1'b1) && (valid_w ==  1'b1));
assign non_debug_exception_q_w = ((non_debug_exception_w ==  1'b1) && (valid_w ==  1'b1));        
 
                 

`line 2528 "/tmp/lm32-customizer/tmp.v"


assign write_enable_q_x = (write_enable_x ==  1'b1) && (valid_x ==  1'b1) && (branch_flushX_m ==  1'b0);
assign write_enable_q_m = (write_enable_m ==  1'b1) && (valid_m ==  1'b1);
assign write_enable_q_w = (write_enable_w ==  1'b1) && (valid_w ==  1'b1);

assign reg_write_enable_q_w = (write_enable_w ==  1'b1) && (kill_w ==  1'b0) && (valid_w ==  1'b1);


assign cfg = {
               6'h02,
              watchpoints[3:0],
              breakpoints[3:0],
              interrupts[5:0],
  
`line 2542 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2546 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2549 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2551 "/tmp/lm32-customizer/tmp.v"

  
`line 2552 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2556 "/tmp/lm32-customizer/tmp.v"

  
`line 2557 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2561 "/tmp/lm32-customizer/tmp.v"

  
`line 2562 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2566 "/tmp/lm32-customizer/tmp.v"

  
`line 2567 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2571 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2574 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2576 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2579 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2581 "/tmp/lm32-customizer/tmp.v"

  
`line 2582 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2586 "/tmp/lm32-customizer/tmp.v"

  
`line 2587 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2591 "/tmp/lm32-customizer/tmp.v"

  
`line 2592 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2596 "/tmp/lm32-customizer/tmp.v"

  
`line 2597 "/tmp/lm32-customizer/tmp.v"
 
               1'b1
 
              

`line 2601 "/tmp/lm32-customizer/tmp.v"

              };

assign cfg2 = {
		     30'b0,
  
		     

`line 2608 "/tmp/lm32-customizer/tmp.v"

		      1'b0,
 
`line 2610 "/tmp/lm32-customizer/tmp.v"

  
		     

`line 2613 "/tmp/lm32-customizer/tmp.v"

		      1'b0
 
`line 2615 "/tmp/lm32-customizer/tmp.v"

		     };
   

  
`line 2619 "/tmp/lm32-customizer/tmp.v"

assign iflush = (   (csr_write_enable_d ==  1'b1) 
                 && (csr_d ==  5'h3)
                 && (stall_d ==  1'b0)
                 && (kill_d ==  1'b0)
                 && (valid_d ==  1'b1))

  
`line 2626 "/tmp/lm32-customizer/tmp.v"

             ||
                (   (jtag_csr_write_enable ==  1'b1)
		 && (jtag_csr ==  5'h3))
 
`line 2630 "/tmp/lm32-customizer/tmp.v"

		 ;
 
`line 2632 "/tmp/lm32-customizer/tmp.v"
 
  
`line 2633 "/tmp/lm32-customizer/tmp.v"

assign dflush_x = (   (csr_write_enable_q_x ==  1'b1) 
                   && (csr_x ==  5'h4))

  
`line 2637 "/tmp/lm32-customizer/tmp.v"

               ||
                  (   (jtag_csr_write_enable ==  1'b1)
		   && (jtag_csr ==  5'h4))
 
`line 2641 "/tmp/lm32-customizer/tmp.v"

		   ;
 
`line 2643 "/tmp/lm32-customizer/tmp.v"
 


assign csr_d = read_idx_0_d[ (5-1):0];


always @(*)
begin
    case (csr_x)
  
`line 2652 "/tmp/lm32-customizer/tmp.v"

     5'h0,
     5'h1,
     5'h2:   csr_read_data_x = interrupt_csr_read_data_x;  
 
`line 2656 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2659 "/tmp/lm32-customizer/tmp.v"

     5'h6:  csr_read_data_x = cfg;
     5'h7:  csr_read_data_x = {eba, 8'h00};
  
`line 2662 "/tmp/lm32-customizer/tmp.v"

     5'h9: csr_read_data_x = {deba, 8'h00};
 
`line 2664 "/tmp/lm32-customizer/tmp.v"

  
`line 2665 "/tmp/lm32-customizer/tmp.v"

     5'he:  csr_read_data_x = jtx_csr_read_data;  
     5'hf:  csr_read_data_x = jrx_csr_read_data;
 
`line 2668 "/tmp/lm32-customizer/tmp.v"

     5'ha: csr_read_data_x = cfg2;
      
    default:        csr_read_data_x = { 32{1'bx}};
    endcase
end






always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        eba <= eba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  5'h7) && (stall_x ==  1'b0))
            eba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
`line 2688 "/tmp/lm32-customizer/tmp.v"

        if ((jtag_csr_write_enable ==  1'b1) && (jtag_csr ==  5'h7))
            eba <= jtag_csr_write_data[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
 
`line 2691 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 2695 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        deba <= deba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  5'h9) && (stall_x ==  1'b0))
            deba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
`line 2705 "/tmp/lm32-customizer/tmp.v"

        if ((jtag_csr_write_enable ==  1'b1) && (jtag_csr ==  5'h9))
            deba <= jtag_csr_write_data[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
 
`line 2708 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 2711 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
            


`line 2722 "/tmp/lm32-customizer/tmp.v"


  
`line 2724 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        data_bus_error_seen <=  1'b0;
    else
    begin
        
        if ((D_ERR_I ==  1'b1) && (D_CYC_O ==  1'b1))
            data_bus_error_seen <=  1'b1;
        
        if ((exception_m ==  1'b1) && (kill_m ==  1'b0))
            data_bus_error_seen <=  1'b0;
    end
end
 
`line 2740 "/tmp/lm32-customizer/tmp.v"

 


  
`line 2744 "/tmp/lm32-customizer/tmp.v"

  
`line 2745 "/tmp/lm32-customizer/tmp.v"

always @(*)
begin
    if (   (icache_refill_request ==  1'b1) 
        || (dcache_refill_request ==  1'b1)
       )
        valid_a =  1'b0;
    else if (   (icache_restart_request ==  1'b1) 
             || (dcache_restart_request ==  1'b1) 
            ) 
        valid_a =  1'b1;
    else 
        valid_a = !icache_refilling && !dcache_refilling;
end 
 
 

        
          
         
          
     
          
 

`line 2769 "/tmp/lm32-customizer/tmp.v"

 
 
 

        
          
         
          
     
          
 


`line 2782 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        valid_f <=  1'b0;
        valid_d <=  1'b0;
        valid_x <=  1'b0;
        valid_m <=  1'b0;
        valid_w <=  1'b0;
    end
    else
    begin    
        if ((kill_f ==  1'b1) || (stall_a ==  1'b0))
  
`line 2797 "/tmp/lm32-customizer/tmp.v"

            valid_f <= valid_a;    
 
              

`line 2801 "/tmp/lm32-customizer/tmp.v"
            
        else if (stall_f ==  1'b0)
            valid_f <=  1'b0;            

        if (kill_d ==  1'b1)
            valid_d <=  1'b0;
        else if (stall_f ==  1'b0)
            valid_d <= valid_f & !kill_f;
        else if (stall_d ==  1'b0)
            valid_d <=  1'b0;
       
        if (stall_d ==  1'b0)
            valid_x <= valid_d & !kill_d;
        else if (kill_x ==  1'b1)
            valid_x <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_x <=  1'b0;

        if (kill_m ==  1'b1)
            valid_m <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_m <= valid_x & !kill_x;
        else if (stall_m ==  1'b0)
            valid_m <=  1'b0;

        if (stall_m ==  1'b0)
            valid_w <= valid_m & !kill_m;
        else 
            valid_w <=  1'b0;        
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
  
                 

`line 2840 "/tmp/lm32-customizer/tmp.v"
        
        operand_0_x <= { 32{1'b0}};
        operand_1_x <= { 32{1'b0}};
        store_operand_x <= { 32{1'b0}};
        branch_target_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};        
        x_result_sel_csr_x <=  1'b0;
  
`line 2846 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_mc_arith_x <=  1'b0;
 
`line 2848 "/tmp/lm32-customizer/tmp.v"

      
          

`line 2851 "/tmp/lm32-customizer/tmp.v"

  
`line 2852 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_sext_x <=  1'b0;
 
`line 2854 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_logic_x <=  1'b0;
  
          

`line 2858 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_add_x <=  1'b0;
        m_result_sel_compare_x <=  1'b0;
  
`line 2861 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_x <=  1'b0;
 
`line 2863 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_x <=  1'b0;
  
`line 2865 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_x <=  1'b0;
 
`line 2867 "/tmp/lm32-customizer/tmp.v"

        x_bypass_enable_x <=  1'b0;
        m_bypass_enable_x <=  1'b0;
        write_enable_x <=  1'b0;
        write_idx_x <= { 5{1'b0}};
        csr_x <= { 5{1'b0}};
        load_x <=  1'b0;
        store_x <=  1'b0;
        size_x <= { 2{1'b0}};
        sign_extend_x <=  1'b0;
        adder_op_x <=  1'b0;
        adder_op_x_n <=  1'b0;
        logic_op_x <= 4'h0;
  
`line 2880 "/tmp/lm32-customizer/tmp.v"

        direction_x <=  1'b0;
 
`line 2882 "/tmp/lm32-customizer/tmp.v"

  
          


`line 2886 "/tmp/lm32-customizer/tmp.v"

        branch_x <=  1'b0;
        branch_predict_x <=  1'b0;
        branch_predict_taken_x <=  1'b0;
        condition_x <=  3'b000;
  
`line 2891 "/tmp/lm32-customizer/tmp.v"

        break_x <=  1'b0;
 
`line 2893 "/tmp/lm32-customizer/tmp.v"

        scall_x <=  1'b0;
        eret_x <=  1'b0;
  
`line 2896 "/tmp/lm32-customizer/tmp.v"

        bret_x <=  1'b0;
 
`line 2898 "/tmp/lm32-customizer/tmp.v"

  
`line 2899 "/tmp/lm32-customizer/tmp.v"

        bus_error_x <=  1'b0;
        data_bus_error_exception_m <=  1'b0;
 
`line 2902 "/tmp/lm32-customizer/tmp.v"

        csr_write_enable_x <=  1'b0;
        operand_m <= { 32{1'b0}};
        branch_target_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        m_result_sel_compare_m <=  1'b0;
  
`line 2907 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_m <=  1'b0;
 
`line 2909 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_m <=  1'b0;
  
`line 2911 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_m <=  1'b0;
 
`line 2913 "/tmp/lm32-customizer/tmp.v"

        m_bypass_enable_m <=  1'b0;
        branch_m <=  1'b0;
        branch_predict_m <=  1'b0;
	branch_predict_taken_m <=  1'b0;
        exception_m <=  1'b0;
        load_m <=  1'b0;
        store_m <=  1'b0;
  
`line 2921 "/tmp/lm32-customizer/tmp.v"

        direction_m <=  1'b0;
 
`line 2923 "/tmp/lm32-customizer/tmp.v"

        write_enable_m <=  1'b0;            
        write_idx_m <= { 5{1'b0}};
        condition_met_m <=  1'b0;
  
`line 2927 "/tmp/lm32-customizer/tmp.v"

        dflush_m <=  1'b0;
 
`line 2929 "/tmp/lm32-customizer/tmp.v"

  
`line 2930 "/tmp/lm32-customizer/tmp.v"

        debug_exception_m <=  1'b0;
        non_debug_exception_m <=  1'b0;        
 
`line 2933 "/tmp/lm32-customizer/tmp.v"

        operand_w <= { 32{1'b0}};        
        w_result_sel_load_w <=  1'b0;
  
`line 2936 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <=  1'b0;
 
`line 2938 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= { 5{1'b0}};        
        write_enable_w <=  1'b0;
  
`line 2941 "/tmp/lm32-customizer/tmp.v"

        debug_exception_w <=  1'b0;
        non_debug_exception_w <=  1'b0;        
 
          

`line 2946 "/tmp/lm32-customizer/tmp.v"

  
`line 2947 "/tmp/lm32-customizer/tmp.v"

        memop_pc_w <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
 
`line 2949 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        
       
        if (stall_x ==  1'b0)
        begin
  
                     

`line 2959 "/tmp/lm32-customizer/tmp.v"
        
            operand_0_x <= d_result_0;
            operand_1_x <= d_result_1;
            store_operand_x <= bypass_data_1;
            branch_target_x <= branch_reg_d ==  1'b1 ? bypass_data_0[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] : branch_target_d;            
            x_result_sel_csr_x <= x_result_sel_csr_d;
  
`line 2965 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_mc_arith_x <= x_result_sel_mc_arith_d;
 
`line 2967 "/tmp/lm32-customizer/tmp.v"

      
              

`line 2970 "/tmp/lm32-customizer/tmp.v"

  
`line 2971 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_sext_x <= x_result_sel_sext_d;
 
`line 2973 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_logic_x <= x_result_sel_logic_d;
  
              

`line 2977 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_add_x <= x_result_sel_add_d;
            m_result_sel_compare_x <= m_result_sel_compare_d;
  
`line 2980 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_x <= m_result_sel_shift_d;
 
`line 2982 "/tmp/lm32-customizer/tmp.v"
    
            w_result_sel_load_x <= w_result_sel_load_d;
  
`line 2984 "/tmp/lm32-customizer/tmp.v"

            w_result_sel_mul_x <= w_result_sel_mul_d;
 
`line 2986 "/tmp/lm32-customizer/tmp.v"

            x_bypass_enable_x <= x_bypass_enable_d;
            m_bypass_enable_x <= m_bypass_enable_d;
            load_x <= load_d;
            store_x <= store_d;
            branch_x <= branch_d;
	    branch_predict_x <= branch_predict_d;
	    branch_predict_taken_x <= branch_predict_taken_d;
	    write_idx_x <= write_idx_d;
            csr_x <= csr_d;
            size_x <= size_d;
            sign_extend_x <= sign_extend_d;
            adder_op_x <= adder_op_d;
            adder_op_x_n <= ~adder_op_d;
            logic_op_x <= logic_op_d;
  
`line 3001 "/tmp/lm32-customizer/tmp.v"

            direction_x <= direction_d;
 
`line 3003 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3006 "/tmp/lm32-customizer/tmp.v"

            condition_x <= condition_d;
            csr_write_enable_x <= csr_write_enable_d;
  
`line 3009 "/tmp/lm32-customizer/tmp.v"

            break_x <= break_d;
 
`line 3011 "/tmp/lm32-customizer/tmp.v"

            scall_x <= scall_d;
  
`line 3013 "/tmp/lm32-customizer/tmp.v"

            bus_error_x <= bus_error_d;
 
`line 3015 "/tmp/lm32-customizer/tmp.v"

            eret_x <= eret_d;
  
`line 3017 "/tmp/lm32-customizer/tmp.v"

            bret_x <= bret_d; 
 
`line 3019 "/tmp/lm32-customizer/tmp.v"

            write_enable_x <= write_enable_d;
        end
        
        

        if (stall_m ==  1'b0)
        begin
            operand_m <= x_result;
            m_result_sel_compare_m <= m_result_sel_compare_x;
  
`line 3029 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_m <= m_result_sel_shift_x;
 
`line 3031 "/tmp/lm32-customizer/tmp.v"
    
            if (exception_x ==  1'b1)
            begin
                w_result_sel_load_m <=  1'b0;
  
`line 3035 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <=  1'b0;
 
`line 3037 "/tmp/lm32-customizer/tmp.v"

            end
            else
            begin
                w_result_sel_load_m <= w_result_sel_load_x;
  
`line 3042 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <= w_result_sel_mul_x;
 
`line 3044 "/tmp/lm32-customizer/tmp.v"

            end
            m_bypass_enable_m <= m_bypass_enable_x;
  
`line 3047 "/tmp/lm32-customizer/tmp.v"

            direction_m <= direction_x;
 
`line 3049 "/tmp/lm32-customizer/tmp.v"

            load_m <= load_x;
            store_m <= store_x;
  
`line 3052 "/tmp/lm32-customizer/tmp.v"
    
            branch_m <= branch_x && !branch_taken_x;
 
              
	      
	      

`line 3058 "/tmp/lm32-customizer/tmp.v"

  
`line 3059 "/tmp/lm32-customizer/tmp.v"

	   
	   
	   
	   
	   
            if (non_debug_exception_x ==  1'b1) 
                write_idx_m <=  5'd30;
            else if (debug_exception_x ==  1'b1)
                write_idx_m <=  5'd31;
            else 
                write_idx_m <= write_idx_x;
 
               
                  
             
                  

`line 3076 "/tmp/lm32-customizer/tmp.v"

            condition_met_m <= condition_met_x;
  
`line 3078 "/tmp/lm32-customizer/tmp.v"

	   if (exception_x ==  1'b1)
	     if ((dc_re ==  1'b1)
		 || ((debug_exception_x ==  1'b1) 
		     && (non_debug_exception_x ==  1'b0)))
	       branch_target_m <= {deba, eid_x, {3{1'b0}}};
	     else
	       branch_target_m <= {eba, eid_x, {3{1'b0}}};
	   else
	     branch_target_m <= branch_target_x;
 
                      

`line 3090 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3093 "/tmp/lm32-customizer/tmp.v"

  
`line 3094 "/tmp/lm32-customizer/tmp.v"

            dflush_m <= dflush_x;
 
`line 3096 "/tmp/lm32-customizer/tmp.v"

            eret_m <= eret_q_x;
  
`line 3098 "/tmp/lm32-customizer/tmp.v"

            bret_m <= bret_q_x; 
 
`line 3100 "/tmp/lm32-customizer/tmp.v"

            write_enable_m <= exception_x ==  1'b1 ?  1'b1 : write_enable_x;            
  
`line 3102 "/tmp/lm32-customizer/tmp.v"

            debug_exception_m <= debug_exception_x;
            non_debug_exception_m <= non_debug_exception_x;        
 
`line 3105 "/tmp/lm32-customizer/tmp.v"

        end
        
        
        if (stall_m ==  1'b0)
        begin
            if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
                exception_m <=  1'b1;
            else 
                exception_m <=  1'b0;
  
`line 3115 "/tmp/lm32-customizer/tmp.v"

	   data_bus_error_exception_m <=    (data_bus_error_exception ==  1'b1) 
  
`line 3117 "/tmp/lm32-customizer/tmp.v"

					 && (reset_exception ==  1'b0)
 
`line 3119 "/tmp/lm32-customizer/tmp.v"

					 ;
 
`line 3121 "/tmp/lm32-customizer/tmp.v"

	end
                
        
  
`line 3125 "/tmp/lm32-customizer/tmp.v"

        operand_w <= exception_m ==  1'b1 ? (data_bus_error_exception_m ? {memop_pc_w, 2'b00} : {pc_m, 2'b00}) : m_result;
 
                 

`line 3129 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_load_w <= w_result_sel_load_m;
  
`line 3131 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <= w_result_sel_mul_m;
 
`line 3133 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= write_idx_m;
  
          
          
 
           


`line 3141 "/tmp/lm32-customizer/tmp.v"

        write_enable_w <= write_enable_m;
  
`line 3143 "/tmp/lm32-customizer/tmp.v"

        debug_exception_w <= debug_exception_m;
        non_debug_exception_w <= non_debug_exception_m;
 
          

`line 3148 "/tmp/lm32-customizer/tmp.v"

  
`line 3149 "/tmp/lm32-customizer/tmp.v"

        if (   (stall_m ==  1'b0)
            && (   (load_q_m ==  1'b1) 
                || (store_q_m ==  1'b1)
               )
	   )
          memop_pc_w <= pc_m;
 
`line 3156 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 3160 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        use_buf <=  1'b0;
        reg_data_buf_0 <= { 32{1'b0}};
        reg_data_buf_1 <= { 32{1'b0}};
    end
    else
    begin
        if (stall_d ==  1'b0)
            use_buf <=  1'b0;
        else if (use_buf ==  1'b0)
        begin        
            reg_data_buf_0 <= reg_data_live_0;
            reg_data_buf_1 <= reg_data_live_1;
            use_buf <=  1'b1;
        end        
        if (reg_write_enable_q_w ==  1'b1)
        begin
            if (write_idx_w == read_idx_0_d)
                reg_data_buf_0 <= w_result;
            if (write_idx_w == read_idx_1_d)
                reg_data_buf_1 <= w_result;
        end
    end
end
 
`line 3190 "/tmp/lm32-customizer/tmp.v"


  
`line 3192 "/tmp/lm32-customizer/tmp.v"

 

   

        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
        
     
           
            
        


`line 3236 "/tmp/lm32-customizer/tmp.v"


  

   

       
    
          
          
          
          
          
 
          

          
    
    
    
          
        
 
               

           

                
              
              
              
              
        
        
              
        
             
        
            
                 
            
                
                  
                  
            
            
              
            
              
 
              

        
        
        
              
 
              

        
    


`line 3298 "/tmp/lm32-customizer/tmp.v"

      







initial
begin
  
`line 3309 "/tmp/lm32-customizer/tmp.v"

    reg_0.ram[0] = { 32{1'b0}};
    reg_1.ram[0] = { 32{1'b0}};
 
      

`line 3314 "/tmp/lm32-customizer/tmp.v"

end


        
endmodule 









































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_load_store_unit_full_debug (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_x,
    stall_m,
    kill_x,
    kill_m,
    exception_m,
    store_operand_x,
    load_store_address_x,
    load_store_address_m,
    load_store_address_w,
    load_x,
    store_x,
    load_q_x,
    store_q_x,
    load_q_m,
    store_q_m,
    sign_extend_x,
    size_x,
  
`line 3390 "/tmp/lm32-customizer/tmp.v"

    dflush,
 
`line 3392 "/tmp/lm32-customizer/tmp.v"

  
    

`line 3395 "/tmp/lm32-customizer/tmp.v"

    
    d_dat_i,
    d_ack_i,
    d_err_i,
    d_rty_i,
    
    
  
`line 3403 "/tmp/lm32-customizer/tmp.v"

    dcache_refill_request,
    dcache_restart_request,
    dcache_stall_request,
    dcache_refilling,
 
`line 3408 "/tmp/lm32-customizer/tmp.v"
    
  
    
    
    
    

`line 3414 "/tmp/lm32-customizer/tmp.v"
			     
    load_data_w,
    stall_wb_load,
    
    d_dat_o,
    d_adr_o,
    d_cyc_o,
    d_sel_o,
    d_stb_o,
    d_we_o,
    d_cti_o,
    d_lock_o,
    d_bte_o
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          
input kill_x;                                           
input kill_m;                                           
input exception_m;                                      

input [ (32-1):0] store_operand_x;                 
input [ (32-1):0] load_store_address_x;            
input [ (32-1):0] load_store_address_m;            
input [1:0] load_store_address_w;                       
input load_x;                                           
input store_x;                                          
input load_q_x;                                         
input store_q_x;                                        
input load_q_m;                                         
input store_q_m;                                        
input sign_extend_x;                                    
input [ 1:0] size_x;                          

  
`line 3471 "/tmp/lm32-customizer/tmp.v"

input dflush;                                           
 
`line 3473 "/tmp/lm32-customizer/tmp.v"


     
                       

`line 3477 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] d_dat_i;                         
input d_ack_i;                                          
input d_err_i;                                          
input d_rty_i;                                          





  
`line 3488 "/tmp/lm32-customizer/tmp.v"

output dcache_refill_request;                           
wire   dcache_refill_request;
output dcache_restart_request;                          
wire   dcache_restart_request;
output dcache_stall_request;                            
wire   dcache_stall_request;
output dcache_refilling;
wire   dcache_refilling;
 
`line 3497 "/tmp/lm32-customizer/tmp.v"


     
                                
    
                  
    
                                       
   
                             
                               

`line 3508 "/tmp/lm32-customizer/tmp.v"

   
output [ (32-1):0] load_data_w;                    
reg    [ (32-1):0] load_data_w;
output stall_wb_load;                                   
reg    stall_wb_load;

output [ (32-1):0] d_dat_o;                        
reg    [ (32-1):0] d_dat_o;
output [ (32-1):0] d_adr_o;                        
reg    [ (32-1):0] d_adr_o;
output d_cyc_o;                                         
reg    d_cyc_o;
output [ (4-1):0] d_sel_o;                 
reg    [ (4-1):0] d_sel_o;
output d_stb_o;                                         
reg    d_stb_o; 
output d_we_o;                                          
reg    d_we_o;
output [ (3-1):0] d_cti_o;                       
reg    [ (3-1):0] d_cti_o;
output d_lock_o;                                        
reg    d_lock_o;
output [ (2-1):0] d_bte_o;                       
wire   [ (2-1):0] d_bte_o;






reg [ 1:0] size_m;
reg [ 1:0] size_w;
reg sign_extend_m;
reg sign_extend_w;
reg [ (32-1):0] store_data_x;       
reg [ (32-1):0] store_data_m;       
reg [ (4-1):0] byte_enable_x;
reg [ (4-1):0] byte_enable_m;
wire [ (32-1):0] data_m;
reg [ (32-1):0] data_w;

  
`line 3550 "/tmp/lm32-customizer/tmp.v"

wire dcache_select_x;                                   
reg dcache_select_m;
wire [ (32-1):0] dcache_data_m;                    
wire [ (32-1):0] dcache_refill_address;            
reg dcache_refill_ready;                                
wire [ (3-1):0] first_cycle_type;                
wire [ (3-1):0] next_cycle_type;                 
wire last_word;                                         
wire [ (32-1):0] first_address;                    
 
`line 3560 "/tmp/lm32-customizer/tmp.v"

  
                                      
 
                                      
                    
                      
                        
                  

`line 3569 "/tmp/lm32-customizer/tmp.v"

wire wb_select_x;                                       
  
                                      
  

`line 3574 "/tmp/lm32-customizer/tmp.v"

reg wb_select_m;
reg [ (32-1):0] wb_data_m;                         
reg wb_load_complete;                                   





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






  
   
    
     
       
                    

       
       
       
       
       
       
	
              
              
              
              
              
              

                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	    
	                   
	                   
	                        
	                           
	    
	                         
	                         
	    
   
   
               
              
              
    
      
        
       
	    
	    
       
     
       
	     
	      
	  
	         
                 
	         
	            
	             
		 
	         
	     
	      
	  
	          
		   
	       
	        
       
   
          

`line 3671 "/tmp/lm32-customizer/tmp.v"


  
`line 3673 "/tmp/lm32-customizer/tmp.v"


lm32_dcache_full_debug #(
    .associativity          (associativity),
    .sets                   (sets),
    .bytes_per_line         (bytes_per_line),
    .base_address           (base_address),
    .limit                  (limit)
    ) dcache ( 
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),      
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .address_x              (load_store_address_x),
    .address_m              (load_store_address_m),
    .load_q_m               (load_q_m & dcache_select_m),
    .store_q_m              (store_q_m & dcache_select_m),
    .store_data             (store_data_m),
    .store_byte_select      (byte_enable_m & {4{dcache_select_m}}),
    .refill_ready           (dcache_refill_ready),
    .refill_data            (wb_data_m),
    .dflush                 (dflush),
    
    .stall_request          (dcache_stall_request),
    .restart_request        (dcache_restart_request),
    .refill_request         (dcache_refill_request),
    .refill_address         (dcache_refill_address),
    .refilling              (dcache_refilling),
    .load_data              (dcache_data_m)
    );
 
`line 3705 "/tmp/lm32-customizer/tmp.v"







  
            
                             

`line 3715 "/tmp/lm32-customizer/tmp.v"


  
            
                             

`line 3720 "/tmp/lm32-customizer/tmp.v"

   
  
`line 3722 "/tmp/lm32-customizer/tmp.v"

   assign dcache_select_x =    (load_store_address_x >=  32'h0) 
                            && (load_store_address_x <=  32'h7fffffff)
  
                               

`line 3727 "/tmp/lm32-customizer/tmp.v"

  
                               

`line 3730 "/tmp/lm32-customizer/tmp.v"

                     ;
 
`line 3732 "/tmp/lm32-customizer/tmp.v"

	  
   assign wb_select_x =     1'b1
  
`line 3735 "/tmp/lm32-customizer/tmp.v"

                        && !dcache_select_x 
 
`line 3737 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3740 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3743 "/tmp/lm32-customizer/tmp.v"

                     ;


always @(*)
begin
    case (size_x)
     2'b00:  store_data_x = {4{store_operand_x[7:0]}};
     2'b11: store_data_x = {2{store_operand_x[15:0]}};
     2'b10:  store_data_x = store_operand_x;    
    default:          store_data_x = { 32{1'bx}};
    endcase
end


always @(*)
begin
    casez ({size_x, load_store_address_x[1:0]})
    { 2'b00, 2'b11}:  byte_enable_x = 4'b0001;
    { 2'b00, 2'b10}:  byte_enable_x = 4'b0010;
    { 2'b00, 2'b01}:  byte_enable_x = 4'b0100;
    { 2'b00, 2'b00}:  byte_enable_x = 4'b1000;
    { 2'b11, 2'b1?}: byte_enable_x = 4'b0011;
    { 2'b11, 2'b0?}: byte_enable_x = 4'b1100;
    { 2'b10, 2'b??}:  byte_enable_x = 4'b1111;
    default:                   byte_enable_x = 4'bxxxx;
    endcase
end

  

       
       
       
       

`line 3778 "/tmp/lm32-customizer/tmp.v"


  

       
       
       
       

`line 3786 "/tmp/lm32-customizer/tmp.v"


  
   
   
   
   
            
	                     
	                     
   
   
           
	                  
   
   
   
   
   
           
	                            

`line 3807 "/tmp/lm32-customizer/tmp.v"

   
  
`line 3809 "/tmp/lm32-customizer/tmp.v"

   
   
   
         
                    
                       
                      
                        
                         
                        
  
   
         
                    
                       
                      
                      
  
 
`line 3828 "/tmp/lm32-customizer/tmp.v"

    
   
         
                    
                       
                      
                      
  
`line 3836 "/tmp/lm32-customizer/tmp.v"

   
   assign data_m = wb_select_m ==  1'b1 
                   ? wb_data_m 
                   : dcache_data_m;
   
`line 3841 "/tmp/lm32-customizer/tmp.v"

  
`line 3842 "/tmp/lm32-customizer/tmp.v"

 
  
   
   
         
                     
                      
                      
                      
  
   
         
                     
                    
  
 
   
   
         
                     
                    
  
   
      
  
 

`line 3869 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    casez ({size_w, load_store_address_w[1:0]})
    { 2'b00, 2'b11}:  load_data_w = {{24{sign_extend_w & data_w[7]}}, data_w[7:0]};
    { 2'b00, 2'b10}:  load_data_w = {{24{sign_extend_w & data_w[15]}}, data_w[15:8]};
    { 2'b00, 2'b01}:  load_data_w = {{24{sign_extend_w & data_w[23]}}, data_w[23:16]};
    { 2'b00, 2'b00}:  load_data_w = {{24{sign_extend_w & data_w[31]}}, data_w[31:24]};
    { 2'b11, 2'b1?}: load_data_w = {{16{sign_extend_w & data_w[15]}}, data_w[15:0]};
    { 2'b11, 2'b0?}: load_data_w = {{16{sign_extend_w & data_w[31]}}, data_w[31:16]};
    { 2'b10, 2'b??}:  load_data_w = data_w;
    default:                   load_data_w = { 32{1'bx}};
    endcase
end


assign d_bte_o =  2'b00;

  
`line 3889 "/tmp/lm32-customizer/tmp.v"
                

generate 
    case (bytes_per_line)
    4:
    begin
assign first_cycle_type =  3'b111;
assign next_cycle_type =  3'b111;
assign last_word =  1'b1;
assign first_address = {dcache_refill_address[ 32-1:2], 2'b00};
    end
    8:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type =  3'b111;
assign last_word = (&d_adr_o[addr_offset_msb:addr_offset_lsb]) == 1'b1;
assign first_address = {dcache_refill_address[ 32-1:addr_offset_msb+1], {addr_offset_width{1'b0}}, 2'b00};
    end
    16:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type = d_adr_o[addr_offset_msb] == 1'b1 ?  3'b111 :  3'b010;
assign last_word = (&d_adr_o[addr_offset_msb:addr_offset_lsb]) == 1'b1;
assign first_address = {dcache_refill_address[ 32-1:addr_offset_msb+1], {addr_offset_width{1'b0}}, 2'b00};
    end
    endcase
endgenerate
 
`line 3916 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        d_cyc_o <=  1'b0;
        d_stb_o <=  1'b0;
        d_dat_o <= { 32{1'b0}};
        d_adr_o <= { 32{1'b0}};
        d_sel_o <= { 4{ 1'b0}};
        d_we_o <=  1'b0;
        d_cti_o <=  3'b111;
        d_lock_o <=  1'b0;
        wb_data_m <= { 32{1'b0}};
        wb_load_complete <=  1'b0;
        stall_wb_load <=  1'b0;
  
`line 3938 "/tmp/lm32-customizer/tmp.v"
                
        dcache_refill_ready <=  1'b0;
 
`line 3940 "/tmp/lm32-customizer/tmp.v"
                
    end
    else
    begin
  
`line 3944 "/tmp/lm32-customizer/tmp.v"
 
        
        dcache_refill_ready <=  1'b0;
 
`line 3947 "/tmp/lm32-customizer/tmp.v"
                
        
        if (d_cyc_o ==  1'b1)
        begin
            
            if ((d_ack_i ==  1'b1) || (d_err_i ==  1'b1))
            begin
  
`line 3954 "/tmp/lm32-customizer/tmp.v"
                
                if ((dcache_refilling ==  1'b1) && (!last_word))
                begin
                    
                    d_adr_o[addr_offset_msb:addr_offset_lsb] <= d_adr_o[addr_offset_msb:addr_offset_lsb] + 1'b1;
                end
                else
 
`line 3961 "/tmp/lm32-customizer/tmp.v"
                
                begin
                    
                    d_cyc_o <=  1'b0;
                    d_stb_o <=  1'b0;
                    d_lock_o <=  1'b0;
                end
  
`line 3968 "/tmp/lm32-customizer/tmp.v"
    
                d_cti_o <= next_cycle_type;
                
                dcache_refill_ready <= dcache_refilling;
 
`line 3972 "/tmp/lm32-customizer/tmp.v"

                
                wb_data_m <= d_dat_i;
                
                wb_load_complete <= !d_we_o;
            end
            
            if (d_err_i ==  1'b1)
                $display ("Data bus error. Address: %x", d_adr_o);
            
        end
        else
        begin
  
`line 3985 "/tmp/lm32-customizer/tmp.v"
                
            if (dcache_refill_request ==  1'b1)
            begin
                
                d_adr_o <= first_address;
                d_cyc_o <=  1'b1;
                d_sel_o <= { 32/8{ 1'b1}};
                d_stb_o <=  1'b1;                
                d_we_o <=  1'b0;
                d_cti_o <= first_cycle_type;
                
            end
            else 
 
`line 3998 "/tmp/lm32-customizer/tmp.v"
            
                 if (   (store_q_m ==  1'b1)
                     && (stall_m ==  1'b0)
  
                        

`line 4003 "/tmp/lm32-customizer/tmp.v"

  
		        

`line 4006 "/tmp/lm32-customizer/tmp.v"
			
                    )
            begin
                
                d_dat_o <= store_data_m;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b1;
                d_cti_o <=  3'b111;
            end        
            else if (   (load_q_m ==  1'b1) 
                     && (wb_select_m ==  1'b1) 
                     && (wb_load_complete ==  1'b0)
                     
                    )
            begin
                
                stall_wb_load <=  1'b0;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b0;
                d_cti_o <=  3'b111;
            end
        end
        
        if (stall_m ==  1'b0)
            wb_load_complete <=  1'b0;
        
        if ((load_q_x ==  1'b1) && (wb_select_x ==  1'b1) && (stall_x ==  1'b0))
            stall_wb_load <=  1'b1;
        
        if ((kill_m ==  1'b1) || (exception_m ==  1'b1))
            stall_wb_load <=  1'b0;
    end
end




always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        sign_extend_m <=  1'b0;
        size_m <= 2'b00;
        byte_enable_m <=  1'b0;
        store_data_m <= { 32{1'b0}};
  
`line 4057 "/tmp/lm32-customizer/tmp.v"

        dcache_select_m <=  1'b0;
 
`line 4059 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4062 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4065 "/tmp/lm32-customizer/tmp.v"

        wb_select_m <=  1'b0;        
    end
    else
    begin
        if (stall_m ==  1'b0)
        begin
            sign_extend_m <= sign_extend_x;
            size_m <= size_x;
            byte_enable_m <= byte_enable_x;    
            store_data_m <= store_data_x;
  
`line 4076 "/tmp/lm32-customizer/tmp.v"

            dcache_select_m <= dcache_select_x;
 
`line 4078 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4081 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4084 "/tmp/lm32-customizer/tmp.v"

            wb_select_m <= wb_select_x;
        end
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        size_w <= 2'b00;
        data_w <= { 32{1'b0}};
        sign_extend_w <=  1'b0;
    end
    else
    begin
        size_w <= size_m;
        data_w <= data_m;
        sign_extend_w <= sign_extend_m;
    end
end








always @(posedge clk_i)
begin
    if (((load_q_m ==  1'b1) || (store_q_m ==  1'b1)) && (stall_m ==  1'b0)) 
    begin
        if ((size_m ===  2'b11) && (load_store_address_m[0] !== 1'b0))
            $display ("Warning: Non-aligned halfword access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
        if ((size_m ===  2'b10) && (load_store_address_m[1:0] !== 2'b00))
            $display ("Warning: Non-aligned word access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
    end
end



endmodule


































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"



  
`line 4165 "/tmp/lm32-customizer/tmp.v"

  
`line 4166 "/tmp/lm32-customizer/tmp.v"



  
`line 4169 "/tmp/lm32-customizer/tmp.v"

  
`line 4170 "/tmp/lm32-customizer/tmp.v"

  
`line 4171 "/tmp/lm32-customizer/tmp.v"

  
`line 4172 "/tmp/lm32-customizer/tmp.v"

  
`line 4173 "/tmp/lm32-customizer/tmp.v"

  
`line 4174 "/tmp/lm32-customizer/tmp.v"

  
`line 4175 "/tmp/lm32-customizer/tmp.v"

  
`line 4176 "/tmp/lm32-customizer/tmp.v"

  
`line 4177 "/tmp/lm32-customizer/tmp.v"

  
`line 4178 "/tmp/lm32-customizer/tmp.v"

  
`line 4179 "/tmp/lm32-customizer/tmp.v"

  
`line 4180 "/tmp/lm32-customizer/tmp.v"

  
`line 4181 "/tmp/lm32-customizer/tmp.v"

  
`line 4182 "/tmp/lm32-customizer/tmp.v"

  
`line 4183 "/tmp/lm32-customizer/tmp.v"

  
`line 4184 "/tmp/lm32-customizer/tmp.v"

  
`line 4185 "/tmp/lm32-customizer/tmp.v"

  
`line 4186 "/tmp/lm32-customizer/tmp.v"

  
`line 4187 "/tmp/lm32-customizer/tmp.v"

  
`line 4188 "/tmp/lm32-customizer/tmp.v"

  
`line 4189 "/tmp/lm32-customizer/tmp.v"

  
`line 4190 "/tmp/lm32-customizer/tmp.v"

  
`line 4191 "/tmp/lm32-customizer/tmp.v"

  
`line 4192 "/tmp/lm32-customizer/tmp.v"

  
`line 4193 "/tmp/lm32-customizer/tmp.v"

  
`line 4194 "/tmp/lm32-customizer/tmp.v"

  
`line 4195 "/tmp/lm32-customizer/tmp.v"

  
`line 4196 "/tmp/lm32-customizer/tmp.v"

  
`line 4197 "/tmp/lm32-customizer/tmp.v"

  
`line 4198 "/tmp/lm32-customizer/tmp.v"

  
`line 4199 "/tmp/lm32-customizer/tmp.v"

  
`line 4200 "/tmp/lm32-customizer/tmp.v"

  
`line 4201 "/tmp/lm32-customizer/tmp.v"

  
`line 4202 "/tmp/lm32-customizer/tmp.v"

  
`line 4203 "/tmp/lm32-customizer/tmp.v"

  
`line 4204 "/tmp/lm32-customizer/tmp.v"

  
`line 4205 "/tmp/lm32-customizer/tmp.v"

  
`line 4206 "/tmp/lm32-customizer/tmp.v"

  
`line 4207 "/tmp/lm32-customizer/tmp.v"

  
`line 4208 "/tmp/lm32-customizer/tmp.v"

  
`line 4209 "/tmp/lm32-customizer/tmp.v"

  
`line 4210 "/tmp/lm32-customizer/tmp.v"

  
`line 4211 "/tmp/lm32-customizer/tmp.v"

  
`line 4212 "/tmp/lm32-customizer/tmp.v"

  
`line 4213 "/tmp/lm32-customizer/tmp.v"






module lm32_decoder_full_debug (
    
    instruction,
    
    d_result_sel_0,
    d_result_sel_1,        
    x_result_sel_csr,
  
`line 4226 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_mc_arith,
 
`line 4228 "/tmp/lm32-customizer/tmp.v"
    
      
    

`line 4231 "/tmp/lm32-customizer/tmp.v"

  
`line 4232 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext,
 
`line 4234 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_logic,
  
    

`line 4238 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add,
    m_result_sel_compare,
  
`line 4241 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift,  
 
`line 4243 "/tmp/lm32-customizer/tmp.v"
    
    w_result_sel_load,
  
`line 4245 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul,
 
`line 4247 "/tmp/lm32-customizer/tmp.v"

    x_bypass_enable,
    m_bypass_enable,
    read_enable_0,
    read_idx_0,
    read_enable_1,
    read_idx_1,
    write_enable,
    write_idx,
    immediate,
    branch_offset,
    load,
    store,
    size,
    sign_extend,
    adder_op,
    logic_op,
  
`line 4264 "/tmp/lm32-customizer/tmp.v"

    direction,
 
`line 4266 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4270 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4273 "/tmp/lm32-customizer/tmp.v"

  
`line 4274 "/tmp/lm32-customizer/tmp.v"

    divide,
    modulus,
 
`line 4277 "/tmp/lm32-customizer/tmp.v"

    branch,
    branch_reg,
    condition,
    bi_conditional,
    bi_unconditional,
  
`line 4283 "/tmp/lm32-customizer/tmp.v"

    break_opcode,
 
`line 4285 "/tmp/lm32-customizer/tmp.v"

    scall,
    eret,
  
`line 4288 "/tmp/lm32-customizer/tmp.v"

    bret,
 
`line 4290 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4293 "/tmp/lm32-customizer/tmp.v"

    csr_write_enable
    );





input [ (32-1):0] instruction;       





output [ 0:0] d_result_sel_0;
reg    [ 0:0] d_result_sel_0;
output [ 1:0] d_result_sel_1;
reg    [ 1:0] d_result_sel_1;
output x_result_sel_csr;
reg    x_result_sel_csr;
  
`line 4313 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_mc_arith;
reg    x_result_sel_mc_arith;
 
`line 4316 "/tmp/lm32-customizer/tmp.v"

      
 
    

`line 4320 "/tmp/lm32-customizer/tmp.v"

  
`line 4321 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_sext;
reg    x_result_sel_sext;
 
`line 4324 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_logic;
reg    x_result_sel_logic;
  
 
    

`line 4330 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_add;
reg    x_result_sel_add;
output m_result_sel_compare;
reg    m_result_sel_compare;
  
`line 4335 "/tmp/lm32-customizer/tmp.v"

output m_result_sel_shift;
reg    m_result_sel_shift;
 
`line 4338 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_load;
reg    w_result_sel_load;
  
`line 4341 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_mul;
reg    w_result_sel_mul;
 
`line 4344 "/tmp/lm32-customizer/tmp.v"

output x_bypass_enable;
wire   x_bypass_enable;
output m_bypass_enable;
wire   m_bypass_enable;
output read_enable_0;
wire   read_enable_0;
output [ (5-1):0] read_idx_0;
wire   [ (5-1):0] read_idx_0;
output read_enable_1;
wire   read_enable_1;
output [ (5-1):0] read_idx_1;
wire   [ (5-1):0] read_idx_1;
output write_enable;
wire   write_enable;
output [ (5-1):0] write_idx;
wire   [ (5-1):0] write_idx;
output [ (32-1):0] immediate;
wire   [ (32-1):0] immediate;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
wire   [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
output load;
wire   load;
output store;
wire   store;
output [ 1:0] size;
wire   [ 1:0] size;
output sign_extend;
wire   sign_extend;
output adder_op;
wire   adder_op;
output [ 3:0] logic_op;
wire   [ 3:0] logic_op;
  
`line 4377 "/tmp/lm32-customizer/tmp.v"

output direction;
wire   direction;
 
`line 4380 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4386 "/tmp/lm32-customizer/tmp.v"

  
 
   

`line 4390 "/tmp/lm32-customizer/tmp.v"

  
`line 4391 "/tmp/lm32-customizer/tmp.v"

output divide;
wire   divide;
output modulus;
wire   modulus;
 
`line 4396 "/tmp/lm32-customizer/tmp.v"

output branch;
wire   branch;
output branch_reg;
wire   branch_reg;
output [ (3-1):0] condition;
wire   [ (3-1):0] condition;
output bi_conditional;
wire bi_conditional;
output bi_unconditional;
wire bi_unconditional;
  
`line 4407 "/tmp/lm32-customizer/tmp.v"

output break_opcode;
wire   break_opcode;
 
`line 4410 "/tmp/lm32-customizer/tmp.v"

output scall;
wire   scall;
output eret;
wire   eret;
  
`line 4415 "/tmp/lm32-customizer/tmp.v"

output bret;
wire   bret;
 
`line 4418 "/tmp/lm32-customizer/tmp.v"

  
  
    

`line 4422 "/tmp/lm32-customizer/tmp.v"

output csr_write_enable;
wire   csr_write_enable;





wire [ (32-1):0] extended_immediate;       
wire [ (32-1):0] high_immediate;           
wire [ (32-1):0] call_immediate;           
wire [ (32-1):0] branch_immediate;         
wire sign_extend_immediate;                     
wire select_high_immediate;                     
wire select_call_immediate;                     





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







assign op_add    = instruction[ 30:26] ==  5'b01101;
assign op_and    = instruction[ 30:26] ==  5'b01000;
assign op_andhi  = instruction[ 31:26] ==  6'b011000;
assign op_b      = instruction[ 31:26] ==  6'b110000;
assign op_bi     = instruction[ 31:26] ==  6'b111000;
assign op_be     = instruction[ 31:26] ==  6'b010001;
assign op_bg     = instruction[ 31:26] ==  6'b010010;
assign op_bge    = instruction[ 31:26] ==  6'b010011;
assign op_bgeu   = instruction[ 31:26] ==  6'b010100;
assign op_bgu    = instruction[ 31:26] ==  6'b010101;
assign op_bne    = instruction[ 31:26] ==  6'b010111;
assign op_call   = instruction[ 31:26] ==  6'b110110;
assign op_calli  = instruction[ 31:26] ==  6'b111110;
assign op_cmpe   = instruction[ 30:26] ==  5'b11001;
assign op_cmpg   = instruction[ 30:26] ==  5'b11010;
assign op_cmpge  = instruction[ 30:26] ==  5'b11011;
assign op_cmpgeu = instruction[ 30:26] ==  5'b11100;
assign op_cmpgu  = instruction[ 30:26] ==  5'b11101;
assign op_cmpne  = instruction[ 30:26] ==  5'b11111;
  
`line 4468 "/tmp/lm32-customizer/tmp.v"

assign op_divu   = instruction[ 31:26] ==  6'b100011;
 
`line 4470 "/tmp/lm32-customizer/tmp.v"

assign op_lb     = instruction[ 31:26] ==  6'b000100;
assign op_lbu    = instruction[ 31:26] ==  6'b010000;
assign op_lh     = instruction[ 31:26] ==  6'b000111;
assign op_lhu    = instruction[ 31:26] ==  6'b001011;
assign op_lw     = instruction[ 31:26] ==  6'b001010;
  
`line 4476 "/tmp/lm32-customizer/tmp.v"

assign op_modu   = instruction[ 31:26] ==  6'b110001;
 
`line 4478 "/tmp/lm32-customizer/tmp.v"

  
`line 4479 "/tmp/lm32-customizer/tmp.v"

assign op_mul    = instruction[ 30:26] ==  5'b00010;
 
`line 4481 "/tmp/lm32-customizer/tmp.v"

assign op_nor    = instruction[ 30:26] ==  5'b00001;
assign op_or     = instruction[ 30:26] ==  5'b01110;
assign op_orhi   = instruction[ 31:26] ==  6'b011110;
assign op_raise  = instruction[ 31:26] ==  6'b101011;
assign op_rcsr   = instruction[ 31:26] ==  6'b100100;
assign op_sb     = instruction[ 31:26] ==  6'b001100;
  
`line 4488 "/tmp/lm32-customizer/tmp.v"

assign op_sextb  = instruction[ 31:26] ==  6'b101100;
assign op_sexth  = instruction[ 31:26] ==  6'b110111;
 
`line 4491 "/tmp/lm32-customizer/tmp.v"

assign op_sh     = instruction[ 31:26] ==  6'b000011;
  
`line 4493 "/tmp/lm32-customizer/tmp.v"

assign op_sl     = instruction[ 30:26] ==  5'b01111;      
 
`line 4495 "/tmp/lm32-customizer/tmp.v"

assign op_sr     = instruction[ 30:26] ==  5'b00101;
assign op_sru    = instruction[ 30:26] ==  5'b00000;
assign op_sub    = instruction[ 31:26] ==  6'b110010;
assign op_sw     = instruction[ 31:26] ==  6'b010110;
assign op_user   = instruction[ 31:26] ==  6'b110011;
assign op_wcsr   = instruction[ 31:26] ==  6'b110100;
assign op_xnor   = instruction[ 30:26] ==  5'b01001;
assign op_xor    = instruction[ 30:26] ==  5'b00110;


assign arith = op_add | op_sub;
assign logical = op_and | op_andhi | op_nor | op_or | op_orhi | op_xor | op_xnor;
assign cmp = op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne;
assign bi_conditional = op_be | op_bg | op_bge | op_bgeu  | op_bgu | op_bne;
assign bi_unconditional = op_bi;
assign bra = op_b | bi_unconditional | bi_conditional;
assign call = op_call | op_calli;
  
`line 4513 "/tmp/lm32-customizer/tmp.v"

assign shift = op_sl | op_sr | op_sru;
 
`line 4515 "/tmp/lm32-customizer/tmp.v"

  
     

`line 4518 "/tmp/lm32-customizer/tmp.v"

  
   
     

`line 4522 "/tmp/lm32-customizer/tmp.v"

  
`line 4523 "/tmp/lm32-customizer/tmp.v"

assign sext = op_sextb | op_sexth;
 
`line 4525 "/tmp/lm32-customizer/tmp.v"

  
`line 4526 "/tmp/lm32-customizer/tmp.v"

assign multiply = op_mul;
 
`line 4528 "/tmp/lm32-customizer/tmp.v"

  
`line 4529 "/tmp/lm32-customizer/tmp.v"

assign divide = op_divu; 
assign modulus = op_modu;
 
`line 4532 "/tmp/lm32-customizer/tmp.v"

assign load = op_lb | op_lbu | op_lh | op_lhu | op_lw;
assign store = op_sb | op_sh | op_sw;


always @(*)
begin
    
    if (call) 
        d_result_sel_0 =  1'b1;
    else 
        d_result_sel_0 =  1'b0;
    if (call) 
        d_result_sel_1 =  2'b00;         
    else if ((instruction[31] == 1'b0) && !bra) 
        d_result_sel_1 =  2'b10;
    else
        d_result_sel_1 =  2'b01; 
    
    x_result_sel_csr =  1'b0;
  
`line 4552 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_mc_arith =  1'b0;
 
`line 4554 "/tmp/lm32-customizer/tmp.v"

  
      

`line 4557 "/tmp/lm32-customizer/tmp.v"

  
`line 4558 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext =  1'b0;
 
`line 4560 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_logic =  1'b0;
          
      

`line 4564 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add =  1'b0;
    if (op_rcsr)
        x_result_sel_csr =  1'b1;
  
`line 4568 "/tmp/lm32-customizer/tmp.v"
    
  
         
          

`line 4572 "/tmp/lm32-customizer/tmp.v"

  
`line 4573 "/tmp/lm32-customizer/tmp.v"

    else if (divide | modulus)
        x_result_sel_mc_arith =  1'b1;        
 
`line 4576 "/tmp/lm32-customizer/tmp.v"

  
      
                      

`line 4580 "/tmp/lm32-customizer/tmp.v"

 
`line 4581 "/tmp/lm32-customizer/tmp.v"

  
      
                  

`line 4585 "/tmp/lm32-customizer/tmp.v"

  
`line 4586 "/tmp/lm32-customizer/tmp.v"

    else if (sext)
        x_result_sel_sext =  1'b1;
 
`line 4589 "/tmp/lm32-customizer/tmp.v"
        
    else if (logical) 
        x_result_sel_logic =  1'b1;
          
      
          

`line 4595 "/tmp/lm32-customizer/tmp.v"

    else 
        x_result_sel_add =  1'b1;        
    
    

    m_result_sel_compare = cmp;
  
`line 4602 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift = shift;
 
`line 4604 "/tmp/lm32-customizer/tmp.v"


    
    w_result_sel_load = load;
  
`line 4608 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul = op_mul; 
 
`line 4610 "/tmp/lm32-customizer/tmp.v"

end


assign x_bypass_enable =  arith 
                        | logical
  
                         
                         

`line 4619 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4622 "/tmp/lm32-customizer/tmp.v"

  
`line 4623 "/tmp/lm32-customizer/tmp.v"

                        | divide
                        | modulus
 
`line 4626 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 4629 "/tmp/lm32-customizer/tmp.v"
                  
  
`line 4630 "/tmp/lm32-customizer/tmp.v"

                        | sext 
 
`line 4632 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4635 "/tmp/lm32-customizer/tmp.v"

                        | op_rcsr
                        ;

assign m_bypass_enable = x_bypass_enable 
  
`line 4640 "/tmp/lm32-customizer/tmp.v"

                        | shift
 
`line 4642 "/tmp/lm32-customizer/tmp.v"

                        | cmp
                        ;

assign read_enable_0 = ~(op_bi | op_calli);
assign read_idx_0 = instruction[25:21];

assign read_enable_1 = ~(op_bi | op_calli | load);
assign read_idx_1 = instruction[20:16];

assign write_enable = ~(bra | op_raise | store | op_wcsr);
assign write_idx = call
                    ? 5'd29
                    : instruction[31] == 1'b0 
                        ? instruction[20:16] 
                        : instruction[15:11];
                        

assign size = instruction[27:26];

assign sign_extend = instruction[28];                      

assign adder_op = op_sub | op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne | bra;

assign logic_op = instruction[29:26];
  
`line 4667 "/tmp/lm32-customizer/tmp.v"


assign direction = instruction[29];
 
`line 4670 "/tmp/lm32-customizer/tmp.v"


assign branch = bra | call;
assign branch_reg = op_call | op_b;
assign condition = instruction[28:26];      
  
`line 4675 "/tmp/lm32-customizer/tmp.v"

assign break_opcode = op_raise & ~instruction[2];
 
`line 4677 "/tmp/lm32-customizer/tmp.v"

assign scall = op_raise & instruction[2];
assign eret = op_b & (instruction[25:21] == 5'd30);
  
`line 4680 "/tmp/lm32-customizer/tmp.v"

assign bret = op_b & (instruction[25:21] == 5'd31);
 
`line 4682 "/tmp/lm32-customizer/tmp.v"

  

   

`line 4686 "/tmp/lm32-customizer/tmp.v"


assign csr_write_enable = op_wcsr;



assign sign_extend_immediate = ~(op_and | op_cmpgeu | op_cmpgu | op_nor | op_or | op_xnor | op_xor);
assign select_high_immediate = op_andhi | op_orhi;
assign select_call_immediate = instruction[31];

assign high_immediate = {instruction[15:0], 16'h0000};
assign extended_immediate = {{16{sign_extend_immediate & instruction[15]}}, instruction[15:0]};
assign call_immediate = {{6{instruction[25]}}, instruction[25:0]};
assign branch_immediate = {{16{instruction[15]}}, instruction[15:0]};

assign immediate = select_high_immediate ==  1'b1 
                        ? high_immediate 
                        : extended_immediate;
   
assign branch_offset = select_call_immediate ==  1'b1   
                        ? call_immediate
                        : branch_immediate;
    
endmodule 



































					  
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 4748 "/tmp/lm32-customizer/tmp.v"


  
`line 4750 "/tmp/lm32-customizer/tmp.v"

  
`line 4751 "/tmp/lm32-customizer/tmp.v"

  
`line 4752 "/tmp/lm32-customizer/tmp.v"

  
`line 4753 "/tmp/lm32-customizer/tmp.v"


  
`line 4755 "/tmp/lm32-customizer/tmp.v"

  
`line 4756 "/tmp/lm32-customizer/tmp.v"

  
`line 4757 "/tmp/lm32-customizer/tmp.v"

  
`line 4758 "/tmp/lm32-customizer/tmp.v"


  
`line 4760 "/tmp/lm32-customizer/tmp.v"

  
`line 4761 "/tmp/lm32-customizer/tmp.v"

  
`line 4762 "/tmp/lm32-customizer/tmp.v"

  
`line 4763 "/tmp/lm32-customizer/tmp.v"


  
`line 4765 "/tmp/lm32-customizer/tmp.v"

  
`line 4766 "/tmp/lm32-customizer/tmp.v"

  
`line 4767 "/tmp/lm32-customizer/tmp.v"

  
`line 4768 "/tmp/lm32-customizer/tmp.v"

  
`line 4769 "/tmp/lm32-customizer/tmp.v"






module lm32_icache_full_debug ( 
    
    clk_i,
    rst_i,    
    stall_a,
    stall_f,
    address_a,
    address_f,
    read_enable_f,
    refill_ready,
    refill_data,
    iflush,
  
    

`line 4789 "/tmp/lm32-customizer/tmp.v"

    valid_d,
    branch_predict_taken_d,
    
    stall_request,
    restart_request,
    refill_request,
    refill_address,
    refilling,
    inst
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    

localparam addr_offset_width = clogb2(bytes_per_line)-1-2;
localparam addr_set_width = clogb2(sets)-1;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);
localparam addr_set_lsb = (addr_offset_msb+1);
localparam addr_set_msb = (addr_set_lsb+addr_set_width-1);
localparam addr_tag_lsb = (addr_set_msb+1);
localparam addr_tag_msb = clogb2( 32'h7fffffff- 32'h0)-1;
localparam addr_tag_width = (addr_tag_msb-addr_tag_lsb+1);





input clk_i;                                        
input rst_i;                                        

input stall_a;                                      
input stall_f;                                      

input valid_d;                                      
input branch_predict_taken_d;                       
   
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_a;                     
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_f;                     
input read_enable_f;                                

input refill_ready;                                 
input [ (32-1):0] refill_data;          

input iflush;                                       
  
                                      

`line 4844 "/tmp/lm32-customizer/tmp.v"

   




output stall_request;                               
wire   stall_request;
output restart_request;                             
reg    restart_request;
output refill_request;                              
wire   refill_request;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
output refilling;                                   
reg    refilling;
output [ (32-1):0] inst;                
wire   [ (32-1):0] inst;





wire enable;
wire [0:associativity-1] way_mem_we;
wire [ (32-1):0] way_data[0:associativity-1];
wire [ ((addr_tag_width+1)-1):1] way_tag[0:associativity-1];
wire [0:associativity-1] way_valid;
wire [0:associativity-1] way_match;
wire miss;

wire [ (addr_set_width-1):0] tmem_read_address;
wire [ (addr_set_width-1):0] tmem_write_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_read_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_write_address;
wire [ ((addr_tag_width+1)-1):0] tmem_write_data;

reg [ 3:0] state;
wire flushing;
wire check;
wire refill;

reg [associativity-1:0] refill_way_select;
reg [ addr_offset_msb:addr_offset_lsb] refill_offset;
wire last_refill;
reg [ (addr_set_width-1):0] flush_set;

genvar i;





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






   generate
      for (i = 0; i < associativity; i = i + 1)
	begin : memories
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 (32),
	       .address_width              ( (addr_offset_width+addr_set_width))

) 
	   way_0_data_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (dmem_read_address),
	      .enable_read                (enable),
	      .write_address              (dmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i]),
	      .write_data                 (refill_data),    
	      
	      .read_data                  (way_data[i])
	      );
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 ( (addr_tag_width+1)),
	       .address_width              ( addr_set_width)

	       ) 
	   way_0_tag_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (tmem_read_address),
	      .enable_read                (enable),
	      .write_address              (tmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i] | flushing),
	      .write_data                 (tmem_write_data),
	      
	      .read_data                  ({way_tag[i], way_valid[i]})
	      );
	   
	end
endgenerate






generate
    for (i = 0; i < associativity; i = i + 1)
    begin : match
assign way_match[i] = ({way_tag[i], way_valid[i]} == {address_f[ addr_tag_msb:addr_tag_lsb],  1'b1});
    end
endgenerate


generate
    if (associativity == 1)
    begin : inst_1
assign inst = way_match[0] ? way_data[0] : 32'b0;
    end
    else if (associativity == 2)
	 begin : inst_2
assign inst = way_match[0] ? way_data[0] : (way_match[1] ? way_data[1] : 32'b0);
    end
endgenerate


generate 
    if (bytes_per_line > 4)
assign dmem_write_address = {refill_address[ addr_set_msb:addr_set_lsb], refill_offset};
    else
assign dmem_write_address = refill_address[ addr_set_msb:addr_set_lsb];
endgenerate
    
assign dmem_read_address = address_a[ addr_set_msb:addr_offset_lsb];


assign tmem_read_address = address_a[ addr_set_msb:addr_set_lsb];
assign tmem_write_address = flushing 
                                ? flush_set
                                : refill_address[ addr_set_msb:addr_set_lsb];


generate 
    if (bytes_per_line > 4)                            
assign last_refill = refill_offset == {addr_offset_width{1'b1}};
    else
assign last_refill =  1'b1;
endgenerate


assign enable = (stall_a ==  1'b0);


generate
    if (associativity == 1) 
    begin : we_1     
assign way_mem_we[0] = (refill_ready ==  1'b1);
    end
    else
    begin : we_2
assign way_mem_we[0] = (refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1);
assign way_mem_we[1] = (refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1);
    end
endgenerate                     


assign tmem_write_data[ 0] = last_refill & !flushing;
assign tmem_write_data[ ((addr_tag_width+1)-1):1] = refill_address[ addr_tag_msb:addr_tag_lsb];


assign flushing = |state[1:0];
assign check = state[2];
assign refill = state[3];

assign miss = (~(|way_match)) && (read_enable_f ==  1'b1) && (stall_f ==  1'b0) && !(valid_d && branch_predict_taken_d);
assign stall_request = (check ==  1'b0);
assign refill_request = (refill ==  1'b1);
                      





generate
    if (associativity >= 2) 
    begin : way_select      
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_way_select <= {{associativity-1{1'b0}}, 1'b1};
    else
    begin        
        if (miss ==  1'b1)
            refill_way_select <= {refill_way_select[0], refill_way_select[1]};
    end
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refilling <=  1'b0;
    else
        refilling <= refill;
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'b0001;
        flush_set <= { addr_set_width{1'b1}};
        refill_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        restart_request <=  1'b0;
    end
    else 
    begin
        case (state)

        
         4'b0001:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
                state <=  4'b0100;
            flush_set <= flush_set - 1'b1;
        end

        
         4'b0010:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
  
	       
                  
	      

`line 5093 "/tmp/lm32-customizer/tmp.v"

		state <=  4'b0100;
	   
            flush_set <= flush_set - 1'b1;
        end
        
        
         4'b0100:
        begin            
            if (stall_a ==  1'b0)
                restart_request <=  1'b0;
            if (iflush ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b0010;
            end
            else if (miss ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b1000;
            end
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
            begin
                if (last_refill ==  1'b1)
                begin
                    restart_request <=  1'b1;
                    state <=  4'b0100;
                end
            end
        end

        endcase        
    end
end

generate 
    if (bytes_per_line > 4)
    begin

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_offset <= {addr_offset_width{1'b0}};
    else 
    begin
        case (state)
        
        
         4'b0100:
        begin            
            if (iflush ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
            else if (miss ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
                refill_offset <= refill_offset + 1'b1;
        end

        endcase        
    end
end
    end
endgenerate
   
endmodule

 
`line 5169 "/tmp/lm32-customizer/tmp.v"































								 
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 5203 "/tmp/lm32-customizer/tmp.v"


  
`line 5205 "/tmp/lm32-customizer/tmp.v"

  
`line 5206 "/tmp/lm32-customizer/tmp.v"

  
`line 5207 "/tmp/lm32-customizer/tmp.v"

  
`line 5208 "/tmp/lm32-customizer/tmp.v"


  
`line 5210 "/tmp/lm32-customizer/tmp.v"

  
`line 5211 "/tmp/lm32-customizer/tmp.v"

  
`line 5212 "/tmp/lm32-customizer/tmp.v"

  
`line 5213 "/tmp/lm32-customizer/tmp.v"


  
`line 5215 "/tmp/lm32-customizer/tmp.v"

  
`line 5216 "/tmp/lm32-customizer/tmp.v"

  
`line 5217 "/tmp/lm32-customizer/tmp.v"

  
`line 5218 "/tmp/lm32-customizer/tmp.v"


  
`line 5220 "/tmp/lm32-customizer/tmp.v"

  
`line 5221 "/tmp/lm32-customizer/tmp.v"

  
`line 5222 "/tmp/lm32-customizer/tmp.v"

  
`line 5223 "/tmp/lm32-customizer/tmp.v"






module lm32_dcache_full_debug ( 
    
    clk_i,
    rst_i,    
    stall_a,
    stall_x,
    stall_m,
    address_x,
    address_m,
    load_q_m,
    store_q_m,
    store_data,
    store_byte_select,
    refill_ready,
    refill_data,
    dflush,
    
    stall_request,
    restart_request,
    refill_request,
    refill_address,
    refilling,
    load_data
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    

localparam addr_offset_width = clogb2(bytes_per_line)-1-2;
localparam addr_set_width = clogb2(sets)-1;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);
localparam addr_set_lsb = (addr_offset_msb+1);
localparam addr_set_msb = (addr_set_lsb+addr_set_width-1);
localparam addr_tag_lsb = (addr_set_msb+1);
localparam addr_tag_msb = clogb2( 32'h7fffffff- 32'h0)-1;
localparam addr_tag_width = (addr_tag_msb-addr_tag_lsb+1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          

input [ (32-1):0] address_x;                       
input [ (32-1):0] address_m;                       
input load_q_m;                                         
input store_q_m;                                        
input [ (32-1):0] store_data;                      
input [ (4-1):0] store_byte_select;        

input refill_ready;                                     
input [ (32-1):0] refill_data;                     

input dflush;                                           





output stall_request;                                   
wire   stall_request;
output restart_request;                                 
reg    restart_request;
output refill_request;                                  
reg    refill_request;
output [ (32-1):0] refill_address;                 
reg    [ (32-1):0] refill_address;
output refilling;                                       
reg    refilling;
output [ (32-1):0] load_data;                      
wire   [ (32-1):0] load_data;





wire read_port_enable;                                  
wire write_port_enable;                                 
wire [0:associativity-1] way_tmem_we;                   
wire [0:associativity-1] way_dmem_we;                   
wire [ (32-1):0] way_data[0:associativity-1];      
wire [ ((addr_tag_width+1)-1):1] way_tag[0:associativity-1];
wire [0:associativity-1] way_valid;                     
wire [0:associativity-1] way_match;                     
wire miss;                                              

wire [ (addr_set_width-1):0] tmem_read_address;        
wire [ (addr_set_width-1):0] tmem_write_address;       
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_read_address;        
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_write_address;       
wire [ ((addr_tag_width+1)-1):0] tmem_write_data;               
reg [ (32-1):0] dmem_write_data;                   

reg [ 2:0] state;                         
wire flushing;                                          
wire check;                                             
wire refill;                                            

wire valid_store;                                       
reg [associativity-1:0] refill_way_select;              
reg [ addr_offset_msb:addr_offset_lsb] refill_offset;           
wire last_refill;                                       
reg [ (addr_set_width-1):0] flush_set;                 

genvar i, j;





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






   generate
      for (i = 0; i < associativity; i = i + 1)    
	begin : memories
	   
           if ( (addr_offset_width+addr_set_width) < 11)
             begin : data_memories
		lm32_ram 
		  #(
		    
		    .data_width (32),
		    .address_width ( (addr_offset_width+addr_set_width))

		    ) way_0_data_ram 
		    (
		     
		     .read_clk (clk_i),
		     .write_clk (clk_i),
		     .reset (rst_i),
		     .read_address (dmem_read_address),
		     .enable_read (read_port_enable),
		     .write_address (dmem_write_address),
		     .enable_write (write_port_enable),
		     .write_enable (way_dmem_we[i]),
		     .write_data (dmem_write_data),    
		     
		     .read_data (way_data[i])
		     );    
             end
           else
             begin
		for (j = 0; j < 4; j = j + 1)    
		  begin : byte_memories
		     lm32_ram 
		       #(
			 
			 .data_width (8),
			 .address_width ( (addr_offset_width+addr_set_width))

			 ) way_0_data_ram 
			 (
			  
			  .read_clk (clk_i),
			  .write_clk (clk_i),
			  .reset (rst_i),
			  .read_address (dmem_read_address),
			  .enable_read (read_port_enable),
			  .write_address (dmem_write_address),
			  .enable_write (write_port_enable),
			  .write_enable (way_dmem_we[i] & (store_byte_select[j] | refill)),
			  .write_data (dmem_write_data[(j+1)*8-1:j*8]),    
			  
			  .read_data (way_data[i][(j+1)*8-1:j*8])
			  );
		  end
             end
	   
	   
	   lm32_ram 
	     #(
	       
	       .data_width ( (addr_tag_width+1)),
	       .address_width ( addr_set_width)

	       ) way_0_tag_ram 
	       (
		
		.read_clk (clk_i),
		.write_clk (clk_i),
		.reset (rst_i),
		.read_address (tmem_read_address),
		.enable_read (read_port_enable),
		.write_address (tmem_write_address),
		.enable_write ( 1'b1),
		.write_enable (way_tmem_we[i]),
		.write_data (tmem_write_data),
		
		.read_data ({way_tag[i], way_valid[i]})
		);
	end
      
   endgenerate






generate
    for (i = 0; i < associativity; i = i + 1)
    begin : match
assign way_match[i] = ({way_tag[i], way_valid[i]} == {address_m[ addr_tag_msb:addr_tag_lsb],  1'b1});
    end
endgenerate


generate
    if (associativity == 1)    
	 begin : data_1
assign load_data = way_data[0];
    end
    else if (associativity == 2)
	 begin : data_2
assign load_data = way_match[0] ? way_data[0] : way_data[1]; 
    end
endgenerate

generate
    if ( (addr_offset_width+addr_set_width) < 11)
    begin

always @(*)
begin
    if (refill ==  1'b1)
        dmem_write_data = refill_data;
    else
    begin
        dmem_write_data[ 7:0] = store_byte_select[0] ? store_data[ 7:0] : load_data[ 7:0];
        dmem_write_data[ 15:8] = store_byte_select[1] ? store_data[ 15:8] : load_data[ 15:8];
        dmem_write_data[ 23:16] = store_byte_select[2] ? store_data[ 23:16] : load_data[ 23:16];
        dmem_write_data[ 31:24] = store_byte_select[3] ? store_data[ 31:24] : load_data[ 31:24];
    end
end
    end
    else
    begin

always @(*)
begin
    if (refill ==  1'b1)
        dmem_write_data = refill_data;
    else
        dmem_write_data = store_data;
end
    end
endgenerate


generate 
     if (bytes_per_line > 4)
assign dmem_write_address = (refill ==  1'b1) 
                            ? {refill_address[ addr_set_msb:addr_set_lsb], refill_offset}
                            : address_m[ addr_set_msb:addr_offset_lsb];
    else
assign dmem_write_address = (refill ==  1'b1) 
                            ? refill_address[ addr_set_msb:addr_set_lsb]
                            : address_m[ addr_set_msb:addr_offset_lsb];
endgenerate
assign dmem_read_address = address_x[ addr_set_msb:addr_offset_lsb];

assign tmem_write_address = (flushing ==  1'b1)
                            ? flush_set
                            : refill_address[ addr_set_msb:addr_set_lsb];
assign tmem_read_address = address_x[ addr_set_msb:addr_set_lsb];


generate 
    if (bytes_per_line > 4)                            
assign last_refill = refill_offset == {addr_offset_width{1'b1}};
    else
assign last_refill =  1'b1;
endgenerate


assign read_port_enable = (stall_x ==  1'b0);
assign write_port_enable = (refill_ready ==  1'b1) || !stall_m;


assign valid_store = (store_q_m ==  1'b1) && (check ==  1'b1);


generate
    if (associativity == 1) 
    begin : we_1     
assign way_dmem_we[0] = (refill_ready ==  1'b1) || ((valid_store ==  1'b1) && (way_match[0] ==  1'b1));
assign way_tmem_we[0] = (refill_ready ==  1'b1) || (flushing ==  1'b1);
    end 
    else 
    begin : we_2
assign way_dmem_we[0] = ((refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1)) || ((valid_store ==  1'b1) && (way_match[0] ==  1'b1));
assign way_dmem_we[1] = ((refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1)) || ((valid_store ==  1'b1) && (way_match[1] ==  1'b1));
assign way_tmem_we[0] = ((refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1)) || (flushing ==  1'b1);
assign way_tmem_we[1] = ((refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1)) || (flushing ==  1'b1);
    end
endgenerate


assign tmem_write_data[ 0] = ((last_refill ==  1'b1) || (valid_store ==  1'b1)) && (flushing ==  1'b0);
assign tmem_write_data[ ((addr_tag_width+1)-1):1] = refill_address[ addr_tag_msb:addr_tag_lsb];


assign flushing = state[0];
assign check = state[1];
assign refill = state[2];

assign miss = (~(|way_match)) && (load_q_m ==  1'b1) && (stall_m ==  1'b0);
assign stall_request = (check ==  1'b0);
                      





generate
    if (associativity >= 2) 
    begin : way_select      
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_way_select <= {{associativity-1{1'b0}}, 1'b1};
    else
    begin        
        if (refill_request ==  1'b1)
            refill_way_select <= {refill_way_select[0], refill_way_select[1]};
    end
end
    end 
endgenerate   


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refilling <=  1'b0;
    else 
        refilling <= refill;
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  3'b001;
        flush_set <= { addr_set_width{1'b1}};
        refill_request <=  1'b0;
        refill_address <= { 32{1'bx}};
        restart_request <=  1'b0;
    end
    else 
    begin
        case (state)

        
         3'b001:
        begin
            if (flush_set == { addr_set_width{1'b0}})
                state <=  3'b010;
            flush_set <= flush_set - 1'b1;
        end
        
        
         3'b010:
        begin
            if (stall_a ==  1'b0)
                restart_request <=  1'b0;
            if (miss ==  1'b1)
            begin
                refill_request <=  1'b1;
                refill_address <= address_m;
                state <=  3'b100;
            end
            else if (dflush ==  1'b1)
                state <=  3'b001;
        end

        
         3'b100:
        begin
            refill_request <=  1'b0;
            if (refill_ready ==  1'b1)
            begin
                if (last_refill ==  1'b1)
                begin
                    restart_request <=  1'b1;
                    state <=  3'b010;
                end
            end
        end
        
        endcase        
    end
end

generate
    if (bytes_per_line > 4)
    begin

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_offset <= {addr_offset_width{1'b0}};
    else 
    begin
        case (state)
        
        
         3'b010:
        begin
            if (miss ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
        end

        
         3'b100:
        begin
            if (refill_ready ==  1'b1)
                refill_offset <= refill_offset + 1'b1;
        end
        
        endcase        
    end
end
    end
endgenerate

endmodule

 
`line 5675 "/tmp/lm32-customizer/tmp.v"

































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 5710 "/tmp/lm32-customizer/tmp.v"



  
`line 5713 "/tmp/lm32-customizer/tmp.v"

  
`line 5714 "/tmp/lm32-customizer/tmp.v"

  
`line 5715 "/tmp/lm32-customizer/tmp.v"

  
`line 5716 "/tmp/lm32-customizer/tmp.v"

  
`line 5717 "/tmp/lm32-customizer/tmp.v"

  
`line 5718 "/tmp/lm32-customizer/tmp.v"






module lm32_debug_full_debug (
    
    clk_i, 
    rst_i,
    pc_x,
    load_x,
    store_x,
    load_store_address_x,
    csr_write_enable_x,
    csr_write_data,
    csr_x,
  
`line 5735 "/tmp/lm32-customizer/tmp.v"

    jtag_csr_write_enable,
    jtag_csr_write_data,
    jtag_csr,
 
`line 5739 "/tmp/lm32-customizer/tmp.v"

  
`line 5740 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
    bret_q_x,
    stall_x,
    exception_x,
    q_x,
  
`line 5746 "/tmp/lm32-customizer/tmp.v"

    dcache_refill_request,
 
`line 5748 "/tmp/lm32-customizer/tmp.v"

 
`line 5749 "/tmp/lm32-customizer/tmp.v"

    
  
`line 5751 "/tmp/lm32-customizer/tmp.v"

    dc_ss,
 
`line 5753 "/tmp/lm32-customizer/tmp.v"

    dc_re,
    bp_match,
    wp_match
    );
    




parameter breakpoints = 0;                      
parameter watchpoints = 0;                      





input clk_i;                                    
input rst_i;                                    

input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                      
input load_x;                                   
input store_x;                                  
input [ (32-1):0] load_store_address_x;    
input csr_write_enable_x;                       
input [ (32-1):0] csr_write_data;          
input [ (5-1):0] csr_x;                    
  
`line 5780 "/tmp/lm32-customizer/tmp.v"

input jtag_csr_write_enable;                    
input [ (32-1):0] jtag_csr_write_data;     
input [ (5-1):0] jtag_csr;                 
 
`line 5784 "/tmp/lm32-customizer/tmp.v"

  
`line 5785 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
input bret_q_x;                                 
input stall_x;                                  
input exception_x;                              
input q_x;                                      
  
`line 5791 "/tmp/lm32-customizer/tmp.v"

input dcache_refill_request;                    
 
`line 5793 "/tmp/lm32-customizer/tmp.v"

 
`line 5794 "/tmp/lm32-customizer/tmp.v"






  
`line 5800 "/tmp/lm32-customizer/tmp.v"

output dc_ss;                                   
reg    dc_ss;
 
`line 5803 "/tmp/lm32-customizer/tmp.v"

output dc_re;                                   
reg    dc_re;
output bp_match;                                
wire   bp_match;        
output wp_match;                                
wire   wp_match;





genvar i;                                       



reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] bp_a[0:breakpoints-1];       
reg bp_e[0:breakpoints-1];                      
wire [0:breakpoints-1]bp_match_n;               

reg [ 1:0] wpc_c[0:watchpoints-1];   
reg [ (32-1):0] wp[0:watchpoints-1];       
wire [0:watchpoints]wp_match_n;               

wire debug_csr_write_enable;                    
wire [ (32-1):0] debug_csr_write_data;     
wire [ (5-1):0] debug_csr;                 

  
`line 5831 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;           

 
`line 5835 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







generate
    for (i = 0; i < breakpoints; i = i + 1)
    begin : bp_comb
assign bp_match_n[i] = ((bp_a[i] == pc_x) && (bp_e[i] ==  1'b1));
    end
endgenerate
generate 
  
`line 5855 "/tmp/lm32-customizer/tmp.v"

    if (breakpoints > 0) 
assign bp_match = (|bp_match_n) || (state ==  3'b011);
    else
assign bp_match = state ==  3'b011;
 
        
   
    
   

`line 5865 "/tmp/lm32-customizer/tmp.v"

endgenerate    
               

generate 
    for (i = 0; i < watchpoints; i = i + 1)
    begin : wp_comb
assign wp_match_n[i] = (wp[i] == load_store_address_x) && ((load_x & wpc_c[i][0]) | (store_x & wpc_c[i][1]));
    end               
endgenerate
generate
    if (watchpoints > 0) 
assign wp_match = |wp_match_n;                
    else
assign wp_match =  1'b0;
endgenerate
                
  
`line 5882 "/tmp/lm32-customizer/tmp.v"
                

assign debug_csr_write_enable = (csr_write_enable_x ==  1'b1) || (jtag_csr_write_enable ==  1'b1);
assign debug_csr_write_data = jtag_csr_write_enable ==  1'b1 ? jtag_csr_write_data : csr_write_data;
assign debug_csr = jtag_csr_write_enable ==  1'b1 ? jtag_csr : csr_x;
 
   
   
   

`line 5891 "/tmp/lm32-customizer/tmp.v"







generate
    for (i = 0; i < breakpoints; i = i + 1)
    begin : bp_seq
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        bp_a[i] <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        bp_e[i] <=  1'b0;
    end
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h10 + i))
        begin
            bp_a[i] <= debug_csr_write_data[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2];
            bp_e[i] <= debug_csr_write_data[0];
        end
    end
end    
    end
endgenerate


generate
    for (i = 0; i < watchpoints; i = i + 1)
    begin : wp_seq
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        wp[i] <= { 32{1'bx}};
        wpc_c[i] <=  2'b00;
    end
    else
    begin
        if (debug_csr_write_enable ==  1'b1)
        begin
            if (debug_csr ==  5'h8)
                wpc_c[i] <= debug_csr_write_data[3+i*2:2+i*2];
            if (debug_csr ==  5'h18 + i)
                wp[i] <= debug_csr_write_data;
        end
    end  
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        dc_re <=  1'b0;
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h8))
            dc_re <= debug_csr_write_data[1];
    end
end    

  
`line 5957 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  3'b000;
        dc_ss <=  1'b0;
    end
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h8))
        begin
            dc_ss <= debug_csr_write_data[0];
            if (debug_csr_write_data[0] ==  1'b0) 
                state <=  3'b000;
            else 
                state <=  3'b001;
        end
        case (state)
         3'b001:
        begin
            
            if (   (   (eret_q_x ==  1'b1)
                    || (bret_q_x ==  1'b1)
                    )
                && (stall_x ==  1'b0)
               )
                state <=  3'b010; 
        end
         3'b010:
        begin
            
            if ((q_x ==  1'b1) && (stall_x ==  1'b0))
                state <=  3'b011;
        end
         3'b011:
        begin
            
  
`line 5996 "/tmp/lm32-customizer/tmp.v"

            if (dcache_refill_request ==  1'b1)
                state <=  3'b010;
            else 
 
`line 6000 "/tmp/lm32-customizer/tmp.v"

                 if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
            begin
                dc_ss <=  1'b0;
                state <=  3'b100;
            end
        end
         3'b100:
        begin
            
  
`line 6010 "/tmp/lm32-customizer/tmp.v"

            if (dcache_refill_request ==  1'b1)
                state <=  3'b010;
            else 
 
`line 6014 "/tmp/lm32-customizer/tmp.v"

                state <=  3'b000;
        end
        endcase
    end
end
 
`line 6020 "/tmp/lm32-customizer/tmp.v"


endmodule

 
`line 6024 "/tmp/lm32-customizer/tmp.v"















































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_instruction_unit_full_debug (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_f,
    stall_d,
    stall_x,
    stall_m,
    valid_f,
    valid_d,
    kill_f,
    branch_predict_taken_d,
    branch_predict_address_d,
  
`line 6092 "/tmp/lm32-customizer/tmp.v"
    
    branch_taken_x,
    branch_target_x,
 
`line 6095 "/tmp/lm32-customizer/tmp.v"

    exception_m,
    branch_taken_m,
    branch_mispredict_taken_m,
    branch_target_m,
  
`line 6100 "/tmp/lm32-customizer/tmp.v"

    iflush,
 
`line 6102 "/tmp/lm32-customizer/tmp.v"

  
`line 6103 "/tmp/lm32-customizer/tmp.v"

    dcache_restart_request,
    dcache_refill_request,
    dcache_refilling,
 
`line 6107 "/tmp/lm32-customizer/tmp.v"
        
  
    
    
    

`line 6112 "/tmp/lm32-customizer/tmp.v"

  
`line 6113 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_i,
    i_ack_i,
    i_err_i,
    i_rty_i,
 
`line 6119 "/tmp/lm32-customizer/tmp.v"

  
`line 6120 "/tmp/lm32-customizer/tmp.v"

    jtag_read_enable,
    jtag_write_enable,
    jtag_write_data,
    jtag_address,
 
`line 6125 "/tmp/lm32-customizer/tmp.v"

    
    
    pc_f,
    pc_d,
    pc_x,
    pc_m,
    pc_w,
  
`line 6133 "/tmp/lm32-customizer/tmp.v"

    icache_stall_request,
    icache_restart_request,
    icache_refill_request,
    icache_refilling,
 
`line 6138 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6141 "/tmp/lm32-customizer/tmp.v"

  
`line 6142 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_o,
    i_adr_o,
    i_cyc_o,
    i_sel_o,
    i_stb_o,
    i_we_o,
    i_cti_o,
    i_lock_o,
    i_bte_o,
 
`line 6153 "/tmp/lm32-customizer/tmp.v"

  
`line 6154 "/tmp/lm32-customizer/tmp.v"

    jtag_read_data,
    jtag_access_complete,
 
`line 6157 "/tmp/lm32-customizer/tmp.v"

  
`line 6158 "/tmp/lm32-customizer/tmp.v"

    bus_error_d,
 
`line 6160 "/tmp/lm32-customizer/tmp.v"

  
`line 6161 "/tmp/lm32-customizer/tmp.v"

    instruction_f,
 
`line 6163 "/tmp/lm32-customizer/tmp.v"
    
    instruction_d
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_f;                                          
input stall_d;                                          
input stall_x;                                          
input stall_m;                                          
input valid_f;                                          
input valid_d;                                          
input kill_f;                                           

input branch_predict_taken_d;                           
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;          
   
  
`line 6201 "/tmp/lm32-customizer/tmp.v"
    
input branch_taken_x;                                   
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_x;                   
 
`line 6204 "/tmp/lm32-customizer/tmp.v"

input exception_m;
input branch_taken_m;                                   
input branch_mispredict_taken_m;                        
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;                   

  
`line 6210 "/tmp/lm32-customizer/tmp.v"

input iflush;                                           
 
`line 6212 "/tmp/lm32-customizer/tmp.v"

  
`line 6213 "/tmp/lm32-customizer/tmp.v"

input dcache_restart_request;                           
input dcache_refill_request;                            
input dcache_refilling;
 
`line 6217 "/tmp/lm32-customizer/tmp.v"
        

  
                 
                   
                                        

`line 6223 "/tmp/lm32-customizer/tmp.v"


  
`line 6225 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] i_dat_i;                         
input i_ack_i;                                          
input i_err_i;                                          
input i_rty_i;                                          
 
`line 6230 "/tmp/lm32-customizer/tmp.v"


  
`line 6232 "/tmp/lm32-customizer/tmp.v"

input jtag_read_enable;                                 
input jtag_write_enable;                                
input [ 7:0] jtag_write_data;                 
input [ (32-1):0] jtag_address;                    
 
`line 6237 "/tmp/lm32-customizer/tmp.v"





        
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;

  
`line 6254 "/tmp/lm32-customizer/tmp.v"

output icache_stall_request;                            
wire   icache_stall_request;
output icache_restart_request;                          
wire   icache_restart_request;
output icache_refill_request;                           
wire   icache_refill_request;
output icache_refilling;                                
wire   icache_refilling;
 
`line 6263 "/tmp/lm32-customizer/tmp.v"


  
                      
                          

`line 6268 "/tmp/lm32-customizer/tmp.v"
   

  
`line 6270 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_dat_o;                        
  
`line 6272 "/tmp/lm32-customizer/tmp.v"

reg    [ (32-1):0] i_dat_o;
 
    

`line 6276 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_adr_o;                        
reg    [ (32-1):0] i_adr_o;
output i_cyc_o;                                         
reg    i_cyc_o; 
output [ (4-1):0] i_sel_o;                 
  
`line 6282 "/tmp/lm32-customizer/tmp.v"

reg    [ (4-1):0] i_sel_o;
 
    

`line 6286 "/tmp/lm32-customizer/tmp.v"

output i_stb_o;                                         
reg    i_stb_o;
output i_we_o;                                          
  
`line 6290 "/tmp/lm32-customizer/tmp.v"

reg    i_we_o;
 
   

`line 6294 "/tmp/lm32-customizer/tmp.v"

output [ (3-1):0] i_cti_o;                       
reg    [ (3-1):0] i_cti_o;
output i_lock_o;                                        
reg    i_lock_o;
output [ (2-1):0] i_bte_o;                       
wire   [ (2-1):0] i_bte_o;
 
`line 6301 "/tmp/lm32-customizer/tmp.v"


  
`line 6303 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_read_data;                 
reg    [ 7:0] jtag_read_data;
output jtag_access_complete;                            
wire   jtag_access_complete;
 
`line 6308 "/tmp/lm32-customizer/tmp.v"


  
`line 6310 "/tmp/lm32-customizer/tmp.v"

output bus_error_d;                                     
reg    bus_error_d;
 
`line 6313 "/tmp/lm32-customizer/tmp.v"

  
`line 6314 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_f;           
wire   [ (32-1):0] instruction_f;
 
`line 6317 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_d;           
reg    [ (32-1):0] instruction_d;





reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_a;                                

  
`line 6327 "/tmp/lm32-customizer/tmp.v"

reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] restart_address;                     
 
`line 6329 "/tmp/lm32-customizer/tmp.v"


  
`line 6331 "/tmp/lm32-customizer/tmp.v"

wire icache_read_enable_f;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] icache_refill_address;              
reg icache_refill_ready;                                
reg [ (32-1):0] icache_refill_data;         
wire [ (32-1):0] icache_data_f;             
wire [ (3-1):0] first_cycle_type;                
wire [ (3-1):0] next_cycle_type;                 
wire last_word;                                         
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] first_address;                      
 
 
                    


`line 6345 "/tmp/lm32-customizer/tmp.v"

  
                                      
                                       
                 

`line 6350 "/tmp/lm32-customizer/tmp.v"

  
`line 6351 "/tmp/lm32-customizer/tmp.v"

 
               

`line 6354 "/tmp/lm32-customizer/tmp.v"

  
`line 6355 "/tmp/lm32-customizer/tmp.v"

reg bus_error_f;                                        
 
`line 6357 "/tmp/lm32-customizer/tmp.v"


  
`line 6359 "/tmp/lm32-customizer/tmp.v"

reg jtag_access;                                        
 
`line 6361 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







    
    
     
       
                    
	 
       
       
       
       
       
       
	 
              
              
              
              
              
              
	 
                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	                   
	                     
	                        
	                         
	    
	                         
	                         
	    

`line 6420 "/tmp/lm32-customizer/tmp.v"
    
 
  
`line 6422 "/tmp/lm32-customizer/tmp.v"


lm32_icache_full_debug #(
    .associativity          (associativity),
    .sets                   (sets),
    .bytes_per_line         (bytes_per_line),
    .base_address           (base_address),
    .limit                  (limit)
    ) icache ( 
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),      
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .valid_d                (valid_d),
    .address_a              (pc_a),
    .address_f              (pc_f),
    .read_enable_f          (icache_read_enable_f),
    .refill_ready           (icache_refill_ready),
    .refill_data            (icache_refill_data),
    .iflush                 (iflush),
    
    .stall_request          (icache_stall_request),
    .restart_request        (icache_restart_request),
    .refill_request         (icache_refill_request),
    .refill_address         (icache_refill_address),
    .refilling              (icache_refilling),
    .inst                   (icache_data_f)
    );
 
`line 6452 "/tmp/lm32-customizer/tmp.v"






  
`line 6458 "/tmp/lm32-customizer/tmp.v"


assign icache_read_enable_f =    (valid_f ==  1'b1)
                              && (kill_f ==  1'b0)
  
`line 6462 "/tmp/lm32-customizer/tmp.v"

                              && (dcache_restart_request ==  1'b0)
 
`line 6464 "/tmp/lm32-customizer/tmp.v"
                         
   
                                 

`line 6467 "/tmp/lm32-customizer/tmp.v"
       
                              ;
 
`line 6469 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    
  
`line 6475 "/tmp/lm32-customizer/tmp.v"

    if (dcache_restart_request ==  1'b1)
        pc_a = restart_address;
    else 
 
`line 6479 "/tmp/lm32-customizer/tmp.v"
    
      if (branch_taken_m ==  1'b1)
	if ((branch_mispredict_taken_m ==  1'b1) && (exception_m ==  1'b0))
	  pc_a = pc_x;
	else
          pc_a = branch_target_m;
  
`line 6485 "/tmp/lm32-customizer/tmp.v"
    
      else if (branch_taken_x ==  1'b1)
        pc_a = branch_target_x;
 
`line 6488 "/tmp/lm32-customizer/tmp.v"

      else
	if ( (valid_d ==  1'b1) && (branch_predict_taken_d ==  1'b1) )
	  pc_a = branch_predict_address_d;
	else
  
`line 6493 "/tmp/lm32-customizer/tmp.v"

          if (icache_restart_request ==  1'b1)
            pc_a = restart_address;
	  else 
 
`line 6497 "/tmp/lm32-customizer/tmp.v"
        
            pc_a = pc_f + 1'b1;
end


  
           

`line 6504 "/tmp/lm32-customizer/tmp.v"

                     

  
`line 6507 "/tmp/lm32-customizer/tmp.v"

  
         

`line 6510 "/tmp/lm32-customizer/tmp.v"

assign instruction_f = icache_data_f;
 
`line 6512 "/tmp/lm32-customizer/tmp.v"

 
 
 
         

   


   


`line 6523 "/tmp/lm32-customizer/tmp.v"



  
`line 6526 "/tmp/lm32-customizer/tmp.v"

  
`line 6527 "/tmp/lm32-customizer/tmp.v"

 
   
   
   

`line 6532 "/tmp/lm32-customizer/tmp.v"

assign i_bte_o =  2'b00;
 
`line 6534 "/tmp/lm32-customizer/tmp.v"


  
`line 6536 "/tmp/lm32-customizer/tmp.v"


generate
    case (bytes_per_line)
    4:
    begin
assign first_cycle_type =  3'b111;
assign next_cycle_type =  3'b111;
assign last_word =  1'b1;
assign first_address = icache_refill_address;
    end
    8:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type =  3'b111;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 1'b1;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    16:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type = i_adr_o[addr_offset_msb] == 1'b1 ?  3'b111 :  3'b010;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 2'b11;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    endcase
endgenerate
 
`line 6563 "/tmp/lm32-customizer/tmp.v"

                     





always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        pc_f <= ( 32'h00000000-4)/4;
        pc_d <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_w <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    end
    else
    begin
        if (stall_f ==  1'b0)
            pc_f <= pc_a;
        if (stall_d ==  1'b0)
            pc_d <= pc_f;
        if (stall_x ==  1'b0)
            pc_x <= pc_d;
        if (stall_m ==  1'b0)
            pc_m <= pc_x;
        pc_w <= pc_m;
    end
end

  
`line 6594 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        restart_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    else
    begin
  
`line 6602 "/tmp/lm32-customizer/tmp.v"

  
`line 6603 "/tmp/lm32-customizer/tmp.v"
        
            
            if (dcache_refill_request ==  1'b1)
                restart_address <= pc_w;
            else if ((icache_refill_request ==  1'b1) && (!dcache_refilling) && (!dcache_restart_request))
                restart_address <= icache_refill_address;
 
               
                  

`line 6612 "/tmp/lm32-customizer/tmp.v"

 
         
               
                  


`line 6618 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 6621 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
    
           
              
    


`line 6635 "/tmp/lm32-customizer/tmp.v"


  
`line 6637 "/tmp/lm32-customizer/tmp.v"

assign jtag_access_complete = (i_cyc_o ==  1'b1) && ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1)) && (jtag_access ==  1'b1);
always @(*)
begin
    case (jtag_address[1:0])
    2'b00: jtag_read_data = i_dat_i[ 31:24];
    2'b01: jtag_read_data = i_dat_i[ 23:16];
    2'b10: jtag_read_data = i_dat_i[ 15:8];
    2'b11: jtag_read_data = i_dat_i[ 7:0];
    endcase 
end
 
`line 6648 "/tmp/lm32-customizer/tmp.v"


  
`line 6650 "/tmp/lm32-customizer/tmp.v"


  
`line 6652 "/tmp/lm32-customizer/tmp.v"
                
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        i_cyc_o <=  1'b0;
        i_stb_o <=  1'b0;
        i_adr_o <= { 32{1'b0}};
        i_cti_o <=  3'b111;
        i_lock_o <=  1'b0;
        icache_refill_data <= { 32{1'b0}};
        icache_refill_ready <=  1'b0;
  
`line 6664 "/tmp/lm32-customizer/tmp.v"

        bus_error_f <=  1'b0;
 
`line 6666 "/tmp/lm32-customizer/tmp.v"

  
`line 6667 "/tmp/lm32-customizer/tmp.v"

        i_we_o <=  1'b0;
        i_sel_o <= 4'b1111;
        jtag_access <=  1'b0;
 
`line 6671 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin   
        icache_refill_ready <=  1'b0;
        
        if (i_cyc_o ==  1'b1)
        begin
            
            if ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1))
            begin
  
`line 6682 "/tmp/lm32-customizer/tmp.v"

                if (jtag_access ==  1'b1)
                begin
                    i_cyc_o <=  1'b0;
                    i_stb_o <=  1'b0;       
                    i_we_o <=  1'b0;  
                    jtag_access <=  1'b0;    
                end
                else
 
`line 6691 "/tmp/lm32-customizer/tmp.v"

                begin
                    if (last_word ==  1'b1)
                    begin
                        
                        i_cyc_o <=  1'b0;
                        i_stb_o <=  1'b0;
                        i_lock_o <=  1'b0;
                    end
                    
                    i_adr_o[addr_offset_msb:addr_offset_lsb] <= i_adr_o[addr_offset_msb:addr_offset_lsb] + 1'b1;
                    i_cti_o <= next_cycle_type;
                    
                    icache_refill_ready <=  1'b1;
                    icache_refill_data <= i_dat_i;
                end
            end
  
`line 6708 "/tmp/lm32-customizer/tmp.v"

            if (i_err_i ==  1'b1)
            begin
                bus_error_f <=  1'b1;
                $display ("Instruction bus error. Address: %x", i_adr_o);
            end
 
`line 6714 "/tmp/lm32-customizer/tmp.v"

        end
        else
        begin
            if ((icache_refill_request ==  1'b1) && (icache_refill_ready ==  1'b0))
            begin
                
  
`line 6721 "/tmp/lm32-customizer/tmp.v"
     
                i_sel_o <= 4'b1111;
 
`line 6723 "/tmp/lm32-customizer/tmp.v"

                i_adr_o <= {first_address, 2'b00};
                i_cyc_o <=  1'b1;
                i_stb_o <=  1'b1;                
                i_cti_o <= first_cycle_type;
                
  
`line 6729 "/tmp/lm32-customizer/tmp.v"

                bus_error_f <=  1'b0;
 
`line 6731 "/tmp/lm32-customizer/tmp.v"

            end
  
`line 6733 "/tmp/lm32-customizer/tmp.v"

            else
            begin
                if ((jtag_read_enable ==  1'b1) || (jtag_write_enable ==  1'b1))
                begin
                    case (jtag_address[1:0])
                    2'b00: i_sel_o <= 4'b1000;
                    2'b01: i_sel_o <= 4'b0100;
                    2'b10: i_sel_o <= 4'b0010;
                    2'b11: i_sel_o <= 4'b0001;
                    endcase
                    i_adr_o <= jtag_address;
                    i_dat_o <= {4{jtag_write_data}};
                    i_cyc_o <=  1'b1;
                    i_stb_o <=  1'b1;
                    i_we_o <= jtag_write_enable;
                    i_cti_o <=  3'b111;
                    jtag_access <=  1'b1;
                end
            end 
 
`line 6753 "/tmp/lm32-customizer/tmp.v"
                    
  
`line 6754 "/tmp/lm32-customizer/tmp.v"

            
            
  
`line 6757 "/tmp/lm32-customizer/tmp.v"
    
            if (branch_taken_x ==  1'b1)
                bus_error_f <=  1'b0;
 
`line 6760 "/tmp/lm32-customizer/tmp.v"

            if (branch_taken_m ==  1'b1)
                bus_error_f <=  1'b0;
 
`line 6763 "/tmp/lm32-customizer/tmp.v"

        end
    end
end
 
   

       
    
          
          
          
          
          
          
 
          

    
    
       
        
           
        
            
                  
            
                
                  
                  
                
                  
            
 
               
            
                  
                  
            

        
        
        
            
                   
  
                   
       
               
            
                
      
                  

                   
                  
                  
 
                  

            
	    
	    
	               
  
		       
       
	           
		
 
		      

		
	    
        
    


`line 6840 "/tmp/lm32-customizer/tmp.v"

 
`line 6841 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        instruction_d <= { 32{1'b0}};
  
`line 6849 "/tmp/lm32-customizer/tmp.v"

        bus_error_d <=  1'b0;
 
`line 6851 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        if (stall_d ==  1'b0)
        begin
            instruction_d <= instruction_f;
  
`line 6858 "/tmp/lm32-customizer/tmp.v"

            bus_error_d <= bus_error_f;
 
`line 6860 "/tmp/lm32-customizer/tmp.v"

        end
    end
end  
  
endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 6896 "/tmp/lm32-customizer/tmp.v"


  
`line 6898 "/tmp/lm32-customizer/tmp.v"

  
`line 6899 "/tmp/lm32-customizer/tmp.v"

  
`line 6900 "/tmp/lm32-customizer/tmp.v"



  
`line 6903 "/tmp/lm32-customizer/tmp.v"

  
`line 6904 "/tmp/lm32-customizer/tmp.v"

  
`line 6905 "/tmp/lm32-customizer/tmp.v"

  
`line 6906 "/tmp/lm32-customizer/tmp.v"

  
`line 6907 "/tmp/lm32-customizer/tmp.v"

  
`line 6908 "/tmp/lm32-customizer/tmp.v"

  
`line 6909 "/tmp/lm32-customizer/tmp.v"

  
`line 6910 "/tmp/lm32-customizer/tmp.v"



  
`line 6913 "/tmp/lm32-customizer/tmp.v"

  
`line 6914 "/tmp/lm32-customizer/tmp.v"

  
`line 6915 "/tmp/lm32-customizer/tmp.v"

  
`line 6916 "/tmp/lm32-customizer/tmp.v"

  
`line 6917 "/tmp/lm32-customizer/tmp.v"

  
`line 6918 "/tmp/lm32-customizer/tmp.v"

  
`line 6919 "/tmp/lm32-customizer/tmp.v"

  
`line 6920 "/tmp/lm32-customizer/tmp.v"

  
`line 6921 "/tmp/lm32-customizer/tmp.v"

  
`line 6922 "/tmp/lm32-customizer/tmp.v"






module lm32_jtag_full_debug (
    
    clk_i,
    rst_i,
    jtag_clk, 
    jtag_update,
    jtag_reg_q,
    jtag_reg_addr_q,
  
`line 6936 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_enable,
    csr_write_data,
    stall_x,
 
`line 6941 "/tmp/lm32-customizer/tmp.v"

  
`line 6942 "/tmp/lm32-customizer/tmp.v"

    jtag_read_data,
    jtag_access_complete,
 
`line 6945 "/tmp/lm32-customizer/tmp.v"

  
`line 6946 "/tmp/lm32-customizer/tmp.v"

    exception_q_w,
 
`line 6948 "/tmp/lm32-customizer/tmp.v"

    
  
`line 6950 "/tmp/lm32-customizer/tmp.v"

    jtx_csr_read_data,
    jrx_csr_read_data,
 
`line 6953 "/tmp/lm32-customizer/tmp.v"

  
`line 6954 "/tmp/lm32-customizer/tmp.v"

    jtag_csr_write_enable,
    jtag_csr_write_data,
    jtag_csr,
    jtag_read_enable,
    jtag_write_enable,
    jtag_write_data,
    jtag_address,
 
`line 6962 "/tmp/lm32-customizer/tmp.v"

  
`line 6963 "/tmp/lm32-customizer/tmp.v"

    jtag_break,
    jtag_reset,
 
`line 6966 "/tmp/lm32-customizer/tmp.v"

    jtag_reg_d,
    jtag_reg_addr_d
    );





input clk_i;                                            
input rst_i;                                            

input jtag_clk;                                         
input jtag_update;                                      
input [ 7:0] jtag_reg_q;                      
input [2:0] jtag_reg_addr_q;                            

  
`line 6983 "/tmp/lm32-customizer/tmp.v"

input [ (5-1):0] csr;                              
input csr_write_enable;                                 
input [ (32-1):0] csr_write_data;                  
input stall_x;                                          
 
`line 6988 "/tmp/lm32-customizer/tmp.v"

  
`line 6989 "/tmp/lm32-customizer/tmp.v"

input [ 7:0] jtag_read_data;                  
input jtag_access_complete;                             
 
`line 6992 "/tmp/lm32-customizer/tmp.v"

  
`line 6993 "/tmp/lm32-customizer/tmp.v"

input exception_q_w;                                    
 
`line 6995 "/tmp/lm32-customizer/tmp.v"





       
  
`line 7001 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] jtx_csr_read_data;              
wire   [ (32-1):0] jtx_csr_read_data;
output [ (32-1):0] jrx_csr_read_data;              
wire   [ (32-1):0] jrx_csr_read_data;
 
`line 7006 "/tmp/lm32-customizer/tmp.v"

  
`line 7007 "/tmp/lm32-customizer/tmp.v"

output jtag_csr_write_enable;                           
reg    jtag_csr_write_enable;
output [ (32-1):0] jtag_csr_write_data;            
wire   [ (32-1):0] jtag_csr_write_data;
output [ (5-1):0] jtag_csr;                        
wire   [ (5-1):0] jtag_csr;
output jtag_read_enable;                                
reg    jtag_read_enable;
output jtag_write_enable;                               
reg    jtag_write_enable;
output [ 7:0] jtag_write_data;                
wire   [ 7:0] jtag_write_data;        
output [ (32-1):0] jtag_address;                   
wire   [ (32-1):0] jtag_address;
 
`line 7022 "/tmp/lm32-customizer/tmp.v"

  
`line 7023 "/tmp/lm32-customizer/tmp.v"

output jtag_break;                                      
reg    jtag_break;
output jtag_reset;                                      
reg    jtag_reset;
 
`line 7028 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_reg_d;
reg    [ 7:0] jtag_reg_d;
output [2:0] jtag_reg_addr_d;
wire   [2:0] jtag_reg_addr_d;
             




reg rx_update;                          
reg rx_update_r;                        
reg rx_update_r_r;                      
reg rx_update_r_r_r;                    



wire [ 7:0] rx_byte;   
wire [2:0] rx_addr;

  
`line 7048 "/tmp/lm32-customizer/tmp.v"
                 
reg [ 7:0] uart_tx_byte;      
reg uart_tx_valid;                      
reg [ 7:0] uart_rx_byte;      
reg uart_rx_valid;                      
 
`line 7053 "/tmp/lm32-customizer/tmp.v"


reg [ 3:0] command;             
  
`line 7056 "/tmp/lm32-customizer/tmp.v"

reg [ 7:0] jtag_byte_0;       
reg [ 7:0] jtag_byte_1;
reg [ 7:0] jtag_byte_2;
reg [ 7:0] jtag_byte_3;
reg [ 7:0] jtag_byte_4;
reg processing;                         
 
`line 7063 "/tmp/lm32-customizer/tmp.v"


reg [ 3:0] state;       





  
`line 7071 "/tmp/lm32-customizer/tmp.v"

assign jtag_csr_write_data = {jtag_byte_0, jtag_byte_1, jtag_byte_2, jtag_byte_3};
assign jtag_csr = jtag_byte_4[ (5-1):0];
assign jtag_address = {jtag_byte_0, jtag_byte_1, jtag_byte_2, jtag_byte_3};
assign jtag_write_data = jtag_byte_4;
 
`line 7076 "/tmp/lm32-customizer/tmp.v"

                 

  
`line 7079 "/tmp/lm32-customizer/tmp.v"
                 
assign jtag_reg_addr_d[1:0] = {uart_rx_valid, uart_tx_valid};         
 
   

`line 7083 "/tmp/lm32-customizer/tmp.v"

  
`line 7084 "/tmp/lm32-customizer/tmp.v"

assign jtag_reg_addr_d[2] = processing;
 
   

`line 7088 "/tmp/lm32-customizer/tmp.v"


  
`line 7090 "/tmp/lm32-customizer/tmp.v"
                 
assign jtx_csr_read_data = {{ 32-9{1'b0}}, uart_tx_valid, 8'h00};
assign jrx_csr_read_data = {{ 32-9{1'b0}}, uart_rx_valid, uart_rx_byte};
 
`line 7093 "/tmp/lm32-customizer/tmp.v"
         
                 




assign rx_byte = jtag_reg_q;
assign rx_addr = jtag_reg_addr_q;



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        rx_update <= 1'b0;
        rx_update_r <= 1'b0;
        rx_update_r_r <= 1'b0;
        rx_update_r_r_r <= 1'b0;
    end
    else
    begin
        rx_update <= jtag_update;
        rx_update_r <= rx_update;
        rx_update_r_r <= rx_update_r;
        rx_update_r_r_r <= rx_update_r_r;
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'h0;
        command <= 4'b0000;
        jtag_reg_d <= 8'h00;
  
`line 7130 "/tmp/lm32-customizer/tmp.v"

        processing <=  1'b0;
        jtag_csr_write_enable <=  1'b0;
        jtag_read_enable <=  1'b0;
        jtag_write_enable <=  1'b0;
 
`line 7135 "/tmp/lm32-customizer/tmp.v"

  
`line 7136 "/tmp/lm32-customizer/tmp.v"

        jtag_break <=  1'b0;
        jtag_reset <=  1'b0;
 
`line 7139 "/tmp/lm32-customizer/tmp.v"

  
`line 7140 "/tmp/lm32-customizer/tmp.v"
                 
        uart_tx_byte <= 8'h00;
        uart_tx_valid <=  1'b0;
        uart_rx_byte <= 8'h00;
        uart_rx_valid <=  1'b0;
 
`line 7145 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
  
`line 7149 "/tmp/lm32-customizer/tmp.v"
                 
        if ((csr_write_enable ==  1'b1) && (stall_x ==  1'b0))
        begin
            case (csr)
             5'he:
            begin
                
                uart_tx_byte <= csr_write_data[ 7:0];
                uart_tx_valid <=  1'b1;
            end
             5'hf:
            begin
                
                uart_rx_valid <=  1'b0;
            end
            endcase
        end
 
`line 7166 "/tmp/lm32-customizer/tmp.v"

  
`line 7167 "/tmp/lm32-customizer/tmp.v"

        
        if (exception_q_w ==  1'b1)
        begin
            jtag_break <=  1'b0;
            jtag_reset <=  1'b0;
        end
 
`line 7174 "/tmp/lm32-customizer/tmp.v"

        case (state)
         4'h0:
        begin
            
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                command <= rx_byte[7:4];                
                case (rx_addr)
  
`line 7183 "/tmp/lm32-customizer/tmp.v"

                 3'b000:
                begin
                    case (rx_byte[7:4])
  
`line 7187 "/tmp/lm32-customizer/tmp.v"

                     4'b0001:
                        state <=  4'h1;
                     4'b0011:
                    begin
                        {jtag_byte_2, jtag_byte_3} <= {jtag_byte_2, jtag_byte_3} + 1'b1;
                        state <=  4'h6;
                    end
                     4'b0010:
                        state <=  4'h1;
                     4'b0100:
                    begin
                        {jtag_byte_2, jtag_byte_3} <= {jtag_byte_2, jtag_byte_3} + 1'b1;
                        state <= 5;
                    end
                     4'b0101:
                        state <=  4'h1;
 
`line 7204 "/tmp/lm32-customizer/tmp.v"
                    
                     4'b0110:
                    begin
  
`line 7207 "/tmp/lm32-customizer/tmp.v"
     
                        uart_rx_valid <=  1'b0;    
                        uart_tx_valid <=  1'b0;         
 
`line 7210 "/tmp/lm32-customizer/tmp.v"

                        jtag_break <=  1'b1;
                    end
                     4'b0111:
                    begin
  
`line 7215 "/tmp/lm32-customizer/tmp.v"
     
                        uart_rx_valid <=  1'b0;    
                        uart_tx_valid <=  1'b0;         
 
`line 7218 "/tmp/lm32-customizer/tmp.v"

                        jtag_reset <=  1'b1;
                    end
                    endcase                               
                end
 
`line 7223 "/tmp/lm32-customizer/tmp.v"

  
`line 7224 "/tmp/lm32-customizer/tmp.v"
                 
                 3'b001:
                begin
                    uart_rx_byte <= rx_byte;
                    uart_rx_valid <=  1'b1;
                end                    
                 3'b010:
                begin
                    jtag_reg_d <= uart_tx_byte;
                    uart_tx_valid <=  1'b0;
                end
 
`line 7235 "/tmp/lm32-customizer/tmp.v"

                default:
                    ;
                endcase                
            end
        end
  
`line 7241 "/tmp/lm32-customizer/tmp.v"

         4'h1:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_0 <= rx_byte;
                state <=  4'h2;
            end
        end
         4'h2:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_1 <= rx_byte;
                state <=  4'h3;
            end
        end
         4'h3:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_2 <= rx_byte;
                state <=  4'h4;
            end
        end
         4'h4:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_3 <= rx_byte;
                if (command ==  4'b0001)
                    state <=  4'h6;
                else 
                    state <=  4'h5;
            end
        end
         4'h5:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_4 <= rx_byte;
                state <=  4'h6;
            end
        end
         4'h6:
        begin
            case (command)
             4'b0001,
             4'b0011:
            begin
                jtag_read_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h7;
            end
             4'b0010,
             4'b0100:
            begin
                jtag_write_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h7;
            end
             4'b0101:
            begin
                jtag_csr_write_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h8;
            end
            endcase
        end
         4'h7:
        begin
            if (jtag_access_complete ==  1'b1)
            begin          
                jtag_read_enable <=  1'b0;
                jtag_reg_d <= jtag_read_data;
                jtag_write_enable <=  1'b0;  
                processing <=  1'b0;
                state <=  4'h0;
            end
        end    
         4'h8:
        begin
            jtag_csr_write_enable <=  1'b0;
            processing <=  1'b0;
            state <=  4'h0;
        end    
 
`line 7327 "/tmp/lm32-customizer/tmp.v"

        endcase
    end
end
  
endmodule

 
`line 7334 "/tmp/lm32-customizer/tmp.v"





























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_interrupt_full_debug (
    
    clk_i, 
    rst_i,
    
    interrupt,
    
    stall_x,
  
`line 7377 "/tmp/lm32-customizer/tmp.v"

    non_debug_exception,
    debug_exception,
 
    

`line 7382 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
  
`line 7384 "/tmp/lm32-customizer/tmp.v"

    bret_q_x,
 
`line 7386 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_data,
    csr_write_enable,
    
    interrupt_exception,
    
    csr_read_data
    );





parameter interrupts =  32;         





input clk_i;                                    
input rst_i;                                    

input [interrupts-1:0] interrupt;               

input stall_x;                                  

  
`line 7413 "/tmp/lm32-customizer/tmp.v"

input non_debug_exception;                      
input debug_exception;                          
 
                                 

`line 7418 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
  
`line 7420 "/tmp/lm32-customizer/tmp.v"

input bret_q_x;                                 
 
`line 7422 "/tmp/lm32-customizer/tmp.v"


input [ (5-1):0] csr;                      
input [ (32-1):0] csr_write_data;          
input csr_write_enable;                         





output interrupt_exception;                     
wire   interrupt_exception;

output [ (32-1):0] csr_read_data;          
reg    [ (32-1):0] csr_read_data;





wire [interrupts-1:0] asserted;                 

wire [interrupts-1:0] interrupt_n_exception;



reg ie;                                         
reg eie;                                        
  
`line 7450 "/tmp/lm32-customizer/tmp.v"

reg bie;                                        
 
`line 7452 "/tmp/lm32-customizer/tmp.v"

reg [interrupts-1:0] ip;                        
reg [interrupts-1:0] im;                        






assign interrupt_n_exception = ip & im;


assign interrupt_exception = (|interrupt_n_exception) & ie;


assign asserted = ip | interrupt;
       
assign ie_csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7470 "/tmp/lm32-customizer/tmp.v"

                           bie,
 
                           

`line 7474 "/tmp/lm32-customizer/tmp.v"
                             
                           eie, 
                           ie
                          };
assign ip_csr_read_data = ip;
assign im_csr_read_data = im;
generate
    if (interrupts > 1) 
    begin

always @(*)
begin
    case (csr)
     5'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7488 "/tmp/lm32-customizer/tmp.v"

                                    bie,
 
                                                                         

`line 7492 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     5'h2:  csr_read_data = ip;
     5'h1:  csr_read_data = im;
    default:       csr_read_data = { 32{1'bx}};
    endcase
end
    end
    else
    begin

always @(*)
begin
    case (csr)
     5'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7509 "/tmp/lm32-customizer/tmp.v"

                                    bie, 
 
                                                                        

`line 7513 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     5'h2:  csr_read_data = ip;
    default:       csr_read_data = { 32{1'bx}};
      endcase
end
    end
endgenerate
    




  
`line 7528 "/tmp/lm32-customizer/tmp.v"

   reg [ 10:0] eie_delay  = 0;

   
generate

   
    if (interrupts > 1)
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie                   <=  1'b0;
        eie                  <=  1'b0;
  
`line 7544 "/tmp/lm32-customizer/tmp.v"

        bie                  <=  1'b0;
 
`line 7546 "/tmp/lm32-customizer/tmp.v"

        im                   <= {interrupts{1'b0}};
        ip                   <= {interrupts{1'b0}};
       eie_delay             <= 0;
       
    end
    else
    begin
        
        ip                   <= asserted;
  
`line 7556 "/tmp/lm32-customizer/tmp.v"

        if (non_debug_exception ==  1'b1)
        begin
            
            eie              <= ie;
            ie               <=  1'b0;
        end
        else if (debug_exception ==  1'b1)
        begin
            
            bie              <= ie;
            ie               <=  1'b0;
        end
 
           
        
            
                           
                            
        

`line 7576 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
        begin

           if(eie_delay[0])
             ie              <= eie;
           
           eie_delay         <= {1'b0, eie_delay[ 10:1]};

            if (eret_q_x ==  1'b1) begin
                
               eie_delay[ 10] <=  1'b1;
               eie_delay[ 10-1:0] <= 0;
            end
           
                      
           
  
`line 7593 "/tmp/lm32-customizer/tmp.v"

            else if (bret_q_x ==  1'b1)
                
                ie      <= bie;
 
`line 7597 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  5'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
`line 7605 "/tmp/lm32-customizer/tmp.v"

                    bie <= csr_write_data[2];
 
`line 7607 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  5'h1)
                    im  <= csr_write_data[interrupts-1:0];
                if (csr ==  5'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
else
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie              <=  1'b0;
        eie             <=  1'b0;
  
`line 7627 "/tmp/lm32-customizer/tmp.v"

        bie             <=  1'b0;
 
`line 7629 "/tmp/lm32-customizer/tmp.v"

        ip              <= {interrupts{1'b0}};
       eie_delay        <= 0;
    end
    else
    begin
        
        ip              <= asserted;
  
`line 7637 "/tmp/lm32-customizer/tmp.v"

        if (non_debug_exception ==  1'b1)
        begin
            
            eie         <= ie;
            ie          <=  1'b0;
        end
        else if (debug_exception ==  1'b1)
        begin
            
            bie         <= ie;
            ie          <=  1'b0;
        end
 
           
        
            
                      
                       
        

`line 7657 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
          begin

             if(eie_delay[0])
               ie              <= eie;
           
             eie_delay         <= {1'b0, eie_delay[ 10:1]};

             if (eret_q_x ==  1'b1) begin
                
                eie_delay[ 10] <=  1'b1;
                eie_delay[ 10-1:0] <= 0;
             end
           
  
`line 7672 "/tmp/lm32-customizer/tmp.v"

            else if (bret_q_x ==  1'b1)
                
                ie      <= bie;
 
`line 7676 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  5'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
`line 7684 "/tmp/lm32-customizer/tmp.v"

                    bie <= csr_write_data[2];
 
`line 7686 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  5'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
endgenerate

endmodule



`line 1 "/tmp/lm32-customizer/tmp.v"




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  

`line 33 "src/lm32_include.v"

  
`line 34 "src/lm32_include.v"



  
`line 1 "/tmp/lm32-customizer/system_conf.v"

`line 1 "/tmp/lm32-customizer/system_conf.v"
  
`line 1 "/tmp/lm32-customizer/system_conf.v"

  
`line 2 "/tmp/lm32-customizer/system_conf.v"

  
`line 3 "/tmp/lm32-customizer/system_conf.v"

  
`line 4 "/tmp/lm32-customizer/system_conf.v"

  
`line 5 "/tmp/lm32-customizer/system_conf.v"

  
`line 6 "/tmp/lm32-customizer/system_conf.v"

  
`line 7 "/tmp/lm32-customizer/system_conf.v"

	  
`line 8 "/tmp/lm32-customizer/system_conf.v"

	  
`line 9 "/tmp/lm32-customizer/system_conf.v"

	  
`line 10 "/tmp/lm32-customizer/system_conf.v"

	  
`line 11 "/tmp/lm32-customizer/system_conf.v"

	  
`line 12 "/tmp/lm32-customizer/system_conf.v"

	  
`line 13 "/tmp/lm32-customizer/system_conf.v"

	  
`line 14 "/tmp/lm32-customizer/system_conf.v"

	  
`line 15 "/tmp/lm32-customizer/system_conf.v"

	  
`line 16 "/tmp/lm32-customizer/system_conf.v"

	  
`line 17 "/tmp/lm32-customizer/system_conf.v"

	  
`line 18 "/tmp/lm32-customizer/system_conf.v"

	  
`line 19 "/tmp/lm32-customizer/system_conf.v"

	  
	 
	 
	 
	 
	  
	  
	
`line 27 "/tmp/lm32-customizer/system_conf.v"

 
`line 28 "/tmp/lm32-customizer/system_conf.v"


`line 29 "src/lm32_include.v"


  

`line 40 "src/lm32_include.v"

  
`line 41 "src/lm32_include.v"

  
`line 42 "src/lm32_include.v"

  
`line 43 "src/lm32_include.v"

  
`line 44 "src/lm32_include.v"

 
`line 45 "src/lm32_include.v"



  
`line 48 "src/lm32_include.v"

  
`line 49 "src/lm32_include.v"



  
`line 52 "src/lm32_include.v"

  
`line 53 "src/lm32_include.v"

  
`line 54 "src/lm32_include.v"

  
`line 55 "src/lm32_include.v"

  
`line 56 "src/lm32_include.v"

  
`line 57 "src/lm32_include.v"



  
`line 60 "src/lm32_include.v"

  
`line 61 "src/lm32_include.v"

  
`line 62 "src/lm32_include.v"



  
`line 65 "src/lm32_include.v"

  
`line 66 "src/lm32_include.v"

  
`line 67 "src/lm32_include.v"



  
                    

`line 72 "src/lm32_include.v"

  
`line 73 "src/lm32_include.v"

  
`line 74 "src/lm32_include.v"

 
                    

`line 77 "src/lm32_include.v"

 
`line 78 "src/lm32_include.v"

  
`line 79 "src/lm32_include.v"



  
`line 82 "src/lm32_include.v"

  
`line 83 "src/lm32_include.v"



  
`line 86 "src/lm32_include.v"

  
`line 87 "src/lm32_include.v"



  
`line 90 "src/lm32_include.v"

  
`line 91 "src/lm32_include.v"



  
 

`line 96 "src/lm32_include.v"

  
 

`line 99 "src/lm32_include.v"

 
`line 100 "src/lm32_include.v"



  
 

`line 105 "src/lm32_include.v"

  
 

`line 108 "src/lm32_include.v"

 
`line 109 "src/lm32_include.v"

 
`line 110 "src/lm32_include.v"



  
`line 113 "src/lm32_include.v"

  
`line 114 "src/lm32_include.v"

  
 
 

 


`line 121 "src/lm32_include.v"
 


  
`line 124 "src/lm32_include.v"

  
`line 125 "src/lm32_include.v"

 
 
 


`line 130 "src/lm32_include.v"



  
 

`line 135 "src/lm32_include.v"

  
 

`line 138 "src/lm32_include.v"

  
 

`line 141 "src/lm32_include.v"



  
`line 144 "src/lm32_include.v"

  
`line 145 "src/lm32_include.v"

 
`line 146 "src/lm32_include.v"

  
 

`line 149 "src/lm32_include.v"



  
`line 152 "src/lm32_include.v"



  
`line 155 "src/lm32_include.v"



  
`line 158 "src/lm32_include.v"

  
`line 159 "src/lm32_include.v"

  
`line 160 "src/lm32_include.v"

  
`line 161 "src/lm32_include.v"

  
`line 162 "src/lm32_include.v"

  
`line 163 "src/lm32_include.v"

  
`line 164 "src/lm32_include.v"

  
`line 165 "src/lm32_include.v"

  
`line 166 "src/lm32_include.v"

  
`line 167 "src/lm32_include.v"



  
`line 170 "src/lm32_include.v"

  
`line 171 "src/lm32_include.v"

  
`line 172 "src/lm32_include.v"

  
`line 173 "src/lm32_include.v"

  
`line 174 "src/lm32_include.v"

  
`line 175 "src/lm32_include.v"



  
                   
                     

`line 181 "src/lm32_include.v"

  
                   
                     

`line 185 "src/lm32_include.v"

  
`line 186 "src/lm32_include.v"

  
`line 187 "src/lm32_include.v"

 
`line 188 "src/lm32_include.v"

 
`line 189 "src/lm32_include.v"



  
`line 192 "src/lm32_include.v"

  
`line 193 "src/lm32_include.v"

  
`line 194 "src/lm32_include.v"

  
`line 195 "src/lm32_include.v"

  
`line 196 "src/lm32_include.v"

  
`line 197 "src/lm32_include.v"

  
`line 198 "src/lm32_include.v"

  
`line 199 "src/lm32_include.v"

  
                      
                    

`line 203 "src/lm32_include.v"

  
`line 204 "src/lm32_include.v"

  
                     
                     

`line 208 "src/lm32_include.v"

  
                     
                     
                     
                     
                     
                     
                     
                     

`line 218 "src/lm32_include.v"
 


  
`line 221 "src/lm32_include.v"

  
`line 222 "src/lm32_include.v"

  
`line 223 "src/lm32_include.v"

  
`line 224 "src/lm32_include.v"

  
`line 225 "src/lm32_include.v"



  
`line 228 "src/lm32_include.v"

  
`line 229 "src/lm32_include.v"

  
`line 230 "src/lm32_include.v"

  
`line 231 "src/lm32_include.v"

  
`line 232 "src/lm32_include.v"

  
`line 233 "src/lm32_include.v"

  
`line 234 "src/lm32_include.v"

  
`line 235 "src/lm32_include.v"

  
`line 236 "src/lm32_include.v"

  
`line 237 "src/lm32_include.v"




  
`line 241 "src/lm32_include.v"

  
`line 242 "src/lm32_include.v"

  
`line 243 "src/lm32_include.v"


  
`line 245 "src/lm32_include.v"

  
`line 246 "src/lm32_include.v"

  
`line 247 "src/lm32_include.v"

  
`line 248 "src/lm32_include.v"


  
`line 250 "src/lm32_include.v"

  
`line 251 "src/lm32_include.v"



  
 

`line 256 "src/lm32_include.v"

  
 

`line 259 "src/lm32_include.v"

 
`line 260 "src/lm32_include.v"







  
`line 267 "src/lm32_include.v"

  
`line 268 "src/lm32_include.v"

  
`line 269 "src/lm32_include.v"







  
`line 276 "src/lm32_include.v"

  
`line 277 "src/lm32_include.v"

  
`line 278 "src/lm32_include.v"

  
`line 279 "src/lm32_include.v"



  
`line 282 "src/lm32_include.v"

  
`line 283 "src/lm32_include.v"

  
`line 284 "src/lm32_include.v"

  
`line 285 "src/lm32_include.v"



  
`line 288 "src/lm32_include.v"

  
`line 289 "src/lm32_include.v"



  
`line 292 "src/lm32_include.v"







  
`line 299 "src/lm32_include.v"

  
`line 300 "src/lm32_include.v"

  
`line 301 "src/lm32_include.v"

  
`line 302 "src/lm32_include.v"

  
`line 303 "src/lm32_include.v"

  
`line 304 "src/lm32_include.v"



  
`line 307 "src/lm32_include.v"

  
`line 308 "src/lm32_include.v"

  
`line 309 "src/lm32_include.v"

  
`line 310 "src/lm32_include.v"

  
`line 311 "src/lm32_include.v"

  
`line 312 "src/lm32_include.v"


 
`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"

           
  
`line 31 "/tmp/lm32-customizer/tmp.v"

  
`line 32 "/tmp/lm32-customizer/tmp.v"

  
`line 33 "/tmp/lm32-customizer/tmp.v"

  
`line 34 "/tmp/lm32-customizer/tmp.v"

  
`line 35 "/tmp/lm32-customizer/tmp.v"

  
`line 36 "/tmp/lm32-customizer/tmp.v"

  
`line 37 "/tmp/lm32-customizer/tmp.v"






module lm32_mc_arithmetic_medium (
    
    clk_i,
    rst_i,
    stall_d,
    kill_x,
  
    
    

`line 52 "/tmp/lm32-customizer/tmp.v"

  
    

`line 55 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 60 "/tmp/lm32-customizer/tmp.v"

    operand_0_d,
    operand_1_d,
    
    result_x,
  
    

`line 67 "/tmp/lm32-customizer/tmp.v"

    stall_request_x
    );





input clk_i;                                    
input rst_i;                                    
input stall_d;                                  
input kill_x;                                   
  
                                  
                                 

`line 82 "/tmp/lm32-customizer/tmp.v"

  
                                

`line 85 "/tmp/lm32-customizer/tmp.v"

  
                              
                             
                             

`line 90 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] operand_0_d;
input [ (32-1):0] operand_1_d;





output [ (32-1):0] result_x;               
reg    [ (32-1):0] result_x;
  
                         
    

`line 103 "/tmp/lm32-customizer/tmp.v"

output stall_request_x;                         
wire   stall_request_x;





reg [ (32-1):0] p;                         
reg [ (32-1):0] a;
reg [ (32-1):0] b;
  
  

`line 116 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;                 
reg [5:0] cycles;                               

  
                               
                                 

`line 124 "/tmp/lm32-customizer/tmp.v"







assign stall_request_x = state !=  3'b000;

  

      

`line 136 "/tmp/lm32-customizer/tmp.v"


  

       

`line 141 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        cycles <= {6{1'b0}};
        p <= { 32{1'b0}};
        a <= { 32{1'b0}};
        b <= { 32{1'b0}};
  
          

`line 158 "/tmp/lm32-customizer/tmp.v"

  
          

`line 161 "/tmp/lm32-customizer/tmp.v"

        result_x <= { 32{1'b0}};
        state <=  3'b000;
    end
    else
    begin
  
          

`line 169 "/tmp/lm32-customizer/tmp.v"

        case (state)
         3'b000:
        begin
            if (stall_d ==  1'b0)                 
            begin          
                cycles <=  32;
                p <= 32'b0;
                a <= operand_0_d;
                b <= operand_1_d;                    
  
                   
                      
                   
                      

`line 184 "/tmp/lm32-customizer/tmp.v"
                    
  
                   
                      

`line 188 "/tmp/lm32-customizer/tmp.v"

  
                   
                
                      
                      
                      
                      
                      
                
                   
                
                      
                      
                      
                      
                      
                

`line 206 "/tmp/lm32-customizer/tmp.v"

            end            
        end
  
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        

`line 252 "/tmp/lm32-customizer/tmp.v"
        
  
        
        
               
                    
               
               
              
                   
                  
                
        

`line 265 "/tmp/lm32-customizer/tmp.v"
     
  
        
               
               
              
                   
                  
                
        
        
               
               
              
                   
                  
                
        

`line 283 "/tmp/lm32-customizer/tmp.v"
   
        endcase
    end
end 

endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_top_medium (
    
    clk_i,
    rst_i,
    

    interrupt,

    
  
    
    

`line 335 "/tmp/lm32-customizer/tmp.v"
     
  
`line 336 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 342 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
      
    
    
    
    

`line 354 "/tmp/lm32-customizer/tmp.v"
    
  
`line 355 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 366 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





input clk_i;                                    
input rst_i;                                    


input [ (32-1):0] interrupt;          


  
               
                             

`line 393 "/tmp/lm32-customizer/tmp.v"
    

  
`line 395 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 400 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                               
   
       
     
           
    
           
    

`line 420 "/tmp/lm32-customizer/tmp.v"


  
`line 422 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 441 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;
  



 
  

  
  
 
  
  
 
 

`line 475 "/tmp/lm32-customizer/tmp.v"



  

                     
                             
                            
                   
                                 
 
                                 


`line 488 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"




   

lm32_cpu_medium cpu (
    
    .clk_i                 (clk_i),
  
                   

`line 505 "/tmp/lm32-customizer/tmp.v"

    .rst_i                 (rst_i),
    
  
`line 508 "/tmp/lm32-customizer/tmp.v"

    .interrupt             (interrupt),
 
`line 510 "/tmp/lm32-customizer/tmp.v"

    
  
               
             

`line 515 "/tmp/lm32-customizer/tmp.v"
     
  
    
                  
               
                
           

`line 522 "/tmp/lm32-customizer/tmp.v"

  
`line 523 "/tmp/lm32-customizer/tmp.v"

     
    .I_DAT_I               (I_DAT_I),
    .I_ACK_I               (I_ACK_I),
    .I_ERR_I               (I_ERR_I),
    .I_RTY_I               (I_RTY_I),
 
`line 529 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_I               (D_DAT_I),
    .D_ACK_I               (D_ACK_I),
    .D_ERR_I               (D_ERR_I),
    .D_RTY_I               (D_RTY_I),
    
  
                  
            
           
                 
                
 
                


`line 545 "/tmp/lm32-customizer/tmp.v"

  
                
           

`line 549 "/tmp/lm32-customizer/tmp.v"

      
                
               
            
            

`line 555 "/tmp/lm32-customizer/tmp.v"
    
  
`line 556 "/tmp/lm32-customizer/tmp.v"

    
    .I_DAT_O               (I_DAT_O),
    .I_ADR_O               (I_ADR_O),
    .I_CYC_O               (I_CYC_O),
    .I_SEL_O               (I_SEL_O),
    .I_STB_O               (I_STB_O),
    .I_WE_O                (I_WE_O),
    .I_CTI_O               (I_CTI_O),
    .I_LOCK_O              (I_LOCK_O),
    .I_BTE_O               (I_BTE_O),
     
`line 567 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_O               (D_DAT_O),
    .D_ADR_O               (D_ADR_O),
    .D_CYC_O               (D_CYC_O),
    .D_SEL_O               (D_SEL_O),
    .D_STB_O               (D_STB_O),
    .D_WE_O                (D_WE_O),
    .D_CTI_O               (D_CTI_O),
    .D_LOCK_O              (D_LOCK_O),
    .D_BTE_O               (D_BTE_O)
    );
   
  		   

  
    
                     
                
    
                
                     
                
                      
                     
    

`line 593 "/tmp/lm32-customizer/tmp.v"
        
   
endmodule
































































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_cpu_medium (
    
    clk_i,
  
    

`line 671 "/tmp/lm32-customizer/tmp.v"
    
    rst_i,
    
  
`line 674 "/tmp/lm32-customizer/tmp.v"

    interrupt,
 
`line 676 "/tmp/lm32-customizer/tmp.v"

    
  
    
    

`line 681 "/tmp/lm32-customizer/tmp.v"
     
  
    
    
     
    
    

`line 688 "/tmp/lm32-customizer/tmp.v"

  
`line 689 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 695 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
  
    
    
    
    
    
 
    


`line 711 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 715 "/tmp/lm32-customizer/tmp.v"

      
    
    
    
    

`line 721 "/tmp/lm32-customizer/tmp.v"
    
  
`line 722 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 733 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





parameter eba_reset =  32'h00000000;                           
  
                            

`line 753 "/tmp/lm32-customizer/tmp.v"


  
        
                          
      
          
                        

`line 761 "/tmp/lm32-customizer/tmp.v"

parameter icache_associativity = 1;    
parameter icache_sets = 512;                      
parameter icache_bytes_per_line = 16;  
parameter icache_base_address = 0;      
parameter icache_limit = 0;                    
 
`line 767 "/tmp/lm32-customizer/tmp.v"


  
        
                          
      
          
                        

`line 775 "/tmp/lm32-customizer/tmp.v"

parameter dcache_associativity = 1;    
parameter dcache_sets = 512;                      
parameter dcache_bytes_per_line = 16;  
parameter dcache_base_address = 0;      
parameter dcache_limit = 0;                    
 
`line 781 "/tmp/lm32-customizer/tmp.v"


  
                          

`line 785 "/tmp/lm32-customizer/tmp.v"

parameter watchpoints = 0;
 
`line 787 "/tmp/lm32-customizer/tmp.v"

  
                          

`line 790 "/tmp/lm32-customizer/tmp.v"

parameter breakpoints = 0;
 
`line 792 "/tmp/lm32-customizer/tmp.v"


  
`line 794 "/tmp/lm32-customizer/tmp.v"

parameter interrupts =  32;                         
 
   

`line 798 "/tmp/lm32-customizer/tmp.v"






input clk_i;                                    
  
                                   

`line 807 "/tmp/lm32-customizer/tmp.v"
    
input rst_i;                                    

  
`line 810 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] interrupt;          
 
`line 812 "/tmp/lm32-customizer/tmp.v"


  
               
                             

`line 817 "/tmp/lm32-customizer/tmp.v"
    

  
                                  
                               
                
  

`line 824 "/tmp/lm32-customizer/tmp.v"


  
`line 826 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 831 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                   
     
                           
    
                          
    
                 
     
                               
    
 
                               
    


`line 857 "/tmp/lm32-customizer/tmp.v"


  
  
    
  
    

`line 864 "/tmp/lm32-customizer/tmp.v"


  
                               
   
       
     
           
    
           
    

`line 875 "/tmp/lm32-customizer/tmp.v"


  
`line 877 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 896 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;







  
                                     

`line 925 "/tmp/lm32-customizer/tmp.v"

reg valid_f;                                    
reg valid_d;                                    
reg valid_x;                                    
reg valid_m;                                    
reg valid_w;                                    
   
wire q_x;
wire [ (32-1):0] immediate_d;              
wire load_d;                                    
reg load_x;                                     
reg load_m;
wire load_q_x;
wire store_q_x;
wire store_d;                                   
reg store_x;
reg store_m;
wire [ 1:0] size_d;                   
reg [ 1:0] size_x;
wire branch_d;                                  
wire branch_predict_d;                          
wire branch_predict_taken_d;                    
wire [ ((32-2)+2-1):2] branch_predict_address_d;   
wire [ ((32-2)+2-1):2] branch_target_d;
wire bi_unconditional;
wire bi_conditional;
reg branch_x;                                   
reg branch_predict_x;
reg branch_predict_taken_x;
reg branch_m;
reg branch_predict_m;
reg branch_predict_taken_m;
wire branch_mispredict_taken_m;                 
wire branch_flushX_m;                           
wire branch_reg_d;                              
wire [ ((32-2)+2-1):2] branch_offset_d;            
reg [ ((32-2)+2-1):2] branch_target_x;             
reg [ ((32-2)+2-1):2] branch_target_m;
wire [ 0:0] d_result_sel_0_d; 
wire [ 1:0] d_result_sel_1_d; 

wire x_result_sel_csr_d;                        
reg x_result_sel_csr_x;
  
                    
 

`line 971 "/tmp/lm32-customizer/tmp.v"

      
                       
 

`line 975 "/tmp/lm32-customizer/tmp.v"

  
`line 976 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_sext_d;                       
reg x_result_sel_sext_x;
 
`line 979 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_logic_d;                      
reg x_result_sel_logic_x;
  
                        
 

`line 985 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_add_d;                        
reg x_result_sel_add_x;
wire m_result_sel_compare_d;                    
reg m_result_sel_compare_x;
reg m_result_sel_compare_m;
  
`line 991 "/tmp/lm32-customizer/tmp.v"

wire m_result_sel_shift_d;                      
reg m_result_sel_shift_x;
reg m_result_sel_shift_m;
 
`line 995 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_load_d;                       
reg w_result_sel_load_x;
reg w_result_sel_load_m;
reg w_result_sel_load_w;
  
`line 1000 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_mul_d;                        
reg w_result_sel_mul_x;
reg w_result_sel_mul_m;
reg w_result_sel_mul_w;
 
`line 1005 "/tmp/lm32-customizer/tmp.v"

wire x_bypass_enable_d;                         
reg x_bypass_enable_x;                          
wire m_bypass_enable_d;                         
reg m_bypass_enable_x;                          
reg m_bypass_enable_m;
wire sign_extend_d;                             
reg sign_extend_x;
wire write_enable_d;                            
reg write_enable_x;
wire write_enable_q_x;
reg write_enable_m;
wire write_enable_q_m;
reg write_enable_w;
wire write_enable_q_w;
wire read_enable_0_d;                           
wire [ (5-1):0] read_idx_0_d;          
wire read_enable_1_d;                           
wire [ (5-1):0] read_idx_1_d;          
wire [ (5-1):0] write_idx_d;           
reg [ (5-1):0] write_idx_x;            
reg [ (5-1):0] write_idx_m;
reg [ (5-1):0] write_idx_w;
wire [ (3-1):0] csr_d;                     
reg  [ (3-1):0] csr_x;                  
wire [ (3-1):0] condition_d;         
reg [ (3-1):0] condition_x;          
  
                                    
                                     

`line 1035 "/tmp/lm32-customizer/tmp.v"

wire scall_d;                                   
reg scall_x;    
wire eret_d;                                    
reg eret_x;
wire eret_q_x;
reg eret_m;
  
 

`line 1044 "/tmp/lm32-customizer/tmp.v"

  
                                     
 
 
 
 
 


`line 1053 "/tmp/lm32-customizer/tmp.v"

wire csr_write_enable_d;                        
reg csr_write_enable_x;
wire csr_write_enable_q_x;
  
       

`line 1059 "/tmp/lm32-customizer/tmp.v"


  
                                
 
 
  

`line 1066 "/tmp/lm32-customizer/tmp.v"


reg [ (32-1):0] d_result_0;                
reg [ (32-1):0] d_result_1;                
reg [ (32-1):0] x_result;                  
reg [ (32-1):0] m_result;                  
reg [ (32-1):0] w_result;                  

reg [ (32-1):0] operand_0_x;               
reg [ (32-1):0] operand_1_x;               
reg [ (32-1):0] store_operand_x;           
reg [ (32-1):0] operand_m;                 
reg [ (32-1):0] operand_w;                 


  
`line 1081 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] reg_data_live_0;          
reg [ (32-1):0] reg_data_live_1;  
reg use_buf;                                    
reg [ (32-1):0] reg_data_buf_0;
reg [ (32-1):0] reg_data_buf_1;
 
`line 1087 "/tmp/lm32-customizer/tmp.v"

  
`line 1088 "/tmp/lm32-customizer/tmp.v"

 
     

`line 1091 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] reg_data_0;               
wire [ (32-1):0] reg_data_1;               
reg [ (32-1):0] bypass_data_0;             
reg [ (32-1):0] bypass_data_1;             
wire reg_write_enable_q_w;

reg interlock;                                  

wire stall_a;                                   
wire stall_f;                                   
wire stall_d;                                   
wire stall_x;                                   
wire stall_m;                                   


wire adder_op_d;                                
reg adder_op_x;                                 
reg adder_op_x_n;                               
wire [ (32-1):0] adder_result_x;           
wire adder_overflow_x;                          
wire adder_carry_n_x;                           


wire [ 3:0] logic_op_d;           
reg [ 3:0] logic_op_x;            
wire [ (32-1):0] logic_result_x;           

  
`line 1119 "/tmp/lm32-customizer/tmp.v"


wire [ (32-1):0] sextb_result_x;           
wire [ (32-1):0] sexth_result_x;           
wire [ (32-1):0] sext_result_x;            
 
`line 1124 "/tmp/lm32-customizer/tmp.v"



  
`line 1127 "/tmp/lm32-customizer/tmp.v"

  
                                   
                                     

`line 1131 "/tmp/lm32-customizer/tmp.v"

wire direction_d;                               
reg direction_x;                                        
reg direction_m;
wire [ (32-1):0] shifter_result_m;         
 
`line 1136 "/tmp/lm32-customizer/tmp.v"

  
                               
 
                              
 

`line 1142 "/tmp/lm32-customizer/tmp.v"

  
           

`line 1145 "/tmp/lm32-customizer/tmp.v"



  
`line 1148 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] multiplier_result_w;      
 
`line 1150 "/tmp/lm32-customizer/tmp.v"

  
                                 
 

`line 1154 "/tmp/lm32-customizer/tmp.v"



  
                                   
 
 
 
                           

`line 1163 "/tmp/lm32-customizer/tmp.v"



  
                         
  

`line 1169 "/tmp/lm32-customizer/tmp.v"



  
`line 1172 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] interrupt_csr_read_data_x;
 
`line 1174 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] cfg;                      
wire [ (32-1):0] cfg2;                     
  
                          

`line 1179 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] csr_read_data_x;           


wire [ ((32-2)+2-1):2] pc_f;                       
wire [ ((32-2)+2-1):2] pc_d;                       
wire [ ((32-2)+2-1):2] pc_x;                       
wire [ ((32-2)+2-1):2] pc_m;                       
wire [ ((32-2)+2-1):2] pc_w;                       
  
                          

`line 1190 "/tmp/lm32-customizer/tmp.v"

  
`line 1191 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] instruction_f;     
 
`line 1193 "/tmp/lm32-customizer/tmp.v"



wire [ (32-1):0] instruction_d;     
  
                                     
                       
                     
                      
                           

`line 1203 "/tmp/lm32-customizer/tmp.v"

  
          
            
                
                                 
                       

`line 1210 "/tmp/lm32-customizer/tmp.v"



  
                                   
                                     
                       
                     
                      
                           

`line 1220 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] load_data_w;              
wire stall_wb_load;                             


  
 
          
          

 
                      
        
                    
                           
  
 
  
  
 

 
                                 


`line 1244 "/tmp/lm32-customizer/tmp.v"



wire raw_x_0;                                   
wire raw_x_1;                                   
wire raw_m_0;                                   
wire raw_m_1;                                   
wire raw_w_0;                                   
wire raw_w_1;                                   


wire cmp_zero;                                  
wire cmp_negative;                              
wire cmp_overflow;                              
wire cmp_carry_n;                               
reg condition_met_x;                            
reg condition_met_m;
      
                             

`line 1263 "/tmp/lm32-customizer/tmp.v"

wire branch_taken_m;                            

wire kill_f;                                    
wire kill_d;                                    
wire kill_x;                                    
wire kill_m;                                    
wire kill_w;                                    

reg [ (32-2)+2-1:8] eba;                 
  
                  

`line 1275 "/tmp/lm32-customizer/tmp.v"

reg [ (3-1):0] eid_x;                      
  
                        
                        

`line 1280 "/tmp/lm32-customizer/tmp.v"


  
 
                                      

                                      
                                
                                 
                          
 
 
 
                      
 
 
 

`line 1297 "/tmp/lm32-customizer/tmp.v"

wire exception_x;                               
reg exception_m;
reg exception_w;
wire exception_q_w;
 
`line 1302 "/tmp/lm32-customizer/tmp.v"


  
 
                            


`line 1308 "/tmp/lm32-customizer/tmp.v"

  
`line 1309 "/tmp/lm32-customizer/tmp.v"

wire interrupt_exception;                       
 
`line 1311 "/tmp/lm32-customizer/tmp.v"

  
                       
                       

`line 1315 "/tmp/lm32-customizer/tmp.v"

  
            
                   

`line 1319 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1322 "/tmp/lm32-customizer/tmp.v"

wire system_call_exception;                     

  
                         

`line 1327 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







lm32_instruction_unit_medium #(
    .associativity          (icache_associativity),
    .sets                   (icache_sets),
    .bytes_per_line         (icache_bytes_per_line),
    .base_address           (icache_base_address),
    .limit                  (icache_limit)
  ) instruction_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .stall_d                (stall_d),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .valid_f                (valid_f),
    .valid_d                (valid_d),
    .kill_f                 (kill_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .branch_predict_address_d (branch_predict_address_d),
      
             
            

`line 1364 "/tmp/lm32-customizer/tmp.v"

    .exception_m            (exception_m),
    .branch_taken_m         (branch_taken_m),
    .branch_mispredict_taken_m (branch_mispredict_taken_m),
    .branch_target_m        (branch_target_m),
  
                     

`line 1371 "/tmp/lm32-customizer/tmp.v"

  
          
            
                 

`line 1376 "/tmp/lm32-customizer/tmp.v"

  
     
      
           

`line 1381 "/tmp/lm32-customizer/tmp.v"
        
  
`line 1382 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_i                (I_DAT_I),
    .i_ack_i                (I_ACK_I),
    .i_err_i                (I_ERR_I),
    .i_rty_i                (I_RTY_I),
 
`line 1388 "/tmp/lm32-customizer/tmp.v"

  
           
          
            
               

`line 1394 "/tmp/lm32-customizer/tmp.v"

    
    
    .pc_f                   (pc_f),
    .pc_d                   (pc_d),
    .pc_x                   (pc_x),
    .pc_m                   (pc_m),
    .pc_w                   (pc_w),
  
       
     
      
           

`line 1407 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1410 "/tmp/lm32-customizer/tmp.v"

  
`line 1411 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_o                (I_DAT_O),
    .i_adr_o                (I_ADR_O),
    .i_cyc_o                (I_CYC_O),
    .i_sel_o                (I_SEL_O),
    .i_stb_o                (I_STB_O),
    .i_we_o                 (I_WE_O),
    .i_cti_o                (I_CTI_O),
    .i_lock_o               (I_LOCK_O),
    .i_bte_o                (I_BTE_O),
 
`line 1422 "/tmp/lm32-customizer/tmp.v"

  
             
       

`line 1426 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1429 "/tmp/lm32-customizer/tmp.v"

  
`line 1430 "/tmp/lm32-customizer/tmp.v"

    .instruction_f          (instruction_f),
 
`line 1432 "/tmp/lm32-customizer/tmp.v"

    .instruction_d          (instruction_d)
    );


lm32_decoder_medium decoder (
    
    .instruction            (instruction_d),
    
    .d_result_sel_0         (d_result_sel_0_d),
    .d_result_sel_1         (d_result_sel_1_d),
    .x_result_sel_csr       (x_result_sel_csr_d),
  
      

`line 1446 "/tmp/lm32-customizer/tmp.v"

      
         

`line 1449 "/tmp/lm32-customizer/tmp.v"

  
`line 1450 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_sext      (x_result_sel_sext_d),
 
`line 1452 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_logic     (x_result_sel_logic_d),
  
          

`line 1456 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_add       (x_result_sel_add_d),
    .m_result_sel_compare   (m_result_sel_compare_d),
  
`line 1459 "/tmp/lm32-customizer/tmp.v"

    .m_result_sel_shift     (m_result_sel_shift_d),  
 
`line 1461 "/tmp/lm32-customizer/tmp.v"
    
    .w_result_sel_load      (w_result_sel_load_d),
  
`line 1463 "/tmp/lm32-customizer/tmp.v"

    .w_result_sel_mul       (w_result_sel_mul_d),
 
`line 1465 "/tmp/lm32-customizer/tmp.v"

    .x_bypass_enable        (x_bypass_enable_d),
    .m_bypass_enable        (m_bypass_enable_d),
    .read_enable_0          (read_enable_0_d),
    .read_idx_0             (read_idx_0_d),
    .read_enable_1          (read_enable_1_d),
    .read_idx_1             (read_idx_1_d),
    .write_enable           (write_enable_d),
    .write_idx              (write_idx_d),
    .immediate              (immediate_d),
    .branch_offset          (branch_offset_d),
    .load                   (load_d),
    .store                  (store_d),
    .size                   (size_d),
    .sign_extend            (sign_extend_d),
    .adder_op               (adder_op_d),
    .logic_op               (logic_op_d),
  
`line 1482 "/tmp/lm32-customizer/tmp.v"

    .direction              (direction_d),
 
`line 1484 "/tmp/lm32-customizer/tmp.v"

  
                 
                

`line 1488 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1491 "/tmp/lm32-customizer/tmp.v"

  
                     
                    

`line 1495 "/tmp/lm32-customizer/tmp.v"

    .branch                 (branch_d),
    .bi_unconditional       (bi_unconditional),
    .bi_conditional         (bi_conditional),
    .branch_reg             (branch_reg_d),
    .condition              (condition_d),
  
               

`line 1503 "/tmp/lm32-customizer/tmp.v"

    .scall                  (scall_d),
    .eret                   (eret_d),
  
                       

`line 1508 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1511 "/tmp/lm32-customizer/tmp.v"

    .csr_write_enable       (csr_write_enable_d)
    ); 


lm32_load_store_unit_medium #(
    .associativity          (dcache_associativity),
    .sets                   (dcache_sets),
    .bytes_per_line         (dcache_bytes_per_line),
    .base_address           (dcache_base_address),
    .limit                  (dcache_limit)
  ) load_store_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .kill_x                 (kill_x),
    .kill_m                 (kill_m),
    .exception_m            (exception_m),
    .store_operand_x        (store_operand_x),
    .load_store_address_x   (adder_result_x),
    .load_store_address_m   (operand_m),
    .load_store_address_w   (operand_w[1:0]),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_q_x               (load_q_x),
    .store_q_x              (store_q_x),
    .load_q_m               (load_q_m),
    .store_q_m              (store_q_m),
    .sign_extend_x          (sign_extend_x),
    .size_x                 (size_x),
  
                     

`line 1547 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1550 "/tmp/lm32-customizer/tmp.v"

    
    .d_dat_i                (D_DAT_I),
    .d_ack_i                (D_ACK_I),
    .d_err_i                (D_ERR_I),
    .d_rty_i                (D_RTY_I),
    
    
  
      
     
       
           

`line 1563 "/tmp/lm32-customizer/tmp.v"
    
  
          
            
                 
       

`line 1569 "/tmp/lm32-customizer/tmp.v"

    .load_data_w            (load_data_w),
    .stall_wb_load          (stall_wb_load),
    
    .d_dat_o                (D_DAT_O),
    .d_adr_o                (D_ADR_O),
    .d_cyc_o                (D_CYC_O),
    .d_sel_o                (D_SEL_O),
    .d_stb_o                (D_STB_O),
    .d_we_o                 (D_WE_O),
    .d_cti_o                (D_CTI_O),
    .d_lock_o               (D_LOCK_O),
    .d_bte_o                (D_BTE_O)
    );      
       

lm32_adder adder (
    
    .adder_op_x             (adder_op_x),
    .adder_op_x_n           (adder_op_x_n),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .adder_result_x         (adder_result_x),
    .adder_carry_n_x        (adder_carry_n_x),
    .adder_overflow_x       (adder_overflow_x)
    );


lm32_logic_op logic_op (
    
    .logic_op_x             (logic_op_x),
    .operand_0_x            (operand_0_x),

    .operand_1_x            (operand_1_x),
    
    .logic_result_x         (logic_result_x)
    );
              
  
`line 1608 "/tmp/lm32-customizer/tmp.v"


lm32_shifter shifter (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .direction_x            (direction_x),
    .sign_extend_x          (sign_extend_x),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .shifter_result_m       (shifter_result_m)
    );
 
`line 1622 "/tmp/lm32-customizer/tmp.v"


  
`line 1624 "/tmp/lm32-customizer/tmp.v"


lm32_multiplier multiplier (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .operand_0              (d_result_0),
    .operand_1              (d_result_1),
    
    .result                 (multiplier_result_w)    
    );
 
`line 1637 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
                    
                     
                   
                   
                  

         
                 

 
               
              
              
    
                
                
    
                   
                   
           

            
    

`line 1668 "/tmp/lm32-customizer/tmp.v"

              
  
`line 1670 "/tmp/lm32-customizer/tmp.v"


lm32_interrupt_medium interrupt_unit (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    
    .interrupt              (interrupt),
    
    .stall_x                (stall_x),
  
         
            

`line 1683 "/tmp/lm32-customizer/tmp.v"

    .exception              (exception_q_w), 
 
`line 1685 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
  
                   

`line 1689 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    
    .interrupt_exception    (interrupt_exception),
    
    .csr_read_data          (interrupt_csr_read_data_x)
    );
 
`line 1698 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
    
                   
                
                 
            
    
 
                        
             
           
                    

 
             
       

 
                
    
    
    
 
          
          

 
      
        
                   
           
          
            
               

 
                 
                 

    
                 
            
    

`line 1748 "/tmp/lm32-customizer/tmp.v"


  

 
                
                
    
    
                       
                      
                       
                     
                    
       
         
             
                      
 
      
        
                   

 
                   
                   
                    
                
                        
 
      


    
 
                      

                      
                   
                   
    

`line 1789 "/tmp/lm32-customizer/tmp.v"




  
`line 1793 "/tmp/lm32-customizer/tmp.v"

   
           
            
          
            


             
              
    

   wire [31:0] regfile_data_0, regfile_data_1;
   reg [31:0]  w_result_d;
   reg 	       regfile_raw_0, regfile_raw_0_nxt;
   reg 	       regfile_raw_1, regfile_raw_1_nxt;
   
   
             
          

   always @(reg_write_enable_q_w or write_idx_w or instruction_f)
     begin
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[25:21]))
	  regfile_raw_0_nxt = 1'b1;
	else
	  regfile_raw_0_nxt = 1'b0;
	
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[20:16]))
	  regfile_raw_1_nxt = 1'b1;
	else
	  regfile_raw_1_nxt = 1'b0;
     end
   
   
           
           
       

   always @(regfile_raw_0 or w_result_d or regfile_data_0)
     if (regfile_raw_0)
       reg_data_live_0 = w_result_d;
     else
       reg_data_live_0 = regfile_data_0;
   
   
           
           
       

   always @(regfile_raw_1 or w_result_d or regfile_data_1)
     if (regfile_raw_1)
       reg_data_live_1 = w_result_d;
     else
       reg_data_live_1 = regfile_data_1;
   
   
     

   always @(posedge clk_i  )
     if (rst_i ==  1'b1)
       begin
	  regfile_raw_0 <= 1'b0;
	  regfile_raw_1 <= 1'b0;
	  w_result_d <= 32'b0;
       end
     else
       begin
	  regfile_raw_0 <= regfile_raw_0_nxt;
	  regfile_raw_1 <= regfile_raw_1_nxt;
	  w_result_d <= w_result;
       end
   
   
      

   
   lm32_dp_ram
     #(
       
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_0
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[25:21]),
      
      .rdata_o	(regfile_data_0)
      );

   lm32_dp_ram
     #(
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_1
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[20:16]),
      
      .rdata_o	(regfile_data_1)
      );
 
`line 1910 "/tmp/lm32-customizer/tmp.v"


  
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      
   
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      

`line 1978 "/tmp/lm32-customizer/tmp.v"







  
`line 1985 "/tmp/lm32-customizer/tmp.v"


assign reg_data_0 = use_buf ? reg_data_buf_0 : reg_data_live_0;
assign reg_data_1 = use_buf ? reg_data_buf_1 : reg_data_live_1;
 
`line 1989 "/tmp/lm32-customizer/tmp.v"

  
`line 1990 "/tmp/lm32-customizer/tmp.v"

 

   
   

`line 1995 "/tmp/lm32-customizer/tmp.v"



assign raw_x_0 = (write_idx_x == read_idx_0_d) && (write_enable_q_x ==  1'b1);
assign raw_m_0 = (write_idx_m == read_idx_0_d) && (write_enable_q_m ==  1'b1);
assign raw_w_0 = (write_idx_w == read_idx_0_d) && (write_enable_q_w ==  1'b1);
assign raw_x_1 = (write_idx_x == read_idx_1_d) && (write_enable_q_x ==  1'b1);
assign raw_m_1 = (write_idx_m == read_idx_1_d) && (write_enable_q_m ==  1'b1);
assign raw_w_1 = (write_idx_w == read_idx_1_d) && (write_enable_q_w ==  1'b1);


always @(*)
begin
    if (   (   (x_bypass_enable_x ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_x_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_x_1 ==  1'b1))
               )
           )
        || (   (m_bypass_enable_m ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_m_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_m_1 ==  1'b1))
               )
           )
       )
        interlock =  1'b1;
    else
        interlock =  1'b0;
end


always @(*)
begin
    if (raw_x_0 ==  1'b1)        
        bypass_data_0 = x_result;
    else if (raw_m_0 ==  1'b1)
        bypass_data_0 = m_result;
    else if (raw_w_0 ==  1'b1)
        bypass_data_0 = w_result;
    else
        bypass_data_0 = reg_data_0;
end


always @(*)
begin
    if (raw_x_1 ==  1'b1)
        bypass_data_1 = x_result;
    else if (raw_m_1 ==  1'b1)
        bypass_data_1 = m_result;
    else if (raw_w_1 ==  1'b1)
        bypass_data_1 = w_result;
    else
        bypass_data_1 = reg_data_1;
end

   
          
       
       
     

   assign branch_predict_d = bi_unconditional | bi_conditional;
   assign branch_predict_taken_d = bi_unconditional ? 1'b1 : (bi_conditional ? instruction_d[15] : 1'b0);
   
   
   assign branch_target_d = pc_d + branch_offset_d;

   
   
   
   assign branch_predict_address_d = branch_predict_taken_d ? branch_target_d : pc_f;


always @(*)
begin
    d_result_0 = d_result_sel_0_d[0] ? {pc_f, 2'b00} : bypass_data_0; 
    case (d_result_sel_1_d)
     2'b00:      d_result_1 = { 32{1'b0}};
     2'b01:     d_result_1 = bypass_data_1;
     2'b10: d_result_1 = immediate_d;
    default:                        d_result_1 = { 32{1'bx}};
    endcase
end

      

   
   

`line 2083 "/tmp/lm32-customizer/tmp.v"


  
`line 2085 "/tmp/lm32-customizer/tmp.v"


assign sextb_result_x = {{24{operand_0_x[7]}}, operand_0_x[7:0]};
assign sexth_result_x = {{16{operand_0_x[15]}}, operand_0_x[15:0]};
assign sext_result_x = size_x ==  2'b00 ? sextb_result_x : sexth_result_x;
 
`line 2090 "/tmp/lm32-customizer/tmp.v"


  

      

`line 2095 "/tmp/lm32-customizer/tmp.v"



assign cmp_zero = operand_0_x == operand_1_x;
assign cmp_negative = adder_result_x[ 32-1];
assign cmp_overflow = adder_overflow_x;
assign cmp_carry_n = adder_carry_n_x;
always @(*)
begin
    case (condition_x)
     3'b000:   condition_met_x =  1'b1;
     3'b110:   condition_met_x =  1'b1;
     3'b001:    condition_met_x = cmp_zero;
     3'b111:   condition_met_x = !cmp_zero;
     3'b010:    condition_met_x = !cmp_zero && (cmp_negative == cmp_overflow);
     3'b101:   condition_met_x = cmp_carry_n && !cmp_zero;
     3'b011:   condition_met_x = cmp_negative == cmp_overflow;
     3'b100:  condition_met_x = cmp_carry_n;
    default:              condition_met_x = 1'bx;
    endcase 
end


always @(*)
begin
    x_result =   x_result_sel_add_x ? adder_result_x 
               : x_result_sel_csr_x ? csr_read_data_x
  
`line 2122 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_sext_x ? sext_result_x
 
`line 2124 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2127 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2130 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2133 "/tmp/lm32-customizer/tmp.v"

               : logic_result_x;
end


always @(*)
begin
    m_result =   m_result_sel_compare_m ? {{ 32-1{1'b0}}, condition_met_m}
  
`line 2141 "/tmp/lm32-customizer/tmp.v"

               : m_result_sel_shift_m ? shifter_result_m
 
`line 2143 "/tmp/lm32-customizer/tmp.v"

               : operand_m; 
end


always @(*)
begin
    w_result =    w_result_sel_load_w ? load_data_w
  
`line 2151 "/tmp/lm32-customizer/tmp.v"

                : w_result_sel_mul_w ? multiplier_result_w
 
`line 2153 "/tmp/lm32-customizer/tmp.v"

                : operand_w;
end

      

          
                                
                                     
                                 
                                 
                              

`line 2165 "/tmp/lm32-customizer/tmp.v"



assign branch_taken_m =      (stall_m ==  1'b0) 
                          && (   (   (branch_m ==  1'b1) 
                                  && (valid_m ==  1'b1)
                                  && (   (   (condition_met_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b0)
					 )
				      || (   (condition_met_m ==  1'b0)
					  && (branch_predict_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b1)
					 )
				     )
                                 ) 
                              || (exception_m ==  1'b1)
                             );


assign branch_mispredict_taken_m =    (condition_met_m ==  1'b0)
                                   && (branch_predict_m ==  1'b1)
	   			   && (branch_predict_taken_m ==  1'b1);
   

assign branch_flushX_m =    (stall_m ==  1'b0)
                         && (   (   (branch_m ==  1'b1) 
                                 && (valid_m ==  1'b1)
			         && (   (condition_met_m ==  1'b1)
				     || (   (condition_met_m ==  1'b0)
					 && (branch_predict_m ==  1'b1)
					 && (branch_predict_taken_m ==  1'b1)
					)
				    )
			        )
			     || (exception_m ==  1'b1)
			    );


assign kill_f =    (   (valid_d ==  1'b1)
                    && (branch_predict_taken_d ==  1'b1)
		   )
                || (branch_taken_m ==  1'b1) 
      
                   

`line 2209 "/tmp/lm32-customizer/tmp.v"

  
                    

`line 2212 "/tmp/lm32-customizer/tmp.v"

                  
                   

`line 2215 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_d =    (branch_taken_m ==  1'b1) 
      
                   

`line 2220 "/tmp/lm32-customizer/tmp.v"

  
                        

`line 2223 "/tmp/lm32-customizer/tmp.v"
                
                  
                   

`line 2226 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_x =    (branch_flushX_m ==  1'b1) 
                  
                   

`line 2231 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_m =     1'b0
                  
                   

`line 2236 "/tmp/lm32-customizer/tmp.v"

                ;                
assign kill_w =     1'b0
                  
                   

`line 2241 "/tmp/lm32-customizer/tmp.v"
                
                ;



  
              
				         
				     
				     
				 
 
                                 

                              

`line 2256 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2260 "/tmp/lm32-customizer/tmp.v"


  
        
                                             
                                         
     

`line 2267 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2271 "/tmp/lm32-customizer/tmp.v"


assign system_call_exception = (   (scall_x ==  1'b1)
  
                                   

`line 2276 "/tmp/lm32-customizer/tmp.v"

			       );

  
      
                            
                         

     
 
                               

 
                               
                               

 
                               

 
                                  
 
                                   
                            
 
 				   
				   

                               

                            

         

`line 2309 "/tmp/lm32-customizer/tmp.v"

assign exception_x =           (system_call_exception ==  1'b1)
  
                               
                               

`line 2314 "/tmp/lm32-customizer/tmp.v"

  
                               

`line 2317 "/tmp/lm32-customizer/tmp.v"

  
`line 2318 "/tmp/lm32-customizer/tmp.v"

                            || (   (interrupt_exception ==  1'b1)
  
                                   

`line 2322 "/tmp/lm32-customizer/tmp.v"
                            
  
 				   
				   

`line 2326 "/tmp/lm32-customizer/tmp.v"

                               )
 
`line 2328 "/tmp/lm32-customizer/tmp.v"

                            ;
 
`line 2330 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
  
 
       
          
    
     
 
            
          
    

            
          
    

`line 2349 "/tmp/lm32-customizer/tmp.v"

  
            
          
    
            
          
    

`line 2357 "/tmp/lm32-customizer/tmp.v"

  
            
          
     

`line 2362 "/tmp/lm32-customizer/tmp.v"

  
            
          
    

`line 2367 "/tmp/lm32-customizer/tmp.v"

  
`line 2368 "/tmp/lm32-customizer/tmp.v"

         if (   (interrupt_exception ==  1'b1)
  
                

`line 2372 "/tmp/lm32-customizer/tmp.v"
                            
            )
        eid_x =  3'h6;
    else
 
`line 2376 "/tmp/lm32-customizer/tmp.v"

        eid_x =  3'h7;
end



assign stall_a = (stall_f ==  1'b1);
                
assign stall_f = (stall_d ==  1'b1);
                
assign stall_d =   (stall_x ==  1'b1) 
                || (   (interlock ==  1'b1)
                    && (kill_d ==  1'b0)
                   ) 
		|| (   (   (eret_d ==  1'b1)
			|| (scall_d ==  1'b1)
  
			   

`line 2394 "/tmp/lm32-customizer/tmp.v"

		       )
		    && (   (load_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
  
		         
			   
		       
		          
			   
			   
			   
			   
		       
                       
		   

`line 2416 "/tmp/lm32-customizer/tmp.v"
                   
                || (   (csr_write_enable_d ==  1'b1)
                    && (load_q_x ==  1'b1)
                   )                      
                ;
                
assign stall_x =    (stall_m ==  1'b1)
  
                       
                        
                     

`line 2427 "/tmp/lm32-customizer/tmp.v"

  
                 
                 
                       
		           
			    
			
		    

`line 2436 "/tmp/lm32-customizer/tmp.v"

                 ;

assign stall_m =    (stall_wb_load ==  1'b1)
  
                    

`line 2442 "/tmp/lm32-customizer/tmp.v"

                 || (   (D_CYC_O ==  1'b1)
                     && (   (store_m ==  1'b1)
		         
          
          

		  
	 
	

          
           
          
       

  
`line 2458 "/tmp/lm32-customizer/tmp.v"

		         || ((store_x ==  1'b1) && (interrupt_exception ==  1'b1))
 
`line 2460 "/tmp/lm32-customizer/tmp.v"

                         || (load_m ==  1'b1)
                         || (load_x ==  1'b1)
                        ) 
                    ) 
 
`line 2465 "/tmp/lm32-customizer/tmp.v"
                 
  
                         

`line 2468 "/tmp/lm32-customizer/tmp.v"
                                    
  
                         
                             

`line 2472 "/tmp/lm32-customizer/tmp.v"

  
`line 2473 "/tmp/lm32-customizer/tmp.v"

                 || (I_CYC_O ==  1'b1)            
 
`line 2475 "/tmp/lm32-customizer/tmp.v"

 
`line 2476 "/tmp/lm32-customizer/tmp.v"
                               
  
                                  
                        
                    

`line 2481 "/tmp/lm32-customizer/tmp.v"

                 ;      


  
         

`line 2487 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2491 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2494 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2498 "/tmp/lm32-customizer/tmp.v"

assign q_x = (valid_x ==  1'b1) && (kill_x ==  1'b0);
assign csr_write_enable_q_x = (csr_write_enable_x ==  1'b1) && (q_x ==  1'b1);
assign eret_q_x = (eret_x ==  1'b1) && (q_x ==  1'b1);
  
         

`line 2504 "/tmp/lm32-customizer/tmp.v"

assign load_q_x = (load_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2509 "/tmp/lm32-customizer/tmp.v"

                  ;
assign store_q_x = (store_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2515 "/tmp/lm32-customizer/tmp.v"

                  ;
  
         

`line 2519 "/tmp/lm32-customizer/tmp.v"
                              
assign q_m = (valid_m ==  1'b1) && (kill_m ==  1'b0) && (exception_m ==  1'b0);
assign load_q_m = (load_m ==  1'b1) && (q_m ==  1'b1);
assign store_q_m = (store_m ==  1'b1) && (q_m ==  1'b1);
  
         
                 

`line 2526 "/tmp/lm32-customizer/tmp.v"

assign exception_q_w = ((exception_w ==  1'b1) && (valid_w ==  1'b1));        
 
`line 2528 "/tmp/lm32-customizer/tmp.v"


assign write_enable_q_x = (write_enable_x ==  1'b1) && (valid_x ==  1'b1) && (branch_flushX_m ==  1'b0);
assign write_enable_q_m = (write_enable_m ==  1'b1) && (valid_m ==  1'b1);
assign write_enable_q_w = (write_enable_w ==  1'b1) && (valid_w ==  1'b1);

assign reg_write_enable_q_w = (write_enable_w ==  1'b1) && (kill_w ==  1'b0) && (valid_w ==  1'b1);


assign cfg = {
               6'h02,
              watchpoints[3:0],
              breakpoints[3:0],
              interrupts[5:0],
  
              

`line 2544 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2546 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2549 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2551 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2554 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2556 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2559 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2561 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2564 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2566 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2569 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2571 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2574 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2576 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2579 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2581 "/tmp/lm32-customizer/tmp.v"

  
`line 2582 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2586 "/tmp/lm32-customizer/tmp.v"

  
`line 2587 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2591 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2594 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2596 "/tmp/lm32-customizer/tmp.v"

  
`line 2597 "/tmp/lm32-customizer/tmp.v"
 
               1'b1
 
              

`line 2601 "/tmp/lm32-customizer/tmp.v"

              };

assign cfg2 = {
		     30'b0,
  
		     

`line 2608 "/tmp/lm32-customizer/tmp.v"

		      1'b0,
 
`line 2610 "/tmp/lm32-customizer/tmp.v"

  
		     

`line 2613 "/tmp/lm32-customizer/tmp.v"

		      1'b0
 
`line 2615 "/tmp/lm32-customizer/tmp.v"

		     };
   

  
         
                    
                    
                    
                    

 
             
                     
		    

		 

`line 2632 "/tmp/lm32-customizer/tmp.v"
 
  
         
                      

 
               
                       
		      

		   

`line 2643 "/tmp/lm32-customizer/tmp.v"
 


assign csr_d = read_idx_0_d[ (3-1):0];


always @(*)
begin
    case (csr_x)
  
`line 2652 "/tmp/lm32-customizer/tmp.v"

     3'h0,
     3'h1,
     3'h2:   csr_read_data_x = interrupt_csr_read_data_x;  
 
`line 2656 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2659 "/tmp/lm32-customizer/tmp.v"

     3'h6:  csr_read_data_x = cfg;
     3'h7:  csr_read_data_x = {eba, 8'h00};
  
        

`line 2664 "/tmp/lm32-customizer/tmp.v"

  
          
        

`line 2668 "/tmp/lm32-customizer/tmp.v"

     3'ha: csr_read_data_x = cfg2;
      
    default:        csr_read_data_x = { 32{1'bx}};
    endcase
end






always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        eba <= eba_reset[ (32-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  3'h7) && (stall_x ==  1'b0))
            eba <= operand_1_x[ (32-2)+2-1:8];
  
               
              

`line 2691 "/tmp/lm32-customizer/tmp.v"

    end
end

  

   

       
          
    
    
                   
              
 
               
              

    


`line 2711 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
            


`line 2722 "/tmp/lm32-customizer/tmp.v"


  

   

       
          
    
    
        
               
              
        
               
              
    


`line 2740 "/tmp/lm32-customizer/tmp.v"

 


  
 
 

           
           
       
          
            
                 
             
          
     
            
 

 

        
          
         
          
     
          
 


`line 2770 "/tmp/lm32-customizer/tmp.v"

  
 

        
          
         
          
     
          
 

`line 2781 "/tmp/lm32-customizer/tmp.v"

 
`line 2782 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        valid_f <=  1'b0;
        valid_d <=  1'b0;
        valid_x <=  1'b0;
        valid_m <=  1'b0;
        valid_w <=  1'b0;
    end
    else
    begin    
        if ((kill_f ==  1'b1) || (stall_a ==  1'b0))
  
                  

`line 2799 "/tmp/lm32-customizer/tmp.v"

            valid_f <=  1'b1;
 
`line 2801 "/tmp/lm32-customizer/tmp.v"
            
        else if (stall_f ==  1'b0)
            valid_f <=  1'b0;            

        if (kill_d ==  1'b1)
            valid_d <=  1'b0;
        else if (stall_f ==  1'b0)
            valid_d <= valid_f & !kill_f;
        else if (stall_d ==  1'b0)
            valid_d <=  1'b0;
       
        if (stall_d ==  1'b0)
            valid_x <= valid_d & !kill_d;
        else if (kill_x ==  1'b1)
            valid_x <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_x <=  1'b0;

        if (kill_m ==  1'b1)
            valid_m <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_m <= valid_x & !kill_x;
        else if (stall_m ==  1'b0)
            valid_m <=  1'b0;

        if (stall_m ==  1'b0)
            valid_w <= valid_m & !kill_m;
        else 
            valid_w <=  1'b0;        
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
  
                 

`line 2840 "/tmp/lm32-customizer/tmp.v"
        
        operand_0_x <= { 32{1'b0}};
        operand_1_x <= { 32{1'b0}};
        store_operand_x <= { 32{1'b0}};
        branch_target_x <= { (32-2){1'b0}};        
        x_result_sel_csr_x <=  1'b0;
  
          

`line 2848 "/tmp/lm32-customizer/tmp.v"

      
          

`line 2851 "/tmp/lm32-customizer/tmp.v"

  
`line 2852 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_sext_x <=  1'b0;
 
`line 2854 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_logic_x <=  1'b0;
  
          

`line 2858 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_add_x <=  1'b0;
        m_result_sel_compare_x <=  1'b0;
  
`line 2861 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_x <=  1'b0;
 
`line 2863 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_x <=  1'b0;
  
`line 2865 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_x <=  1'b0;
 
`line 2867 "/tmp/lm32-customizer/tmp.v"

        x_bypass_enable_x <=  1'b0;
        m_bypass_enable_x <=  1'b0;
        write_enable_x <=  1'b0;
        write_idx_x <= { 5{1'b0}};
        csr_x <= { 3{1'b0}};
        load_x <=  1'b0;
        store_x <=  1'b0;
        size_x <= { 2{1'b0}};
        sign_extend_x <=  1'b0;
        adder_op_x <=  1'b0;
        adder_op_x_n <=  1'b0;
        logic_op_x <= 4'h0;
  
`line 2880 "/tmp/lm32-customizer/tmp.v"

        direction_x <=  1'b0;
 
`line 2882 "/tmp/lm32-customizer/tmp.v"

  
          


`line 2886 "/tmp/lm32-customizer/tmp.v"

        branch_x <=  1'b0;
        branch_predict_x <=  1'b0;
        branch_predict_taken_x <=  1'b0;
        condition_x <=  3'b000;
  
          

`line 2893 "/tmp/lm32-customizer/tmp.v"

        scall_x <=  1'b0;
        eret_x <=  1'b0;
  
          

`line 2898 "/tmp/lm32-customizer/tmp.v"

  
          
          

`line 2902 "/tmp/lm32-customizer/tmp.v"

        csr_write_enable_x <=  1'b0;
        operand_m <= { 32{1'b0}};
        branch_target_m <= { (32-2){1'b0}};
        m_result_sel_compare_m <=  1'b0;
  
`line 2907 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_m <=  1'b0;
 
`line 2909 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_m <=  1'b0;
  
`line 2911 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_m <=  1'b0;
 
`line 2913 "/tmp/lm32-customizer/tmp.v"

        m_bypass_enable_m <=  1'b0;
        branch_m <=  1'b0;
        branch_predict_m <=  1'b0;
	branch_predict_taken_m <=  1'b0;
        exception_m <=  1'b0;
        load_m <=  1'b0;
        store_m <=  1'b0;
  
`line 2921 "/tmp/lm32-customizer/tmp.v"

        direction_m <=  1'b0;
 
`line 2923 "/tmp/lm32-customizer/tmp.v"

        write_enable_m <=  1'b0;            
        write_idx_m <= { 5{1'b0}};
        condition_met_m <=  1'b0;
  
          

`line 2929 "/tmp/lm32-customizer/tmp.v"

  
          
                  

`line 2933 "/tmp/lm32-customizer/tmp.v"

        operand_w <= { 32{1'b0}};        
        w_result_sel_load_w <=  1'b0;
  
`line 2936 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <=  1'b0;
 
`line 2938 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= { 5{1'b0}};        
        write_enable_w <=  1'b0;
  
          
                  

`line 2944 "/tmp/lm32-customizer/tmp.v"

        exception_w <=  1'b0;
 
`line 2946 "/tmp/lm32-customizer/tmp.v"

  
          

`line 2949 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        
       
        if (stall_x ==  1'b0)
        begin
  
                     

`line 2959 "/tmp/lm32-customizer/tmp.v"
        
            operand_0_x <= d_result_0;
            operand_1_x <= d_result_1;
            store_operand_x <= bypass_data_1;
            branch_target_x <= branch_reg_d ==  1'b1 ? bypass_data_0[ ((32-2)+2-1):2] : branch_target_d;            
            x_result_sel_csr_x <= x_result_sel_csr_d;
  
              

`line 2967 "/tmp/lm32-customizer/tmp.v"

      
              

`line 2970 "/tmp/lm32-customizer/tmp.v"

  
`line 2971 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_sext_x <= x_result_sel_sext_d;
 
`line 2973 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_logic_x <= x_result_sel_logic_d;
  
              

`line 2977 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_add_x <= x_result_sel_add_d;
            m_result_sel_compare_x <= m_result_sel_compare_d;
  
`line 2980 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_x <= m_result_sel_shift_d;
 
`line 2982 "/tmp/lm32-customizer/tmp.v"
    
            w_result_sel_load_x <= w_result_sel_load_d;
  
`line 2984 "/tmp/lm32-customizer/tmp.v"

            w_result_sel_mul_x <= w_result_sel_mul_d;
 
`line 2986 "/tmp/lm32-customizer/tmp.v"

            x_bypass_enable_x <= x_bypass_enable_d;
            m_bypass_enable_x <= m_bypass_enable_d;
            load_x <= load_d;
            store_x <= store_d;
            branch_x <= branch_d;
	    branch_predict_x <= branch_predict_d;
	    branch_predict_taken_x <= branch_predict_taken_d;
	    write_idx_x <= write_idx_d;
            csr_x <= csr_d;
            size_x <= size_d;
            sign_extend_x <= sign_extend_d;
            adder_op_x <= adder_op_d;
            adder_op_x_n <= ~adder_op_d;
            logic_op_x <= logic_op_d;
  
`line 3001 "/tmp/lm32-customizer/tmp.v"

            direction_x <= direction_d;
 
`line 3003 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3006 "/tmp/lm32-customizer/tmp.v"

            condition_x <= condition_d;
            csr_write_enable_x <= csr_write_enable_d;
  
              

`line 3011 "/tmp/lm32-customizer/tmp.v"

            scall_x <= scall_d;
  
              

`line 3015 "/tmp/lm32-customizer/tmp.v"

            eret_x <= eret_d;
  
               

`line 3019 "/tmp/lm32-customizer/tmp.v"

            write_enable_x <= write_enable_d;
        end
        
        

        if (stall_m ==  1'b0)
        begin
            operand_m <= x_result;
            m_result_sel_compare_m <= m_result_sel_compare_x;
  
`line 3029 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_m <= m_result_sel_shift_x;
 
`line 3031 "/tmp/lm32-customizer/tmp.v"
    
            if (exception_x ==  1'b1)
            begin
                w_result_sel_load_m <=  1'b0;
  
`line 3035 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <=  1'b0;
 
`line 3037 "/tmp/lm32-customizer/tmp.v"

            end
            else
            begin
                w_result_sel_load_m <= w_result_sel_load_x;
  
`line 3042 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <= w_result_sel_mul_x;
 
`line 3044 "/tmp/lm32-customizer/tmp.v"

            end
            m_bypass_enable_m <= m_bypass_enable_x;
  
`line 3047 "/tmp/lm32-customizer/tmp.v"

            direction_m <= direction_x;
 
`line 3049 "/tmp/lm32-customizer/tmp.v"

            load_m <= load_x;
            store_m <= store_x;
      
                

`line 3054 "/tmp/lm32-customizer/tmp.v"

            branch_m <= branch_x;
	    branch_predict_m <= branch_predict_x;
	    branch_predict_taken_m <= branch_predict_taken_x;
 
`line 3058 "/tmp/lm32-customizer/tmp.v"

  
	   
	   
	   
	   
	   
                
                  
                
                  
             
                  

`line 3071 "/tmp/lm32-customizer/tmp.v"

            if (exception_x ==  1'b1)
                write_idx_m <=  5'd30;
            else 
                write_idx_m <= write_idx_x;
 
`line 3076 "/tmp/lm32-customizer/tmp.v"

            condition_met_m <= condition_met_x;
  
	      
	        
		     
		        
	           
	     
	           
	   
	       

`line 3088 "/tmp/lm32-customizer/tmp.v"

            branch_target_m <= exception_x ==  1'b1 ? {eba, eid_x, {3{1'b0}}} : branch_target_x;
 
`line 3090 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3093 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3096 "/tmp/lm32-customizer/tmp.v"

            eret_m <= eret_q_x;
  
               

`line 3100 "/tmp/lm32-customizer/tmp.v"

            write_enable_m <= exception_x ==  1'b1 ?  1'b1 : write_enable_x;            
  
              
                      

`line 3105 "/tmp/lm32-customizer/tmp.v"

        end
        
        
        if (stall_m ==  1'b0)
        begin
            if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
                exception_m <=  1'b1;
            else 
                exception_m <=  1'b0;
  
	           
 
					    

					 

`line 3121 "/tmp/lm32-customizer/tmp.v"

	end
                
        
  
                      

`line 3127 "/tmp/lm32-customizer/tmp.v"

        operand_w <= exception_m ==  1'b1 ? {pc_m, 2'b00} : m_result;
 
`line 3129 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_load_w <= w_result_sel_load_m;
  
`line 3131 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <= w_result_sel_mul_m;
 
`line 3133 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= write_idx_m;
  
          
          
 
           


`line 3141 "/tmp/lm32-customizer/tmp.v"

        write_enable_w <= write_enable_m;
  
          
          

`line 3146 "/tmp/lm32-customizer/tmp.v"

        exception_w <= exception_m;
 
`line 3148 "/tmp/lm32-customizer/tmp.v"

  
              
                   
                   
               
	   
            

`line 3156 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 3160 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        use_buf <=  1'b0;
        reg_data_buf_0 <= { 32{1'b0}};
        reg_data_buf_1 <= { 32{1'b0}};
    end
    else
    begin
        if (stall_d ==  1'b0)
            use_buf <=  1'b0;
        else if (use_buf ==  1'b0)
        begin        
            reg_data_buf_0 <= reg_data_live_0;
            reg_data_buf_1 <= reg_data_live_1;
            use_buf <=  1'b1;
        end        
        if (reg_write_enable_q_w ==  1'b1)
        begin
            if (write_idx_w == read_idx_0_d)
                reg_data_buf_0 <= w_result;
            if (write_idx_w == read_idx_1_d)
                reg_data_buf_1 <= w_result;
        end
    end
end
 
`line 3190 "/tmp/lm32-customizer/tmp.v"


  
`line 3192 "/tmp/lm32-customizer/tmp.v"

 

   

        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
        
     
           
            
        


`line 3236 "/tmp/lm32-customizer/tmp.v"


  

   

       
    
          
          
          
          
          
 
          

          
    
    
    
          
        
 
               

           

                
              
              
              
              
        
        
              
        
             
        
            
                 
            
                
                  
                  
            
            
              
            
              
 
              

        
        
        
              
 
              

        
    


`line 3298 "/tmp/lm32-customizer/tmp.v"

      







initial
begin
  
`line 3309 "/tmp/lm32-customizer/tmp.v"

    reg_0.ram[0] = { 32{1'b0}};
    reg_1.ram[0] = { 32{1'b0}};
 
      

`line 3314 "/tmp/lm32-customizer/tmp.v"

end


        
endmodule 









































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_load_store_unit_medium (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_x,
    stall_m,
    kill_x,
    kill_m,
    exception_m,
    store_operand_x,
    load_store_address_x,
    load_store_address_m,
    load_store_address_w,
    load_x,
    store_x,
    load_q_x,
    store_q_x,
    load_q_m,
    store_q_m,
    sign_extend_x,
    size_x,
  
    

`line 3392 "/tmp/lm32-customizer/tmp.v"

  
    

`line 3395 "/tmp/lm32-customizer/tmp.v"

    
    d_dat_i,
    d_ack_i,
    d_err_i,
    d_rty_i,
    
    
  
    
    
    
    

`line 3408 "/tmp/lm32-customizer/tmp.v"
    
  
    
    
    
    

`line 3414 "/tmp/lm32-customizer/tmp.v"
			     
    load_data_w,
    stall_wb_load,
    
    d_dat_o,
    d_adr_o,
    d_cyc_o,
    d_sel_o,
    d_stb_o,
    d_we_o,
    d_cti_o,
    d_lock_o,
    d_bte_o
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          
input kill_x;                                           
input kill_m;                                           
input exception_m;                                      

input [ (32-1):0] store_operand_x;                 
input [ (32-1):0] load_store_address_x;            
input [ (32-1):0] load_store_address_m;            
input [1:0] load_store_address_w;                       
input load_x;                                           
input store_x;                                          
input load_q_x;                                         
input store_q_x;                                        
input load_q_m;                                         
input store_q_m;                                        
input sign_extend_x;                                    
input [ 1:0] size_x;                          

  
                                            

`line 3473 "/tmp/lm32-customizer/tmp.v"


     
                       

`line 3477 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] d_dat_i;                         
input d_ack_i;                                          
input d_err_i;                                          
input d_rty_i;                                          





  
                            
   
                           
   
                             
   
 
   

`line 3497 "/tmp/lm32-customizer/tmp.v"


     
                                
    
                  
    
                                       
   
                             
                               

`line 3508 "/tmp/lm32-customizer/tmp.v"

   
output [ (32-1):0] load_data_w;                    
reg    [ (32-1):0] load_data_w;
output stall_wb_load;                                   
reg    stall_wb_load;

output [ (32-1):0] d_dat_o;                        
reg    [ (32-1):0] d_dat_o;
output [ (32-1):0] d_adr_o;                        
reg    [ (32-1):0] d_adr_o;
output d_cyc_o;                                         
reg    d_cyc_o;
output [ (4-1):0] d_sel_o;                 
reg    [ (4-1):0] d_sel_o;
output d_stb_o;                                         
reg    d_stb_o; 
output d_we_o;                                          
reg    d_we_o;
output [ (3-1):0] d_cti_o;                       
reg    [ (3-1):0] d_cti_o;
output d_lock_o;                                        
reg    d_lock_o;
output [ (2-1):0] d_bte_o;                       
wire   [ (2-1):0] d_bte_o;






reg [ 1:0] size_m;
reg [ 1:0] size_w;
reg sign_extend_m;
reg sign_extend_w;
reg [ (32-1):0] store_data_x;       
reg [ (32-1):0] store_data_m;       
reg [ (4-1):0] byte_enable_x;
reg [ (4-1):0] byte_enable_m;
wire [ (32-1):0] data_m;
reg [ (32-1):0] data_w;

  
                                    
 
                      
              
                                 
                  
                   
                                          
                      

`line 3560 "/tmp/lm32-customizer/tmp.v"

  
                                      
 
                                      
                    
                      
                        
                  

`line 3569 "/tmp/lm32-customizer/tmp.v"

wire wb_select_x;                                       
  
                                      
  

`line 3574 "/tmp/lm32-customizer/tmp.v"

reg wb_select_m;
reg [ (32-1):0] wb_data_m;                         
reg wb_load_complete;                                   





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






  
   
    
     
       
                    

       
       
       
       
       
       
	
              
              
              
              
              
              

                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	    
	                   
	                   
	                        
	                           
	    
	                         
	                         
	    
   
   
               
              
              
    
      
        
       
	    
	    
       
     
       
	     
	      
	  
	         
                 
	         
	            
	             
		 
	         
	     
	      
	  
	          
		   
	       
	        
       
   
          

`line 3671 "/tmp/lm32-customizer/tmp.v"


  

 
              
                       
             
               
                      
       
    
                      
                            
                    
                    
                    
                  
                  
                     
                    
                 
            
               
                
                     
    
              
            
             
             
                  
                  
    

`line 3705 "/tmp/lm32-customizer/tmp.v"







  
            
                             

`line 3715 "/tmp/lm32-customizer/tmp.v"


  
            
                             

`line 3720 "/tmp/lm32-customizer/tmp.v"

   
  
            
                               
 
                               

 
                               

                     

`line 3732 "/tmp/lm32-customizer/tmp.v"

	  
   assign wb_select_x =     1'b1
  
                          

`line 3737 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3740 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3743 "/tmp/lm32-customizer/tmp.v"

                     ;


always @(*)
begin
    case (size_x)
     2'b00:  store_data_x = {4{store_operand_x[7:0]}};
     2'b11: store_data_x = {2{store_operand_x[15:0]}};
     2'b10:  store_data_x = store_operand_x;    
    default:          store_data_x = { 32{1'bx}};
    endcase
end


always @(*)
begin
    casez ({size_x, load_store_address_x[1:0]})
    { 2'b00, 2'b11}:  byte_enable_x = 4'b0001;
    { 2'b00, 2'b10}:  byte_enable_x = 4'b0010;
    { 2'b00, 2'b01}:  byte_enable_x = 4'b0100;
    { 2'b00, 2'b00}:  byte_enable_x = 4'b1000;
    { 2'b11, 2'b1?}: byte_enable_x = 4'b0011;
    { 2'b11, 2'b0?}: byte_enable_x = 4'b1100;
    { 2'b10, 2'b??}:  byte_enable_x = 4'b1111;
    default:                   byte_enable_x = 4'bxxxx;
    endcase
end

  

       
       
       
       

`line 3778 "/tmp/lm32-customizer/tmp.v"


  

       
       
       
       

`line 3786 "/tmp/lm32-customizer/tmp.v"


  
   
   
   
   
            
	                     
	                     
   
   
           
	                  
   
   
   
   
   
           
	                            

`line 3807 "/tmp/lm32-customizer/tmp.v"

   
  
  
   
   
         
                    
                       
                      
                        
                         
                        
  
   
         
                    
                       
                      
                      
  
 
   
   
         
                    
                       
                      
                      
  
   
         
                     
                    
  
 

`line 3843 "/tmp/lm32-customizer/tmp.v"

   
   
   
         
                     
                      
                      
                      
  
   
         
                     
                    
  
 
`line 3858 "/tmp/lm32-customizer/tmp.v"

    
   
         
                     
                    
  
`line 3864 "/tmp/lm32-customizer/tmp.v"

   
   assign data_m = wb_data_m;
   
`line 3867 "/tmp/lm32-customizer/tmp.v"

  
`line 3868 "/tmp/lm32-customizer/tmp.v"

 
`line 3869 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    casez ({size_w, load_store_address_w[1:0]})
    { 2'b00, 2'b11}:  load_data_w = {{24{sign_extend_w & data_w[7]}}, data_w[7:0]};
    { 2'b00, 2'b10}:  load_data_w = {{24{sign_extend_w & data_w[15]}}, data_w[15:8]};
    { 2'b00, 2'b01}:  load_data_w = {{24{sign_extend_w & data_w[23]}}, data_w[23:16]};
    { 2'b00, 2'b00}:  load_data_w = {{24{sign_extend_w & data_w[31]}}, data_w[31:24]};
    { 2'b11, 2'b1?}: load_data_w = {{16{sign_extend_w & data_w[15]}}, data_w[15:0]};
    { 2'b11, 2'b0?}: load_data_w = {{16{sign_extend_w & data_w[31]}}, data_w[31:16]};
    { 2'b10, 2'b??}:  load_data_w = data_w;
    default:                   load_data_w = { 32{1'bx}};
    endcase
end


assign d_bte_o =  2'b00;

                  

 
     
    
    
   
   
   
    
    
    
    
   
   
     
     
    
    
    
   
         
     
     
    
    


`line 3916 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        d_cyc_o <=  1'b0;
        d_stb_o <=  1'b0;
        d_dat_o <= { 32{1'b0}};
        d_adr_o <= { 32{1'b0}};
        d_sel_o <= { 4{ 1'b0}};
        d_we_o <=  1'b0;
        d_cti_o <=  3'b111;
        d_lock_o <=  1'b0;
        wb_data_m <= { 32{1'b0}};
        wb_load_complete <=  1'b0;
        stall_wb_load <=  1'b0;
                  
          

`line 3940 "/tmp/lm32-customizer/tmp.v"
                
    end
    else
    begin
   
        
          

`line 3947 "/tmp/lm32-customizer/tmp.v"
                
        
        if (d_cyc_o ==  1'b1)
        begin
            
            if ((d_ack_i ==  1'b1) || (d_err_i ==  1'b1))
            begin
                  
                     
                
                    
                        
                
                

`line 3961 "/tmp/lm32-customizer/tmp.v"
                
                begin
                    
                    d_cyc_o <=  1'b0;
                    d_stb_o <=  1'b0;
                    d_lock_o <=  1'b0;
                end
      
                  
                
                  

`line 3972 "/tmp/lm32-customizer/tmp.v"

                
                wb_data_m <= d_dat_i;
                
                wb_load_complete <= !d_we_o;
            end
            
            if (d_err_i ==  1'b1)
                $display ("Data bus error. Address: %x", d_adr_o);
            
        end
        else
        begin
                  
               
            
                
                  
                  
                  
                                  
                  
                  
                
            
             

`line 3998 "/tmp/lm32-customizer/tmp.v"
            
                 if (   (store_q_m ==  1'b1)
                     && (stall_m ==  1'b0)
  
                        

`line 4003 "/tmp/lm32-customizer/tmp.v"

  
		        

`line 4006 "/tmp/lm32-customizer/tmp.v"
			
                    )
            begin
                
                d_dat_o <= store_data_m;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b1;
                d_cti_o <=  3'b111;
            end        
            else if (   (load_q_m ==  1'b1) 
                     && (wb_select_m ==  1'b1) 
                     && (wb_load_complete ==  1'b0)
                     
                    )
            begin
                
                stall_wb_load <=  1'b0;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b0;
                d_cti_o <=  3'b111;
            end
        end
        
        if (stall_m ==  1'b0)
            wb_load_complete <=  1'b0;
        
        if ((load_q_x ==  1'b1) && (wb_select_x ==  1'b1) && (stall_x ==  1'b0))
            stall_wb_load <=  1'b1;
        
        if ((kill_m ==  1'b1) || (exception_m ==  1'b1))
            stall_wb_load <=  1'b0;
    end
end




always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        sign_extend_m <=  1'b0;
        size_m <= 2'b00;
        byte_enable_m <=  1'b0;
        store_data_m <= { 32{1'b0}};
  
          

`line 4059 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4062 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4065 "/tmp/lm32-customizer/tmp.v"

        wb_select_m <=  1'b0;        
    end
    else
    begin
        if (stall_m ==  1'b0)
        begin
            sign_extend_m <= sign_extend_x;
            size_m <= size_x;
            byte_enable_m <= byte_enable_x;    
            store_data_m <= store_data_x;
  
              

`line 4078 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4081 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4084 "/tmp/lm32-customizer/tmp.v"

            wb_select_m <= wb_select_x;
        end
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        size_w <= 2'b00;
        data_w <= { 32{1'b0}};
        sign_extend_w <=  1'b0;
    end
    else
    begin
        size_w <= size_m;
        data_w <= data_m;
        sign_extend_w <= sign_extend_m;
    end
end








always @(posedge clk_i)
begin
    if (((load_q_m ==  1'b1) || (store_q_m ==  1'b1)) && (stall_m ==  1'b0)) 
    begin
        if ((size_m ===  2'b11) && (load_store_address_m[0] !== 1'b0))
            $display ("Warning: Non-aligned halfword access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
        if ((size_m ===  2'b10) && (load_store_address_m[1:0] !== 2'b00))
            $display ("Warning: Non-aligned word access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
    end
end



endmodule


































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"



  
`line 4165 "/tmp/lm32-customizer/tmp.v"

  
`line 4166 "/tmp/lm32-customizer/tmp.v"



  
`line 4169 "/tmp/lm32-customizer/tmp.v"

  
`line 4170 "/tmp/lm32-customizer/tmp.v"

  
`line 4171 "/tmp/lm32-customizer/tmp.v"

  
`line 4172 "/tmp/lm32-customizer/tmp.v"

  
`line 4173 "/tmp/lm32-customizer/tmp.v"

  
`line 4174 "/tmp/lm32-customizer/tmp.v"

  
`line 4175 "/tmp/lm32-customizer/tmp.v"

  
`line 4176 "/tmp/lm32-customizer/tmp.v"

  
`line 4177 "/tmp/lm32-customizer/tmp.v"

  
`line 4178 "/tmp/lm32-customizer/tmp.v"

  
`line 4179 "/tmp/lm32-customizer/tmp.v"

  
`line 4180 "/tmp/lm32-customizer/tmp.v"

  
`line 4181 "/tmp/lm32-customizer/tmp.v"

  
`line 4182 "/tmp/lm32-customizer/tmp.v"

  
`line 4183 "/tmp/lm32-customizer/tmp.v"

  
`line 4184 "/tmp/lm32-customizer/tmp.v"

  
`line 4185 "/tmp/lm32-customizer/tmp.v"

  
`line 4186 "/tmp/lm32-customizer/tmp.v"

  
`line 4187 "/tmp/lm32-customizer/tmp.v"

  
`line 4188 "/tmp/lm32-customizer/tmp.v"

  
`line 4189 "/tmp/lm32-customizer/tmp.v"

  
`line 4190 "/tmp/lm32-customizer/tmp.v"

  
`line 4191 "/tmp/lm32-customizer/tmp.v"

  
`line 4192 "/tmp/lm32-customizer/tmp.v"

  
`line 4193 "/tmp/lm32-customizer/tmp.v"

  
`line 4194 "/tmp/lm32-customizer/tmp.v"

  
`line 4195 "/tmp/lm32-customizer/tmp.v"

  
`line 4196 "/tmp/lm32-customizer/tmp.v"

  
`line 4197 "/tmp/lm32-customizer/tmp.v"

  
`line 4198 "/tmp/lm32-customizer/tmp.v"

  
`line 4199 "/tmp/lm32-customizer/tmp.v"

  
`line 4200 "/tmp/lm32-customizer/tmp.v"

  
`line 4201 "/tmp/lm32-customizer/tmp.v"

  
`line 4202 "/tmp/lm32-customizer/tmp.v"

  
`line 4203 "/tmp/lm32-customizer/tmp.v"

  
`line 4204 "/tmp/lm32-customizer/tmp.v"

  
`line 4205 "/tmp/lm32-customizer/tmp.v"

  
`line 4206 "/tmp/lm32-customizer/tmp.v"

  
`line 4207 "/tmp/lm32-customizer/tmp.v"

  
`line 4208 "/tmp/lm32-customizer/tmp.v"

  
`line 4209 "/tmp/lm32-customizer/tmp.v"

  
`line 4210 "/tmp/lm32-customizer/tmp.v"

  
`line 4211 "/tmp/lm32-customizer/tmp.v"

  
`line 4212 "/tmp/lm32-customizer/tmp.v"

  
`line 4213 "/tmp/lm32-customizer/tmp.v"






module lm32_decoder_medium (
    
    instruction,
    
    d_result_sel_0,
    d_result_sel_1,        
    x_result_sel_csr,
  
    

`line 4228 "/tmp/lm32-customizer/tmp.v"
    
      
    

`line 4231 "/tmp/lm32-customizer/tmp.v"

  
`line 4232 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext,
 
`line 4234 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_logic,
  
    

`line 4238 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add,
    m_result_sel_compare,
  
`line 4241 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift,  
 
`line 4243 "/tmp/lm32-customizer/tmp.v"
    
    w_result_sel_load,
  
`line 4245 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul,
 
`line 4247 "/tmp/lm32-customizer/tmp.v"

    x_bypass_enable,
    m_bypass_enable,
    read_enable_0,
    read_idx_0,
    read_enable_1,
    read_idx_1,
    write_enable,
    write_idx,
    immediate,
    branch_offset,
    load,
    store,
    size,
    sign_extend,
    adder_op,
    logic_op,
  
`line 4264 "/tmp/lm32-customizer/tmp.v"

    direction,
 
`line 4266 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4270 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4273 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4277 "/tmp/lm32-customizer/tmp.v"

    branch,
    branch_reg,
    condition,
    bi_conditional,
    bi_unconditional,
  
    

`line 4285 "/tmp/lm32-customizer/tmp.v"

    scall,
    eret,
  
    

`line 4290 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4293 "/tmp/lm32-customizer/tmp.v"

    csr_write_enable
    );





input [ (32-1):0] instruction;       





output [ 0:0] d_result_sel_0;
reg    [ 0:0] d_result_sel_0;
output [ 1:0] d_result_sel_1;
reg    [ 1:0] d_result_sel_1;
output x_result_sel_csr;
reg    x_result_sel_csr;
  
 
    

`line 4316 "/tmp/lm32-customizer/tmp.v"

      
 
    

`line 4320 "/tmp/lm32-customizer/tmp.v"

  
`line 4321 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_sext;
reg    x_result_sel_sext;
 
`line 4324 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_logic;
reg    x_result_sel_logic;
  
 
    

`line 4330 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_add;
reg    x_result_sel_add;
output m_result_sel_compare;
reg    m_result_sel_compare;
  
`line 4335 "/tmp/lm32-customizer/tmp.v"

output m_result_sel_shift;
reg    m_result_sel_shift;
 
`line 4338 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_load;
reg    w_result_sel_load;
  
`line 4341 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_mul;
reg    w_result_sel_mul;
 
`line 4344 "/tmp/lm32-customizer/tmp.v"

output x_bypass_enable;
wire   x_bypass_enable;
output m_bypass_enable;
wire   m_bypass_enable;
output read_enable_0;
wire   read_enable_0;
output [ (5-1):0] read_idx_0;
wire   [ (5-1):0] read_idx_0;
output read_enable_1;
wire   read_enable_1;
output [ (5-1):0] read_idx_1;
wire   [ (5-1):0] read_idx_1;
output write_enable;
wire   write_enable;
output [ (5-1):0] write_idx;
wire   [ (5-1):0] write_idx;
output [ (32-1):0] immediate;
wire   [ (32-1):0] immediate;
output [ ((32-2)+2-1):2] branch_offset;
wire   [ ((32-2)+2-1):2] branch_offset;
output load;
wire   load;
output store;
wire   store;
output [ 1:0] size;
wire   [ 1:0] size;
output sign_extend;
wire   sign_extend;
output adder_op;
wire   adder_op;
output [ 3:0] logic_op;
wire   [ 3:0] logic_op;
  
`line 4377 "/tmp/lm32-customizer/tmp.v"

output direction;
wire   direction;
 
`line 4380 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4386 "/tmp/lm32-customizer/tmp.v"

  
 
   

`line 4390 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4396 "/tmp/lm32-customizer/tmp.v"

output branch;
wire   branch;
output branch_reg;
wire   branch_reg;
output [ (3-1):0] condition;
wire   [ (3-1):0] condition;
output bi_conditional;
wire bi_conditional;
output bi_unconditional;
wire bi_unconditional;
  
 
   

`line 4410 "/tmp/lm32-customizer/tmp.v"

output scall;
wire   scall;
output eret;
wire   eret;
  
 
   

`line 4418 "/tmp/lm32-customizer/tmp.v"

  
  
    

`line 4422 "/tmp/lm32-customizer/tmp.v"

output csr_write_enable;
wire   csr_write_enable;





wire [ (32-1):0] extended_immediate;       
wire [ (32-1):0] high_immediate;           
wire [ (32-1):0] call_immediate;           
wire [ (32-1):0] branch_immediate;         
wire sign_extend_immediate;                     
wire select_high_immediate;                     
wire select_call_immediate;                     





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







assign op_add    = instruction[ 30:26] ==  5'b01101;
assign op_and    = instruction[ 30:26] ==  5'b01000;
assign op_andhi  = instruction[ 31:26] ==  6'b011000;
assign op_b      = instruction[ 31:26] ==  6'b110000;
assign op_bi     = instruction[ 31:26] ==  6'b111000;
assign op_be     = instruction[ 31:26] ==  6'b010001;
assign op_bg     = instruction[ 31:26] ==  6'b010010;
assign op_bge    = instruction[ 31:26] ==  6'b010011;
assign op_bgeu   = instruction[ 31:26] ==  6'b010100;
assign op_bgu    = instruction[ 31:26] ==  6'b010101;
assign op_bne    = instruction[ 31:26] ==  6'b010111;
assign op_call   = instruction[ 31:26] ==  6'b110110;
assign op_calli  = instruction[ 31:26] ==  6'b111110;
assign op_cmpe   = instruction[ 30:26] ==  5'b11001;
assign op_cmpg   = instruction[ 30:26] ==  5'b11010;
assign op_cmpge  = instruction[ 30:26] ==  5'b11011;
assign op_cmpgeu = instruction[ 30:26] ==  5'b11100;
assign op_cmpgu  = instruction[ 30:26] ==  5'b11101;
assign op_cmpne  = instruction[ 30:26] ==  5'b11111;
  
       

`line 4470 "/tmp/lm32-customizer/tmp.v"

assign op_lb     = instruction[ 31:26] ==  6'b000100;
assign op_lbu    = instruction[ 31:26] ==  6'b010000;
assign op_lh     = instruction[ 31:26] ==  6'b000111;
assign op_lhu    = instruction[ 31:26] ==  6'b001011;
assign op_lw     = instruction[ 31:26] ==  6'b001010;
  
       

`line 4478 "/tmp/lm32-customizer/tmp.v"

  
`line 4479 "/tmp/lm32-customizer/tmp.v"

assign op_mul    = instruction[ 30:26] ==  5'b00010;
 
`line 4481 "/tmp/lm32-customizer/tmp.v"

assign op_nor    = instruction[ 30:26] ==  5'b00001;
assign op_or     = instruction[ 30:26] ==  5'b01110;
assign op_orhi   = instruction[ 31:26] ==  6'b011110;
assign op_raise  = instruction[ 31:26] ==  6'b101011;
assign op_rcsr   = instruction[ 31:26] ==  6'b100100;
assign op_sb     = instruction[ 31:26] ==  6'b001100;
  
`line 4488 "/tmp/lm32-customizer/tmp.v"

assign op_sextb  = instruction[ 31:26] ==  6'b101100;
assign op_sexth  = instruction[ 31:26] ==  6'b110111;
 
`line 4491 "/tmp/lm32-customizer/tmp.v"

assign op_sh     = instruction[ 31:26] ==  6'b000011;
  
`line 4493 "/tmp/lm32-customizer/tmp.v"

assign op_sl     = instruction[ 30:26] ==  5'b01111;      
 
`line 4495 "/tmp/lm32-customizer/tmp.v"

assign op_sr     = instruction[ 30:26] ==  5'b00101;
assign op_sru    = instruction[ 30:26] ==  5'b00000;
assign op_sub    = instruction[ 31:26] ==  6'b110010;
assign op_sw     = instruction[ 31:26] ==  6'b010110;
assign op_user   = instruction[ 31:26] ==  6'b110011;
assign op_wcsr   = instruction[ 31:26] ==  6'b110100;
assign op_xnor   = instruction[ 30:26] ==  5'b01001;
assign op_xor    = instruction[ 30:26] ==  5'b00110;


assign arith = op_add | op_sub;
assign logical = op_and | op_andhi | op_nor | op_or | op_orhi | op_xor | op_xnor;
assign cmp = op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne;
assign bi_conditional = op_be | op_bg | op_bge | op_bgeu  | op_bgu | op_bne;
assign bi_unconditional = op_bi;
assign bra = op_b | bi_unconditional | bi_conditional;
assign call = op_call | op_calli;
  
`line 4513 "/tmp/lm32-customizer/tmp.v"

assign shift = op_sl | op_sr | op_sru;
 
`line 4515 "/tmp/lm32-customizer/tmp.v"

  
     

`line 4518 "/tmp/lm32-customizer/tmp.v"

  
   
     

`line 4522 "/tmp/lm32-customizer/tmp.v"

  
`line 4523 "/tmp/lm32-customizer/tmp.v"

assign sext = op_sextb | op_sexth;
 
`line 4525 "/tmp/lm32-customizer/tmp.v"

  
`line 4526 "/tmp/lm32-customizer/tmp.v"

assign multiply = op_mul;
 
`line 4528 "/tmp/lm32-customizer/tmp.v"

  
    
   

`line 4532 "/tmp/lm32-customizer/tmp.v"

assign load = op_lb | op_lbu | op_lh | op_lhu | op_lw;
assign store = op_sb | op_sh | op_sw;


always @(*)
begin
    
    if (call) 
        d_result_sel_0 =  1'b1;
    else 
        d_result_sel_0 =  1'b0;
    if (call) 
        d_result_sel_1 =  2'b00;         
    else if ((instruction[31] == 1'b0) && !bra) 
        d_result_sel_1 =  2'b10;
    else
        d_result_sel_1 =  2'b01; 
    
    x_result_sel_csr =  1'b0;
  
      

`line 4554 "/tmp/lm32-customizer/tmp.v"

  
      

`line 4557 "/tmp/lm32-customizer/tmp.v"

  
`line 4558 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext =  1'b0;
 
`line 4560 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_logic =  1'b0;
          
      

`line 4564 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add =  1'b0;
    if (op_rcsr)
        x_result_sel_csr =  1'b1;
      
 
         
          

 
        
                  

 
      
                      


`line 4581 "/tmp/lm32-customizer/tmp.v"

  
      
                  

`line 4585 "/tmp/lm32-customizer/tmp.v"

  
`line 4586 "/tmp/lm32-customizer/tmp.v"

    else if (sext)
        x_result_sel_sext =  1'b1;
 
`line 4589 "/tmp/lm32-customizer/tmp.v"
        
    else if (logical) 
        x_result_sel_logic =  1'b1;
          
      
          

`line 4595 "/tmp/lm32-customizer/tmp.v"

    else 
        x_result_sel_add =  1'b1;        
    
    

    m_result_sel_compare = cmp;
  
`line 4602 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift = shift;
 
`line 4604 "/tmp/lm32-customizer/tmp.v"


    
    w_result_sel_load = load;
  
`line 4608 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul = op_mul; 
 
`line 4610 "/tmp/lm32-customizer/tmp.v"

end


assign x_bypass_enable =  arith 
                        | logical
  
                         
                         

`line 4619 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4622 "/tmp/lm32-customizer/tmp.v"

  
                         
                         

`line 4626 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 4629 "/tmp/lm32-customizer/tmp.v"
                  
  
`line 4630 "/tmp/lm32-customizer/tmp.v"

                        | sext 
 
`line 4632 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4635 "/tmp/lm32-customizer/tmp.v"

                        | op_rcsr
                        ;

assign m_bypass_enable = x_bypass_enable 
  
`line 4640 "/tmp/lm32-customizer/tmp.v"

                        | shift
 
`line 4642 "/tmp/lm32-customizer/tmp.v"

                        | cmp
                        ;

assign read_enable_0 = ~(op_bi | op_calli);
assign read_idx_0 = instruction[25:21];

assign read_enable_1 = ~(op_bi | op_calli | load);
assign read_idx_1 = instruction[20:16];

assign write_enable = ~(bra | op_raise | store | op_wcsr);
assign write_idx = call
                    ? 5'd29
                    : instruction[31] == 1'b0 
                        ? instruction[20:16] 
                        : instruction[15:11];
                        

assign size = instruction[27:26];

assign sign_extend = instruction[28];                      

assign adder_op = op_sub | op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne | bra;

assign logic_op = instruction[29:26];
  
`line 4667 "/tmp/lm32-customizer/tmp.v"


assign direction = instruction[29];
 
`line 4670 "/tmp/lm32-customizer/tmp.v"


assign branch = bra | call;
assign branch_reg = op_call | op_b;
assign condition = instruction[28:26];      
  
     

`line 4677 "/tmp/lm32-customizer/tmp.v"

assign scall = op_raise & instruction[2];
assign eret = op_b & (instruction[25:21] == 5'd30);
  
       

`line 4682 "/tmp/lm32-customizer/tmp.v"

  

   

`line 4686 "/tmp/lm32-customizer/tmp.v"


assign csr_write_enable = op_wcsr;



assign sign_extend_immediate = ~(op_and | op_cmpgeu | op_cmpgu | op_nor | op_or | op_xnor | op_xor);
assign select_high_immediate = op_andhi | op_orhi;
assign select_call_immediate = instruction[31];

assign high_immediate = {instruction[15:0], 16'h0000};
assign extended_immediate = {{16{sign_extend_immediate & instruction[15]}}, instruction[15:0]};
assign call_immediate = {{6{instruction[25]}}, instruction[25:0]};
assign branch_immediate = {{16{instruction[15]}}, instruction[15:0]};

assign immediate = select_high_immediate ==  1'b1 
                        ? high_immediate 
                        : extended_immediate;
   
assign branch_offset = select_call_immediate ==  1'b1   
                        ? call_immediate
                        : branch_immediate;
    
endmodule 



































					  
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

           
              
              
              

           
             
           
             

                
                  
              
            

                 
          
               
               
              





   
    
    
        
    
    
    
    
    
    
    
    
 
    

    
    
    
    
    
    
    
    
    
    





                               
                                      
                             
                                
                                       

   
   
   
   
   
   
   
   
   





                                         
                                         

                                       
                                       

                                       
                        
   
                       
                       
                                 

                                  
            

                                        
 
                                      

   




                                
   
                              
    
                               
   
                 
                    
                                    
    
                  
    





 
  
  
  
  
  
 

  
  
  
  
  

  
 
 
 

  
  
 
  

 





 





   
                 
	  
	   
	    
	     
	       
	                        
	                     

 
	    
	     
	      
	                         
	                        
	                            
	                     
	                      
	                    
	                     
	                     
	                           
	      
	                        
	      
	   
	    
	     
	       
	                        
	                     

	        
	    
	     
	      
	                         
	                        
	                            
	                     
	                      
	                    
	                     
	                       
	                       
	      
	                         
	      
	   
	








               
      
       
    




       
      
       
    
        
	   
           
    



 
       
    
    
   

    
   


   
    
                                 
                                 


 
                                   
     
    
   



     



        
           
     
    
    
      
         
         
    
                     


     
   


   
   
   

               
     
     
                      






        
            
   

       
           
    
            
           
               
    

    



   

       
          
    
          



   

       
    
          
          
          
          
    
     
    
         

        
        
                    
               
                  
                
        

        
        
                    
               
 
	       
                  
	      

		  
	   
                
        
        
        
        
                    
               
                  
               
            
                  
                  
            
                
            
                  
                  
            
        

        
        
                    
               
            
                   
                
                      
                      
                
            
        

                
    


 
       
    

   

       
          
     
    
         
        
        
        
                    
               
                  
                
                  
        

        
        
                    
               
                    
        

                
    

    

   



`line 5169 "/tmp/lm32-customizer/tmp.v"































								 
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

           
              
              
              

           
             
           
             

                
                  
              
            

                 
               
               
              





   
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    





                               
                                      
                             
                                
                                       

   
   
   
   
   
   
   
   
   





                                             
                                             

                                           
                                           
                                           

                         
                         
                                          
                                         
                        
          

                                      
                       

                                            





                                    
   
                                  
    
                                   
    
                   
     
                                        
    
                        
    





                                   
                                  
                     
                     
        
  
                       
                       
                                               

          
         
          
         
                 
                     

                           
                                           
                                              
                                             

                                        
                
             
                                        
                   

  





 





   
                     
	  
	   
              
               
		 
		  
		    
		     
		     

		      
		    
		     
		      
		      
		      
		      
		      
		      
		      
		      
		          
		     
		      
		         
             
           
             
		               
		    
		      
		       
			 
			  
			  

			   
			 
			  
			   
			   
			   
			   
			   
			   
			   
			       
			       
			  
			   
			  
		  
             
	   
	   
	    
	     
	       
	        
	        

	         
	       
		
		 
		 
		 
		 
		 
		 
		 
		 
		 
		
		  
		
	
      
   







               
      
       
    




           
	   
   
    
        
	   
        
    



       
    

 

       
          
    
    
              
              
              
              
    

    
    
    

 

       
          
    
          

    



 
        
      
                              
                             
    
      
                             
                             

   

     
                             
                             
   


 
                                   
     
    
   



     
       


         



        
           
             
         
     
     
      
                 
                 
             
             
    



             
   


   
   
   

           
     
                      






        
            
   

       
           
    
            
           
               
    

     
   


   

       
          
     
          



   

       
    
          
          
          
          
          
    
     
    
         

        
        
        
               
                  
                
        
        
        
        
        
               
                  
               
            
                  
                  
                  
            
                
                  
        

        
        
        
              
               
            
                   
                
                      
                      
                
            
        
        
                
    



       
    

   

       
          
     
    
         
        
        
        
        
               
                  
        

        
        
        
               
                    
        
        
                
    

    





`line 5675 "/tmp/lm32-customizer/tmp.v"

































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  


                  
                 
         
     
     
              





  
    
     
    
    
    
    
    
    
    
    
 
    
    
    

 
    
    
    
    
    
 
    


    
 
    

    
    
    
    
    




                         
                         





                                     
                                     

                        
                                    
                                   
      
                        
            
                      
 
                     
       
                   

 
                                  
                                  
                                   
                               
                                       
 
                     







 
                                    
    

                                    
    
                                 
           
                                 
   





                                        



         
                       
                

     
         
                

                     
       
                   

 

             







 







               
      
         
    

 
 
        
       
    
     

        
   
    
   

    
               

 
               
      
             
                   


        
                   
    
   

                
                 

         
         
         

   
   
   








               
      
   

       
    
          
          
    
    
    
                 
        
              
              
        
    
    
    




               
      
   

       
    
          
          
    
    
    
           
        
               
                  
                 
                  
        
      

    



   

       
          
    
    
               
              
    
    

 

   

       
    
          
          
    
    
    
               
        
              
                
                  
             
                  
        
         
        
        
            
                     
                       
                    
                   
               
                   
        
        
        
            
                   
                  
        
        
        
            
 
               
                  
             

                            
            
                  
                  
            
        
        
        
            
 
               
                  
             

                  
        
        
    






`line 6024 "/tmp/lm32-customizer/tmp.v"















































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_instruction_unit_medium (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_f,
    stall_d,
    stall_x,
    stall_m,
    valid_f,
    valid_d,
    kill_f,
    branch_predict_taken_d,
    branch_predict_address_d,
      
    
    

`line 6095 "/tmp/lm32-customizer/tmp.v"

    exception_m,
    branch_taken_m,
    branch_mispredict_taken_m,
    branch_target_m,
  
    

`line 6102 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 6107 "/tmp/lm32-customizer/tmp.v"
        
  
    
    
    

`line 6112 "/tmp/lm32-customizer/tmp.v"

  
`line 6113 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_i,
    i_ack_i,
    i_err_i,
    i_rty_i,
 
`line 6119 "/tmp/lm32-customizer/tmp.v"

  
    
    
    
    

`line 6125 "/tmp/lm32-customizer/tmp.v"

    
    
    pc_f,
    pc_d,
    pc_x,
    pc_m,
    pc_w,
  
    
    
    
    

`line 6138 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6141 "/tmp/lm32-customizer/tmp.v"

  
`line 6142 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_o,
    i_adr_o,
    i_cyc_o,
    i_sel_o,
    i_stb_o,
    i_we_o,
    i_cti_o,
    i_lock_o,
    i_bte_o,
 
`line 6153 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 6157 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6160 "/tmp/lm32-customizer/tmp.v"

  
`line 6161 "/tmp/lm32-customizer/tmp.v"

    instruction_f,
 
`line 6163 "/tmp/lm32-customizer/tmp.v"
    
    instruction_d
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_f;                                          
input stall_d;                                          
input stall_x;                                          
input stall_m;                                          
input valid_f;                                          
input valid_d;                                          
input kill_f;                                           

input branch_predict_taken_d;                           
input [ ((32-2)+2-1):2] branch_predict_address_d;          
   
      
                                    
                     

`line 6204 "/tmp/lm32-customizer/tmp.v"

input exception_m;
input branch_taken_m;                                   
input branch_mispredict_taken_m;                        
input [ ((32-2)+2-1):2] branch_target_m;                   

  
                                            

`line 6212 "/tmp/lm32-customizer/tmp.v"

  
                            
                             
 

`line 6217 "/tmp/lm32-customizer/tmp.v"
        

  
                 
                   
                                        

`line 6223 "/tmp/lm32-customizer/tmp.v"


  
`line 6225 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] i_dat_i;                         
input i_ack_i;                                          
input i_err_i;                                          
input i_rty_i;                                          
 
`line 6230 "/tmp/lm32-customizer/tmp.v"


  
                                  
                                 
                   
                      

`line 6237 "/tmp/lm32-customizer/tmp.v"





        
output [ ((32-2)+2-1):2] pc_f;                             
reg    [ ((32-2)+2-1):2] pc_f;
output [ ((32-2)+2-1):2] pc_d;                             
reg    [ ((32-2)+2-1):2] pc_d;
output [ ((32-2)+2-1):2] pc_x;                             
reg    [ ((32-2)+2-1):2] pc_x;
output [ ((32-2)+2-1):2] pc_m;                             
reg    [ ((32-2)+2-1):2] pc_m;
output [ ((32-2)+2-1):2] pc_w;                             
reg    [ ((32-2)+2-1):2] pc_w;

  
                             
   
                           
   
                            
   
                                 
   

`line 6263 "/tmp/lm32-customizer/tmp.v"


  
                      
                          

`line 6268 "/tmp/lm32-customizer/tmp.v"
   

  
`line 6270 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_dat_o;                        
  
     

`line 6274 "/tmp/lm32-customizer/tmp.v"

wire   [ (32-1):0] i_dat_o;
 
`line 6276 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_adr_o;                        
reg    [ (32-1):0] i_adr_o;
output i_cyc_o;                                         
reg    i_cyc_o; 
output [ (4-1):0] i_sel_o;                 
  
     

`line 6284 "/tmp/lm32-customizer/tmp.v"

wire   [ (4-1):0] i_sel_o;
 
`line 6286 "/tmp/lm32-customizer/tmp.v"

output i_stb_o;                                         
reg    i_stb_o;
output i_we_o;                                          
  
    

`line 6292 "/tmp/lm32-customizer/tmp.v"

wire   i_we_o;
 
`line 6294 "/tmp/lm32-customizer/tmp.v"

output [ (3-1):0] i_cti_o;                       
reg    [ (3-1):0] i_cti_o;
output i_lock_o;                                        
reg    i_lock_o;
output [ (2-1):0] i_bte_o;                       
wire   [ (2-1):0] i_bte_o;
 
`line 6301 "/tmp/lm32-customizer/tmp.v"


  
                   
     
                             
   

`line 6308 "/tmp/lm32-customizer/tmp.v"


  
                                      
    

`line 6313 "/tmp/lm32-customizer/tmp.v"

  
`line 6314 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_f;           
wire   [ (32-1):0] instruction_f;
 
`line 6317 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_d;           
reg    [ (32-1):0] instruction_d;





reg [ ((32-2)+2-1):2] pc_a;                                

  
                       

`line 6329 "/tmp/lm32-customizer/tmp.v"


  
                               
                
                                 
           
               
                  
                   
                                          
                        

`line 6341 "/tmp/lm32-customizer/tmp.v"

  
`line 6342 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] wb_data_f;                  
 
`line 6344 "/tmp/lm32-customizer/tmp.v"

 
`line 6345 "/tmp/lm32-customizer/tmp.v"

  
                                      
                                       
                 

`line 6350 "/tmp/lm32-customizer/tmp.v"

  
`line 6351 "/tmp/lm32-customizer/tmp.v"

 
               

`line 6354 "/tmp/lm32-customizer/tmp.v"

  
                                         

`line 6357 "/tmp/lm32-customizer/tmp.v"


  
                                         

`line 6361 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







    
    
     
       
                    
	 
       
       
       
       
       
       
	 
              
              
              
              
              
              
	 
                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	                   
	                     
	                        
	                         
	    
	                         
	                         
	    

`line 6420 "/tmp/lm32-customizer/tmp.v"
    
 
  

 
              
                       
             
               
                      
       
    
                      
                            
                    
                    
     
                    
                  
                  
              
               
                
                     
    
              
            
             
             
                  
                       
    

`line 6452 "/tmp/lm32-customizer/tmp.v"






  

        
                                 
 
                                 
                         
  
                                 
       
                              

`line 6469 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    
  
       
          
     

`line 6479 "/tmp/lm32-customizer/tmp.v"
    
      if (branch_taken_m ==  1'b1)
	if ((branch_mispredict_taken_m ==  1'b1) && (exception_m ==  1'b0))
	  pc_a = pc_x;
	else
          pc_a = branch_target_m;
      
          
          

`line 6488 "/tmp/lm32-customizer/tmp.v"

      else
	if ( (valid_d ==  1'b1) && (branch_predict_taken_d ==  1'b1) )
	  pc_a = branch_predict_address_d;
	else
  
             
              
	   

`line 6497 "/tmp/lm32-customizer/tmp.v"
        
            pc_a = pc_f + 1'b1;
end


  
           

`line 6504 "/tmp/lm32-customizer/tmp.v"

                     

  
 
         

   


`line 6513 "/tmp/lm32-customizer/tmp.v"

  
 
         

   


`line 6520 "/tmp/lm32-customizer/tmp.v"

assign instruction_f = wb_data_f;
 
`line 6522 "/tmp/lm32-customizer/tmp.v"

 
`line 6523 "/tmp/lm32-customizer/tmp.v"



  
`line 6526 "/tmp/lm32-customizer/tmp.v"

  

`line 6528 "/tmp/lm32-customizer/tmp.v"

assign i_dat_o = 32'd0;
assign i_we_o =  1'b0;
assign i_sel_o = 4'b1111;
 
`line 6532 "/tmp/lm32-customizer/tmp.v"

assign i_bte_o =  2'b00;
 
`line 6534 "/tmp/lm32-customizer/tmp.v"


  


     
    
    
   
   
   
   
    
    
    
   
   
     
    
    
    
    
   
         
     
    
    
    


`line 6563 "/tmp/lm32-customizer/tmp.v"

                     





always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        pc_f <= ( 32'h00000000-4)/4;
        pc_d <= { (32-2){1'b0}};
        pc_x <= { (32-2){1'b0}};
        pc_m <= { (32-2){1'b0}};
        pc_w <= { (32-2){1'b0}};
    end
    else
    begin
        if (stall_f ==  1'b0)
            pc_f <= pc_a;
        if (stall_d ==  1'b0)
            pc_d <= pc_f;
        if (stall_x ==  1'b0)
            pc_x <= pc_d;
        if (stall_m ==  1'b0)
            pc_m <= pc_x;
        pc_w <= pc_m;
    end
end

  

   

       
          
    
    
 
         
            
               
                  
                    
                  

               
                  


         
               
                  


    


`line 6621 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
    
           
              
    


`line 6635 "/tmp/lm32-customizer/tmp.v"


  
                 
 

     
       
       
       
       
     


`line 6648 "/tmp/lm32-customizer/tmp.v"


  
`line 6650 "/tmp/lm32-customizer/tmp.v"


                  
   

       
    
          
          
          
          
          
          
          
 
          

 
          
          
          

    
    
       
          
        
           
        
            
                   
            
 
                   
                
                      
                             
                        
                          
                
                

                
                       
                    
                        
                          
                          
                          
                    
                    
                        
                      
                    
                      
                      
                
            
 
               
            
                  
                  
            

        
        
        
                   
            
                
      
                  

                   
                  
                                  
                  
                
 
                  

            
 
            
            
                       
                
                     
                       
                       
                       
                       
                    
                      
                      
                      
                      
                      
                      
                      
                
             
                    
 
            
            
     
               
                  

               
                  

        
    


`line 6767 "/tmp/lm32-customizer/tmp.v"

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        i_cyc_o <=  1'b0;
        i_stb_o <=  1'b0;
        i_adr_o <= { 32{1'b0}};
        i_cti_o <=  3'b111;
        i_lock_o <=  1'b0;
        wb_data_f <= { 32{1'b0}};
  
          

`line 6780 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin   
        
        if (i_cyc_o ==  1'b1)
        begin
            
            if((i_ack_i ==  1'b1) || (i_err_i ==  1'b1))
            begin
                
                i_cyc_o <=  1'b0;
                i_stb_o <=  1'b0;
                
                wb_data_f <= i_dat_i;
            end
  
               
            
                  
                  
            

`line 6802 "/tmp/lm32-customizer/tmp.v"

        end
        else
        begin
            
            if (   (stall_a ==  1'b0) 
   
                   

`line 6810 "/tmp/lm32-customizer/tmp.v"
       
               )
            begin
                
       
                  

`line 6816 "/tmp/lm32-customizer/tmp.v"

                i_adr_o <= {pc_a, 2'b00};
                i_cyc_o <=  1'b1;
                i_stb_o <=  1'b1;
  
                  

`line 6822 "/tmp/lm32-customizer/tmp.v"

            end
	    else
	    begin
	        if (   (stall_a ==  1'b0) 
   
		       

`line 6829 "/tmp/lm32-customizer/tmp.v"
       
	           )
		begin
  
		      

`line 6834 "/tmp/lm32-customizer/tmp.v"

		end
	    end
        end
    end
end
 
`line 6840 "/tmp/lm32-customizer/tmp.v"

 
`line 6841 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        instruction_d <= { 32{1'b0}};
  
          

`line 6851 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        if (stall_d ==  1'b0)
        begin
            instruction_d <= instruction_f;
  
              

`line 6860 "/tmp/lm32-customizer/tmp.v"

        end
    end
end  
  
endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

                              
                              
                              


                          
                  
                 
              
             
                    
                        
                        


                  
         
          
          
          
          
          
      
      
         





  
    
    
    
     
    
    
    
 
    
    
    
    

 
    
    

 
    

    
 
    
    

 
    
    
    
    
    
    
    

 
    
    

    
    
    





                                             
                                             

                                          
                                       
                        
                              

 
                                
                                  
                    
                                           

 
                    
                              

 
                                     





       
 
                
    
                
    

 
                            
    
              
    
                          
    
                                 
    
                                
    
                  
            
                     
    

 
                                       
    
                                       
    

  
     
  
    
             




                           
                         
                       
                     



     
  

                  
        
                       
        
                       


               
 
         
  
  
  
  
                          


         





 
      
   
      
   

                 

                  
             

   

 
   

   


                  
     
     
         
                 




   
   



   

       
    
          
          
          
          
    
    
    
          
          
          
          
    



   

       
    
          
          
          
 
          
          
          
          

 
          
          

                  
          
          
          
          

    
    
    
                  
               
        
             
            
            
                
                  
                  
            
            
            
                
                  
            
            
        

 
        
           
        
              
              
        

         
        
        
            
                 
            
                                  
                 
 
                
                
                     
 
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                    
      
                              
                                   

                          
                    
                    
                    
      
                              
                                   

                          
                    
                                                   
                

                  
                
                
                      
                      
                                    
                
                
                      
                      
                

                
                    
                                
            
        
 
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                   
                      
                 
                      
            
        
        
        
                 
            
                  
                  
            
        
        
        
             
            
            
            
                  
                  
                  
            
            
            
            
                  
                  
                  
            
            
            
                  
                  
                  
            
            
        
        
        
               
                      
                  
                  
                    
                  
                  
            
            
        
        
              
              
              
            

        
    

  



`line 7334 "/tmp/lm32-customizer/tmp.v"





























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_interrupt_medium (
    
    clk_i, 
    rst_i,
    
    interrupt,
    
    stall_x,
  
    
    

`line 7380 "/tmp/lm32-customizer/tmp.v"

    exception,
 
`line 7382 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
  
    

`line 7386 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_data,
    csr_write_enable,
    
    interrupt_exception,
    
    csr_read_data
    );





parameter interrupts =  32;         





input clk_i;                                    
input rst_i;                                    

input [interrupts-1:0] interrupt;               

input stall_x;                                  

  
                       
                           

`line 7416 "/tmp/lm32-customizer/tmp.v"

input exception;                                
 
`line 7418 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
  
                                  

`line 7422 "/tmp/lm32-customizer/tmp.v"


input [ (3-1):0] csr;                      
input [ (32-1):0] csr_write_data;          
input csr_write_enable;                         





output interrupt_exception;                     
wire   interrupt_exception;

output [ (32-1):0] csr_read_data;          
reg    [ (32-1):0] csr_read_data;





wire [interrupts-1:0] asserted;                 

wire [interrupts-1:0] interrupt_n_exception;



reg ie;                                         
reg eie;                                        
  
                                         

`line 7452 "/tmp/lm32-customizer/tmp.v"

reg [interrupts-1:0] ip;                        
reg [interrupts-1:0] im;                        






assign interrupt_n_exception = ip & im;


assign interrupt_exception = (|interrupt_n_exception) & ie;


assign asserted = ip | interrupt;
       
assign ie_csr_read_data = {{ 32-3{1'b0}}, 
  
                           

`line 7472 "/tmp/lm32-customizer/tmp.v"

                           1'b0,
 
`line 7474 "/tmp/lm32-customizer/tmp.v"
                             
                           eie, 
                           ie
                          };
assign ip_csr_read_data = ip;
assign im_csr_read_data = im;
generate
    if (interrupts > 1) 
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                    

`line 7490 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                     
 
`line 7492 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
     3'h1:  csr_read_data = im;
    default:       csr_read_data = { 32{1'bx}};
    endcase
end
    end
    else
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                     

`line 7511 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                    
 
`line 7513 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
    default:       csr_read_data = { 32{1'bx}};
      endcase
end
    end
endgenerate
    




  
`line 7528 "/tmp/lm32-customizer/tmp.v"

   reg [ 10:0] eie_delay  = 0;

   
generate

   
    if (interrupts > 1)
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie                   <=  1'b0;
        eie                  <=  1'b0;
  
                           

`line 7546 "/tmp/lm32-customizer/tmp.v"

        im                   <= {interrupts{1'b0}};
        ip                   <= {interrupts{1'b0}};
       eie_delay             <= 0;
       
    end
    else
    begin
        
        ip                   <= asserted;
  
           
        
            
                           
                            
        
            
        
            
                           
                            
        

`line 7569 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie              <= ie;
            ie               <=  1'b0;
        end
 
`line 7576 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
        begin

           if(eie_delay[0])
             ie              <= eie;
           
           eie_delay         <= {1'b0, eie_delay[ 10:1]};

            if (eret_q_x ==  1'b1) begin
                
               eie_delay[ 10] <=  1'b1;
               eie_delay[ 10-1:0] <= 0;
            end
           
                      
           
  
                
                
                       

`line 7597 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7607 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h1)
                    im  <= csr_write_data[interrupts-1:0];
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
else
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie              <=  1'b0;
        eie             <=  1'b0;
  
                      

`line 7629 "/tmp/lm32-customizer/tmp.v"

        ip              <= {interrupts{1'b0}};
       eie_delay        <= 0;
    end
    else
    begin
        
        ip              <= asserted;
  
           
        
            
                      
                       
        
            
        
            
                      
                       
        

`line 7650 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie         <= ie;
            ie          <=  1'b0;
        end
 
`line 7657 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
          begin

             if(eie_delay[0])
               ie              <= eie;
           
             eie_delay         <= {1'b0, eie_delay[ 10:1]};

             if (eret_q_x ==  1'b1) begin
                
                eie_delay[ 10] <=  1'b1;
                eie_delay[ 10-1:0] <= 0;
             end
           
  
                
                
                       

`line 7676 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7686 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
endgenerate

endmodule



`line 1 "/tmp/lm32-customizer/tmp.v"




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  

`line 33 "src/lm32_include.v"

  
`line 34 "src/lm32_include.v"



  
`line 1 "/tmp/lm32-customizer/system_conf.v"

`line 1 "/tmp/lm32-customizer/system_conf.v"
  
`line 1 "/tmp/lm32-customizer/system_conf.v"

  
`line 2 "/tmp/lm32-customizer/system_conf.v"

  
`line 3 "/tmp/lm32-customizer/system_conf.v"

  
`line 4 "/tmp/lm32-customizer/system_conf.v"

  
`line 5 "/tmp/lm32-customizer/system_conf.v"

  
`line 6 "/tmp/lm32-customizer/system_conf.v"

  
`line 7 "/tmp/lm32-customizer/system_conf.v"

  
`line 8 "/tmp/lm32-customizer/system_conf.v"

  
`line 9 "/tmp/lm32-customizer/system_conf.v"

	  
`line 10 "/tmp/lm32-customizer/system_conf.v"

	  
`line 11 "/tmp/lm32-customizer/system_conf.v"

	  
`line 12 "/tmp/lm32-customizer/system_conf.v"

	  
`line 13 "/tmp/lm32-customizer/system_conf.v"

	  
`line 14 "/tmp/lm32-customizer/system_conf.v"

	  
`line 15 "/tmp/lm32-customizer/system_conf.v"

	  
`line 16 "/tmp/lm32-customizer/system_conf.v"

	  
`line 17 "/tmp/lm32-customizer/system_conf.v"

	  
`line 18 "/tmp/lm32-customizer/system_conf.v"

	  
`line 19 "/tmp/lm32-customizer/system_conf.v"

	  
`line 20 "/tmp/lm32-customizer/system_conf.v"

	  
`line 21 "/tmp/lm32-customizer/system_conf.v"

	  
`line 22 "/tmp/lm32-customizer/system_conf.v"

	  
`line 23 "/tmp/lm32-customizer/system_conf.v"

	  
`line 24 "/tmp/lm32-customizer/system_conf.v"

	  
`line 25 "/tmp/lm32-customizer/system_conf.v"

	  
`line 26 "/tmp/lm32-customizer/system_conf.v"

	  
`line 27 "/tmp/lm32-customizer/system_conf.v"

	  
`line 28 "/tmp/lm32-customizer/system_conf.v"

	 
`line 29 "/tmp/lm32-customizer/system_conf.v"

 
`line 30 "/tmp/lm32-customizer/system_conf.v"


`line 31 "src/lm32_include.v"


  

`line 40 "src/lm32_include.v"

  
`line 41 "src/lm32_include.v"

  
`line 42 "src/lm32_include.v"

  
`line 43 "src/lm32_include.v"

  
`line 44 "src/lm32_include.v"

 
`line 45 "src/lm32_include.v"



  
`line 48 "src/lm32_include.v"

  
`line 49 "src/lm32_include.v"



  
`line 52 "src/lm32_include.v"

  
`line 53 "src/lm32_include.v"

  
`line 54 "src/lm32_include.v"

  
`line 55 "src/lm32_include.v"

  
`line 56 "src/lm32_include.v"

  
`line 57 "src/lm32_include.v"



  
`line 60 "src/lm32_include.v"

  
`line 61 "src/lm32_include.v"

  
`line 62 "src/lm32_include.v"



  
`line 65 "src/lm32_include.v"

  
`line 66 "src/lm32_include.v"

  
`line 67 "src/lm32_include.v"



  
`line 70 "src/lm32_include.v"

  
`line 71 "src/lm32_include.v"

 
 
                    

                    


`line 78 "src/lm32_include.v"

  
`line 79 "src/lm32_include.v"



  
`line 82 "src/lm32_include.v"

  
`line 83 "src/lm32_include.v"



  
`line 86 "src/lm32_include.v"

  
`line 87 "src/lm32_include.v"



  
`line 90 "src/lm32_include.v"

  
`line 91 "src/lm32_include.v"



  
 

`line 96 "src/lm32_include.v"

  
`line 97 "src/lm32_include.v"

  
`line 98 "src/lm32_include.v"

 
`line 99 "src/lm32_include.v"

 
`line 100 "src/lm32_include.v"



  
`line 103 "src/lm32_include.v"

  
`line 104 "src/lm32_include.v"

 
 
 



`line 110 "src/lm32_include.v"



  
`line 113 "src/lm32_include.v"

  
`line 114 "src/lm32_include.v"

  
 
 

 


`line 121 "src/lm32_include.v"
 


  
`line 124 "src/lm32_include.v"

  
`line 125 "src/lm32_include.v"

 
 
 


`line 130 "src/lm32_include.v"



  
 

`line 135 "src/lm32_include.v"

  
 

`line 138 "src/lm32_include.v"

  
 

`line 141 "src/lm32_include.v"



  
`line 144 "src/lm32_include.v"

  
`line 145 "src/lm32_include.v"

 
`line 146 "src/lm32_include.v"

  
 

`line 149 "src/lm32_include.v"



  
`line 152 "src/lm32_include.v"



  
`line 155 "src/lm32_include.v"



  
`line 158 "src/lm32_include.v"

  
`line 159 "src/lm32_include.v"

  
`line 160 "src/lm32_include.v"

  
`line 161 "src/lm32_include.v"

  
`line 162 "src/lm32_include.v"

  
`line 163 "src/lm32_include.v"

  
`line 164 "src/lm32_include.v"

  
`line 165 "src/lm32_include.v"

  
`line 166 "src/lm32_include.v"

  
`line 167 "src/lm32_include.v"



  
`line 170 "src/lm32_include.v"

  
`line 171 "src/lm32_include.v"

  
`line 172 "src/lm32_include.v"

  
`line 173 "src/lm32_include.v"

  
`line 174 "src/lm32_include.v"

  
`line 175 "src/lm32_include.v"



  
`line 178 "src/lm32_include.v"

  
`line 179 "src/lm32_include.v"

  
`line 180 "src/lm32_include.v"

 
 
                   
                     

                   
                     


`line 189 "src/lm32_include.v"



  
`line 192 "src/lm32_include.v"

  
`line 193 "src/lm32_include.v"

  
`line 194 "src/lm32_include.v"

  
`line 195 "src/lm32_include.v"

  
`line 196 "src/lm32_include.v"

  
`line 197 "src/lm32_include.v"

  
`line 198 "src/lm32_include.v"

  
`line 199 "src/lm32_include.v"

  
`line 200 "src/lm32_include.v"

  
`line 201 "src/lm32_include.v"

  
`line 202 "src/lm32_include.v"

 
`line 203 "src/lm32_include.v"

  
`line 204 "src/lm32_include.v"

  
`line 205 "src/lm32_include.v"

  
`line 206 "src/lm32_include.v"

  
`line 207 "src/lm32_include.v"

 
`line 208 "src/lm32_include.v"

  
`line 209 "src/lm32_include.v"

  
`line 210 "src/lm32_include.v"

  
`line 211 "src/lm32_include.v"

  
`line 212 "src/lm32_include.v"

  
`line 213 "src/lm32_include.v"

  
`line 214 "src/lm32_include.v"

  
`line 215 "src/lm32_include.v"

  
`line 216 "src/lm32_include.v"

  
`line 217 "src/lm32_include.v"

 
`line 218 "src/lm32_include.v"
 


  
`line 221 "src/lm32_include.v"

  
`line 222 "src/lm32_include.v"

  
`line 223 "src/lm32_include.v"

  
`line 224 "src/lm32_include.v"

  
`line 225 "src/lm32_include.v"



  
`line 228 "src/lm32_include.v"

  
`line 229 "src/lm32_include.v"

  
`line 230 "src/lm32_include.v"

  
`line 231 "src/lm32_include.v"

  
`line 232 "src/lm32_include.v"

  
`line 233 "src/lm32_include.v"

  
`line 234 "src/lm32_include.v"

  
`line 235 "src/lm32_include.v"

  
`line 236 "src/lm32_include.v"

  
`line 237 "src/lm32_include.v"




  
`line 241 "src/lm32_include.v"

  
`line 242 "src/lm32_include.v"

  
`line 243 "src/lm32_include.v"


  
`line 245 "src/lm32_include.v"

  
`line 246 "src/lm32_include.v"

  
`line 247 "src/lm32_include.v"

  
`line 248 "src/lm32_include.v"


  
`line 250 "src/lm32_include.v"

  
`line 251 "src/lm32_include.v"



  
`line 254 "src/lm32_include.v"

  
`line 255 "src/lm32_include.v"

 
 
 


`line 260 "src/lm32_include.v"







  
`line 267 "src/lm32_include.v"

  
`line 268 "src/lm32_include.v"

  
`line 269 "src/lm32_include.v"







  
`line 276 "src/lm32_include.v"

  
`line 277 "src/lm32_include.v"

  
`line 278 "src/lm32_include.v"

  
`line 279 "src/lm32_include.v"



  
`line 282 "src/lm32_include.v"

  
`line 283 "src/lm32_include.v"

  
`line 284 "src/lm32_include.v"

  
`line 285 "src/lm32_include.v"



  
`line 288 "src/lm32_include.v"

  
`line 289 "src/lm32_include.v"



  
`line 292 "src/lm32_include.v"







  
`line 299 "src/lm32_include.v"

  
`line 300 "src/lm32_include.v"

  
`line 301 "src/lm32_include.v"

  
`line 302 "src/lm32_include.v"

  
`line 303 "src/lm32_include.v"

  
`line 304 "src/lm32_include.v"



  
`line 307 "src/lm32_include.v"

  
`line 308 "src/lm32_include.v"

  
`line 309 "src/lm32_include.v"

  
`line 310 "src/lm32_include.v"

  
`line 311 "src/lm32_include.v"

  
`line 312 "src/lm32_include.v"


 
`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"

           
  
`line 31 "/tmp/lm32-customizer/tmp.v"

  
`line 32 "/tmp/lm32-customizer/tmp.v"

  
`line 33 "/tmp/lm32-customizer/tmp.v"

  
`line 34 "/tmp/lm32-customizer/tmp.v"

  
`line 35 "/tmp/lm32-customizer/tmp.v"

  
`line 36 "/tmp/lm32-customizer/tmp.v"

  
`line 37 "/tmp/lm32-customizer/tmp.v"






module lm32_mc_arithmetic_medium_debug (
    
    clk_i,
    rst_i,
    stall_d,
    kill_x,
  
    
    

`line 52 "/tmp/lm32-customizer/tmp.v"

  
    

`line 55 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 60 "/tmp/lm32-customizer/tmp.v"

    operand_0_d,
    operand_1_d,
    
    result_x,
  
    

`line 67 "/tmp/lm32-customizer/tmp.v"

    stall_request_x
    );





input clk_i;                                    
input rst_i;                                    
input stall_d;                                  
input kill_x;                                   
  
                                  
                                 

`line 82 "/tmp/lm32-customizer/tmp.v"

  
                                

`line 85 "/tmp/lm32-customizer/tmp.v"

  
                              
                             
                             

`line 90 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] operand_0_d;
input [ (32-1):0] operand_1_d;





output [ (32-1):0] result_x;               
reg    [ (32-1):0] result_x;
  
                         
    

`line 103 "/tmp/lm32-customizer/tmp.v"

output stall_request_x;                         
wire   stall_request_x;





reg [ (32-1):0] p;                         
reg [ (32-1):0] a;
reg [ (32-1):0] b;
  
  

`line 116 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;                 
reg [5:0] cycles;                               

  
                               
                                 

`line 124 "/tmp/lm32-customizer/tmp.v"







assign stall_request_x = state !=  3'b000;

  

      

`line 136 "/tmp/lm32-customizer/tmp.v"


  

       

`line 141 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        cycles <= {6{1'b0}};
        p <= { 32{1'b0}};
        a <= { 32{1'b0}};
        b <= { 32{1'b0}};
  
          

`line 158 "/tmp/lm32-customizer/tmp.v"

  
          

`line 161 "/tmp/lm32-customizer/tmp.v"

        result_x <= { 32{1'b0}};
        state <=  3'b000;
    end
    else
    begin
  
          

`line 169 "/tmp/lm32-customizer/tmp.v"

        case (state)
         3'b000:
        begin
            if (stall_d ==  1'b0)                 
            begin          
                cycles <=  32;
                p <= 32'b0;
                a <= operand_0_d;
                b <= operand_1_d;                    
  
                   
                      
                   
                      

`line 184 "/tmp/lm32-customizer/tmp.v"
                    
  
                   
                      

`line 188 "/tmp/lm32-customizer/tmp.v"

  
                   
                
                      
                      
                      
                      
                      
                
                   
                
                      
                      
                      
                      
                      
                

`line 206 "/tmp/lm32-customizer/tmp.v"

            end            
        end
  
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        

`line 252 "/tmp/lm32-customizer/tmp.v"
        
  
        
        
               
                    
               
               
              
                   
                  
                
        

`line 265 "/tmp/lm32-customizer/tmp.v"
     
  
        
               
               
              
                   
                  
                
        
        
               
               
              
                   
                  
                
        

`line 283 "/tmp/lm32-customizer/tmp.v"
   
        endcase
    end
end 

endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_top_medium_debug (
    
    clk_i,
    rst_i,
    

    interrupt,

    
  
    
    

`line 335 "/tmp/lm32-customizer/tmp.v"
     
  
`line 336 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 342 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
      
    
    
    
    

`line 354 "/tmp/lm32-customizer/tmp.v"
    
  
`line 355 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 366 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





input clk_i;                                    
input rst_i;                                    


input [ (32-1):0] interrupt;          


  
               
                             

`line 393 "/tmp/lm32-customizer/tmp.v"
    

  
`line 395 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 400 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                               
   
       
     
           
    
           
    

`line 420 "/tmp/lm32-customizer/tmp.v"


  
`line 422 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 441 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;
  



 
  
`line 466 "/tmp/lm32-customizer/tmp.v"


wire [ 7:0] jtag_reg_d;
wire [ 7:0] jtag_reg_q;
wire jtag_update;
wire [2:0] jtag_reg_addr_d;
wire [2:0] jtag_reg_addr_q;
wire jtck;
wire jrstn;
 
`line 475 "/tmp/lm32-customizer/tmp.v"



  

                     
                             
                            
                   
                                 
 
                                 


`line 488 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"




   

lm32_cpu_medium_debug cpu (
    
    .clk_i                 (clk_i),
  
                   

`line 505 "/tmp/lm32-customizer/tmp.v"

    .rst_i                 (rst_i),
    
  
`line 508 "/tmp/lm32-customizer/tmp.v"

    .interrupt             (interrupt),
 
`line 510 "/tmp/lm32-customizer/tmp.v"

    
  
               
             

`line 515 "/tmp/lm32-customizer/tmp.v"
     
  
`line 516 "/tmp/lm32-customizer/tmp.v"

    
    .jtag_clk              (jtck),
    .jtag_update           (jtag_update),
    .jtag_reg_q            (jtag_reg_q),
    .jtag_reg_addr_q       (jtag_reg_addr_q),
 
`line 522 "/tmp/lm32-customizer/tmp.v"

  
`line 523 "/tmp/lm32-customizer/tmp.v"

     
    .I_DAT_I               (I_DAT_I),
    .I_ACK_I               (I_ACK_I),
    .I_ERR_I               (I_ERR_I),
    .I_RTY_I               (I_RTY_I),
 
`line 529 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_I               (D_DAT_I),
    .D_ACK_I               (D_ACK_I),
    .D_ERR_I               (D_ERR_I),
    .D_RTY_I               (D_RTY_I),
    
  
                  
            
           
                 
                
 
                


`line 545 "/tmp/lm32-customizer/tmp.v"

  
`line 546 "/tmp/lm32-customizer/tmp.v"

    .jtag_reg_d            (jtag_reg_d),
    .jtag_reg_addr_d       (jtag_reg_addr_d),
 
`line 549 "/tmp/lm32-customizer/tmp.v"

      
                
               
            
            

`line 555 "/tmp/lm32-customizer/tmp.v"
    
  
`line 556 "/tmp/lm32-customizer/tmp.v"

    
    .I_DAT_O               (I_DAT_O),
    .I_ADR_O               (I_ADR_O),
    .I_CYC_O               (I_CYC_O),
    .I_SEL_O               (I_SEL_O),
    .I_STB_O               (I_STB_O),
    .I_WE_O                (I_WE_O),
    .I_CTI_O               (I_CTI_O),
    .I_LOCK_O              (I_LOCK_O),
    .I_BTE_O               (I_BTE_O),
     
`line 567 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_O               (D_DAT_O),
    .D_ADR_O               (D_ADR_O),
    .D_CYC_O               (D_CYC_O),
    .D_SEL_O               (D_SEL_O),
    .D_STB_O               (D_STB_O),
    .D_WE_O                (D_WE_O),
    .D_CTI_O               (D_CTI_O),
    .D_LOCK_O              (D_LOCK_O),
    .D_BTE_O               (D_BTE_O)
    );
   
  
`line 580 "/tmp/lm32-customizer/tmp.v"
		   

jtag_cores jtag_cores (
    
    .reg_d                 (jtag_reg_d),
    .reg_addr_d            (jtag_reg_addr_d),
    
    .reg_update            (jtag_update),
    .reg_q                 (jtag_reg_q),
    .reg_addr_q            (jtag_reg_addr_q),
    .jtck                  (jtck),
    .jrstn                 (jrstn)
    );
 
`line 593 "/tmp/lm32-customizer/tmp.v"
        
   
endmodule
































































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_cpu_medium_debug (
    
    clk_i,
  
    

`line 671 "/tmp/lm32-customizer/tmp.v"
    
    rst_i,
    
  
`line 674 "/tmp/lm32-customizer/tmp.v"

    interrupt,
 
`line 676 "/tmp/lm32-customizer/tmp.v"

    
  
    
    

`line 681 "/tmp/lm32-customizer/tmp.v"
     
  
`line 682 "/tmp/lm32-customizer/tmp.v"

    
    jtag_clk,
    jtag_update, 
    jtag_reg_q,
    jtag_reg_addr_q,
 
`line 688 "/tmp/lm32-customizer/tmp.v"

  
`line 689 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 695 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
  
    
    
    
    
    
 
    


`line 711 "/tmp/lm32-customizer/tmp.v"

  
`line 712 "/tmp/lm32-customizer/tmp.v"

    jtag_reg_d,
    jtag_reg_addr_d,
 
`line 715 "/tmp/lm32-customizer/tmp.v"

      
    
    
    
    

`line 721 "/tmp/lm32-customizer/tmp.v"
    
  
`line 722 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 733 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





parameter eba_reset =  32'h00000000;                           
  
`line 751 "/tmp/lm32-customizer/tmp.v"

parameter deba_reset =  32'h10000000;                         
 
`line 753 "/tmp/lm32-customizer/tmp.v"


  
`line 755 "/tmp/lm32-customizer/tmp.v"

parameter icache_associativity =  1;     
parameter icache_sets =  256;                       
parameter icache_bytes_per_line =  16;   
parameter icache_base_address =  32'h0;       
parameter icache_limit =  32'h7fffffff;                     
 
       
                         
     
         
                       

`line 767 "/tmp/lm32-customizer/tmp.v"


  
        
                          
      
          
                        

`line 775 "/tmp/lm32-customizer/tmp.v"

parameter dcache_associativity = 1;    
parameter dcache_sets = 512;                      
parameter dcache_bytes_per_line = 16;  
parameter dcache_base_address = 0;      
parameter dcache_limit = 0;                    
 
`line 781 "/tmp/lm32-customizer/tmp.v"


  
`line 783 "/tmp/lm32-customizer/tmp.v"

parameter watchpoints =  32'h4;                       
 
   

`line 787 "/tmp/lm32-customizer/tmp.v"

  
                          

`line 790 "/tmp/lm32-customizer/tmp.v"

parameter breakpoints = 0;
 
`line 792 "/tmp/lm32-customizer/tmp.v"


  
`line 794 "/tmp/lm32-customizer/tmp.v"

parameter interrupts =  32;                         
 
   

`line 798 "/tmp/lm32-customizer/tmp.v"






input clk_i;                                    
  
                                   

`line 807 "/tmp/lm32-customizer/tmp.v"
    
input rst_i;                                    

  
`line 810 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] interrupt;          
 
`line 812 "/tmp/lm32-customizer/tmp.v"


  
               
                             

`line 817 "/tmp/lm32-customizer/tmp.v"
    

  
`line 819 "/tmp/lm32-customizer/tmp.v"

input jtag_clk;                                 
input jtag_update;                              
input [ 7:0] jtag_reg_q;              
input [2:0] jtag_reg_addr_q;
 
`line 824 "/tmp/lm32-customizer/tmp.v"


  
`line 826 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 831 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                   
     
                           
    
                          
    
                 
     
                               
    
 
                               
    


`line 857 "/tmp/lm32-customizer/tmp.v"


  
`line 859 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_reg_d;
wire   [ 7:0] jtag_reg_d;
output [2:0] jtag_reg_addr_d;
wire   [2:0] jtag_reg_addr_d;
 
`line 864 "/tmp/lm32-customizer/tmp.v"


  
                               
   
       
     
           
    
           
    

`line 875 "/tmp/lm32-customizer/tmp.v"


  
`line 877 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 896 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;







  
`line 923 "/tmp/lm32-customizer/tmp.v"

reg valid_a;                                    
 
`line 925 "/tmp/lm32-customizer/tmp.v"

reg valid_f;                                    
reg valid_d;                                    
reg valid_x;                                    
reg valid_m;                                    
reg valid_w;                                    
   
wire q_x;
wire [ (32-1):0] immediate_d;              
wire load_d;                                    
reg load_x;                                     
reg load_m;
wire load_q_x;
wire store_q_x;
wire store_d;                                   
reg store_x;
reg store_m;
wire [ 1:0] size_d;                   
reg [ 1:0] size_x;
wire branch_d;                                  
wire branch_predict_d;                          
wire branch_predict_taken_d;                    
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;   
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_d;
wire bi_unconditional;
wire bi_conditional;
reg branch_x;                                   
reg branch_predict_x;
reg branch_predict_taken_x;
reg branch_m;
reg branch_predict_m;
reg branch_predict_taken_m;
wire branch_mispredict_taken_m;                 
wire branch_flushX_m;                           
wire branch_reg_d;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset_d;            
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_x;             
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;
wire [ 0:0] d_result_sel_0_d; 
wire [ 1:0] d_result_sel_1_d; 

wire x_result_sel_csr_d;                        
reg x_result_sel_csr_x;
  
                    
 

`line 971 "/tmp/lm32-customizer/tmp.v"

      
                       
 

`line 975 "/tmp/lm32-customizer/tmp.v"

  
`line 976 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_sext_d;                       
reg x_result_sel_sext_x;
 
`line 979 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_logic_d;                      
reg x_result_sel_logic_x;
  
                        
 

`line 985 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_add_d;                        
reg x_result_sel_add_x;
wire m_result_sel_compare_d;                    
reg m_result_sel_compare_x;
reg m_result_sel_compare_m;
  
`line 991 "/tmp/lm32-customizer/tmp.v"

wire m_result_sel_shift_d;                      
reg m_result_sel_shift_x;
reg m_result_sel_shift_m;
 
`line 995 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_load_d;                       
reg w_result_sel_load_x;
reg w_result_sel_load_m;
reg w_result_sel_load_w;
  
`line 1000 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_mul_d;                        
reg w_result_sel_mul_x;
reg w_result_sel_mul_m;
reg w_result_sel_mul_w;
 
`line 1005 "/tmp/lm32-customizer/tmp.v"

wire x_bypass_enable_d;                         
reg x_bypass_enable_x;                          
wire m_bypass_enable_d;                         
reg m_bypass_enable_x;                          
reg m_bypass_enable_m;
wire sign_extend_d;                             
reg sign_extend_x;
wire write_enable_d;                            
reg write_enable_x;
wire write_enable_q_x;
reg write_enable_m;
wire write_enable_q_m;
reg write_enable_w;
wire write_enable_q_w;
wire read_enable_0_d;                           
wire [ (5-1):0] read_idx_0_d;          
wire read_enable_1_d;                           
wire [ (5-1):0] read_idx_1_d;          
wire [ (5-1):0] write_idx_d;           
reg [ (5-1):0] write_idx_x;            
reg [ (5-1):0] write_idx_m;
reg [ (5-1):0] write_idx_w;
wire [ (5-1):0] csr_d;                     
reg  [ (5-1):0] csr_x;                  
wire [ (3-1):0] condition_d;         
reg [ (3-1):0] condition_x;          
  
`line 1032 "/tmp/lm32-customizer/tmp.v"

wire break_d;                                   
reg break_x;                                    
 
`line 1035 "/tmp/lm32-customizer/tmp.v"

wire scall_d;                                   
reg scall_x;    
wire eret_d;                                    
reg eret_x;
wire eret_q_x;
reg eret_m;
  
 

`line 1044 "/tmp/lm32-customizer/tmp.v"

  
`line 1045 "/tmp/lm32-customizer/tmp.v"

wire bret_d;                                    
reg bret_x;
wire bret_q_x;
reg bret_m;
  
 

`line 1052 "/tmp/lm32-customizer/tmp.v"

 
`line 1053 "/tmp/lm32-customizer/tmp.v"

wire csr_write_enable_d;                        
reg csr_write_enable_x;
wire csr_write_enable_q_x;
  
       

`line 1059 "/tmp/lm32-customizer/tmp.v"


  
                                
 
 
  

`line 1066 "/tmp/lm32-customizer/tmp.v"


reg [ (32-1):0] d_result_0;                
reg [ (32-1):0] d_result_1;                
reg [ (32-1):0] x_result;                  
reg [ (32-1):0] m_result;                  
reg [ (32-1):0] w_result;                  

reg [ (32-1):0] operand_0_x;               
reg [ (32-1):0] operand_1_x;               
reg [ (32-1):0] store_operand_x;           
reg [ (32-1):0] operand_m;                 
reg [ (32-1):0] operand_w;                 


  
`line 1081 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] reg_data_live_0;          
reg [ (32-1):0] reg_data_live_1;  
reg use_buf;                                    
reg [ (32-1):0] reg_data_buf_0;
reg [ (32-1):0] reg_data_buf_1;
 
`line 1087 "/tmp/lm32-customizer/tmp.v"

  
`line 1088 "/tmp/lm32-customizer/tmp.v"

 
     

`line 1091 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] reg_data_0;               
wire [ (32-1):0] reg_data_1;               
reg [ (32-1):0] bypass_data_0;             
reg [ (32-1):0] bypass_data_1;             
wire reg_write_enable_q_w;

reg interlock;                                  

wire stall_a;                                   
wire stall_f;                                   
wire stall_d;                                   
wire stall_x;                                   
wire stall_m;                                   


wire adder_op_d;                                
reg adder_op_x;                                 
reg adder_op_x_n;                               
wire [ (32-1):0] adder_result_x;           
wire adder_overflow_x;                          
wire adder_carry_n_x;                           


wire [ 3:0] logic_op_d;           
reg [ 3:0] logic_op_x;            
wire [ (32-1):0] logic_result_x;           

  
`line 1119 "/tmp/lm32-customizer/tmp.v"


wire [ (32-1):0] sextb_result_x;           
wire [ (32-1):0] sexth_result_x;           
wire [ (32-1):0] sext_result_x;            
 
`line 1124 "/tmp/lm32-customizer/tmp.v"



  
`line 1127 "/tmp/lm32-customizer/tmp.v"

  
                                   
                                     

`line 1131 "/tmp/lm32-customizer/tmp.v"

wire direction_d;                               
reg direction_x;                                        
reg direction_m;
wire [ (32-1):0] shifter_result_m;         
 
`line 1136 "/tmp/lm32-customizer/tmp.v"

  
                               
 
                              
 

`line 1142 "/tmp/lm32-customizer/tmp.v"

  
           

`line 1145 "/tmp/lm32-customizer/tmp.v"



  
`line 1148 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] multiplier_result_w;      
 
`line 1150 "/tmp/lm32-customizer/tmp.v"

  
                                 
 

`line 1154 "/tmp/lm32-customizer/tmp.v"



  
                                   
 
 
 
                           

`line 1163 "/tmp/lm32-customizer/tmp.v"



  
                         
  

`line 1169 "/tmp/lm32-customizer/tmp.v"



  
`line 1172 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] interrupt_csr_read_data_x;
 
`line 1174 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] cfg;                      
wire [ (32-1):0] cfg2;                     
  
                          

`line 1179 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] csr_read_data_x;           


wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                       
  
                          

`line 1190 "/tmp/lm32-customizer/tmp.v"

  
`line 1191 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] instruction_f;     
 
`line 1193 "/tmp/lm32-customizer/tmp.v"



wire [ (32-1):0] instruction_d;     
  
`line 1197 "/tmp/lm32-customizer/tmp.v"

wire iflush;                                    
wire icache_stall_request;                      
wire icache_restart_request;                    
wire icache_refill_request;                     
wire icache_refilling;                          
 
`line 1203 "/tmp/lm32-customizer/tmp.v"

  
          
            
                
                                 
                       

`line 1210 "/tmp/lm32-customizer/tmp.v"



  
                                   
                                     
                       
                     
                      
                           

`line 1220 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] load_data_w;              
wire stall_wb_load;                             


  
`line 1225 "/tmp/lm32-customizer/tmp.v"

  
`line 1226 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] jtx_csr_read_data;        
wire [ (32-1):0] jrx_csr_read_data;        
 
`line 1229 "/tmp/lm32-customizer/tmp.v"

  
`line 1230 "/tmp/lm32-customizer/tmp.v"

wire jtag_csr_write_enable;                     
wire [ (32-1):0] jtag_csr_write_data;      
wire [ (5-1):0] jtag_csr;                  
wire jtag_read_enable;                          
wire [ 7:0] jtag_read_data;
wire jtag_write_enable;
wire [ 7:0] jtag_write_data;
wire [ (32-1):0] jtag_address;
wire jtag_access_complete;
 
`line 1240 "/tmp/lm32-customizer/tmp.v"

  
`line 1241 "/tmp/lm32-customizer/tmp.v"

wire jtag_break;                                
 
`line 1243 "/tmp/lm32-customizer/tmp.v"

 
`line 1244 "/tmp/lm32-customizer/tmp.v"



wire raw_x_0;                                   
wire raw_x_1;                                   
wire raw_m_0;                                   
wire raw_m_1;                                   
wire raw_w_0;                                   
wire raw_w_1;                                   


wire cmp_zero;                                  
wire cmp_negative;                              
wire cmp_overflow;                              
wire cmp_carry_n;                               
reg condition_met_x;                            
reg condition_met_m;
      
                             

`line 1263 "/tmp/lm32-customizer/tmp.v"

wire branch_taken_m;                            

wire kill_f;                                    
wire kill_d;                                    
wire kill_x;                                    
wire kill_m;                                    
wire kill_w;                                    

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] eba;                 
  
`line 1273 "/tmp/lm32-customizer/tmp.v"

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] deba;                
 
`line 1275 "/tmp/lm32-customizer/tmp.v"

reg [ (3-1):0] eid_x;                      
  
                        
                        

`line 1280 "/tmp/lm32-customizer/tmp.v"


  
`line 1282 "/tmp/lm32-customizer/tmp.v"

  
`line 1283 "/tmp/lm32-customizer/tmp.v"

wire dc_ss;                                     
 
`line 1285 "/tmp/lm32-customizer/tmp.v"

wire dc_re;                                     
wire exception_x;                               
reg exception_m;                                
wire debug_exception_x;                         
reg debug_exception_m;
reg debug_exception_w;
wire debug_exception_q_w;
wire non_debug_exception_x;                     
reg non_debug_exception_m;
reg non_debug_exception_w;
wire non_debug_exception_q_w;
 
                                
 
 
 

`line 1302 "/tmp/lm32-customizer/tmp.v"


  
`line 1304 "/tmp/lm32-customizer/tmp.v"

  
`line 1305 "/tmp/lm32-customizer/tmp.v"

wire reset_exception;                           
 
`line 1307 "/tmp/lm32-customizer/tmp.v"

 
`line 1308 "/tmp/lm32-customizer/tmp.v"

  
`line 1309 "/tmp/lm32-customizer/tmp.v"

wire interrupt_exception;                       
 
`line 1311 "/tmp/lm32-customizer/tmp.v"

  
`line 1312 "/tmp/lm32-customizer/tmp.v"

wire breakpoint_exception;                      
wire watchpoint_exception;                      
 
`line 1315 "/tmp/lm32-customizer/tmp.v"

  
            
                   

`line 1319 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1322 "/tmp/lm32-customizer/tmp.v"

wire system_call_exception;                     

  
                         

`line 1327 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







lm32_instruction_unit_medium_debug #(
    .associativity          (icache_associativity),
    .sets                   (icache_sets),
    .bytes_per_line         (icache_bytes_per_line),
    .base_address           (icache_base_address),
    .limit                  (icache_limit)
  ) instruction_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .stall_d                (stall_d),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .valid_f                (valid_f),
    .valid_d                (valid_d),
    .kill_f                 (kill_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .branch_predict_address_d (branch_predict_address_d),
      
             
            

`line 1364 "/tmp/lm32-customizer/tmp.v"

    .exception_m            (exception_m),
    .branch_taken_m         (branch_taken_m),
    .branch_mispredict_taken_m (branch_mispredict_taken_m),
    .branch_target_m        (branch_target_m),
  
`line 1369 "/tmp/lm32-customizer/tmp.v"

    .iflush                 (iflush),
 
`line 1371 "/tmp/lm32-customizer/tmp.v"

  
          
            
                 

`line 1376 "/tmp/lm32-customizer/tmp.v"

  
     
      
           

`line 1381 "/tmp/lm32-customizer/tmp.v"
        
  
`line 1382 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_i                (I_DAT_I),
    .i_ack_i                (I_ACK_I),
    .i_err_i                (I_ERR_I),
    .i_rty_i                (I_RTY_I),
 
`line 1388 "/tmp/lm32-customizer/tmp.v"

  
`line 1389 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_enable       (jtag_read_enable),
    .jtag_write_enable      (jtag_write_enable),
    .jtag_write_data        (jtag_write_data),
    .jtag_address           (jtag_address),
 
`line 1394 "/tmp/lm32-customizer/tmp.v"

    
    
    .pc_f                   (pc_f),
    .pc_d                   (pc_d),
    .pc_x                   (pc_x),
    .pc_m                   (pc_m),
    .pc_w                   (pc_w),
  
`line 1402 "/tmp/lm32-customizer/tmp.v"

    .icache_stall_request   (icache_stall_request),
    .icache_restart_request (icache_restart_request),
    .icache_refill_request  (icache_refill_request),
    .icache_refilling       (icache_refilling),
 
`line 1407 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1410 "/tmp/lm32-customizer/tmp.v"

  
`line 1411 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_o                (I_DAT_O),
    .i_adr_o                (I_ADR_O),
    .i_cyc_o                (I_CYC_O),
    .i_sel_o                (I_SEL_O),
    .i_stb_o                (I_STB_O),
    .i_we_o                 (I_WE_O),
    .i_cti_o                (I_CTI_O),
    .i_lock_o               (I_LOCK_O),
    .i_bte_o                (I_BTE_O),
 
`line 1422 "/tmp/lm32-customizer/tmp.v"

  
`line 1423 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_data         (jtag_read_data),
    .jtag_access_complete   (jtag_access_complete),
 
`line 1426 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1429 "/tmp/lm32-customizer/tmp.v"

  
`line 1430 "/tmp/lm32-customizer/tmp.v"

    .instruction_f          (instruction_f),
 
`line 1432 "/tmp/lm32-customizer/tmp.v"

    .instruction_d          (instruction_d)
    );


lm32_decoder_medium_debug decoder (
    
    .instruction            (instruction_d),
    
    .d_result_sel_0         (d_result_sel_0_d),
    .d_result_sel_1         (d_result_sel_1_d),
    .x_result_sel_csr       (x_result_sel_csr_d),
  
      

`line 1446 "/tmp/lm32-customizer/tmp.v"

      
         

`line 1449 "/tmp/lm32-customizer/tmp.v"

  
`line 1450 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_sext      (x_result_sel_sext_d),
 
`line 1452 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_logic     (x_result_sel_logic_d),
  
          

`line 1456 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_add       (x_result_sel_add_d),
    .m_result_sel_compare   (m_result_sel_compare_d),
  
`line 1459 "/tmp/lm32-customizer/tmp.v"

    .m_result_sel_shift     (m_result_sel_shift_d),  
 
`line 1461 "/tmp/lm32-customizer/tmp.v"
    
    .w_result_sel_load      (w_result_sel_load_d),
  
`line 1463 "/tmp/lm32-customizer/tmp.v"

    .w_result_sel_mul       (w_result_sel_mul_d),
 
`line 1465 "/tmp/lm32-customizer/tmp.v"

    .x_bypass_enable        (x_bypass_enable_d),
    .m_bypass_enable        (m_bypass_enable_d),
    .read_enable_0          (read_enable_0_d),
    .read_idx_0             (read_idx_0_d),
    .read_enable_1          (read_enable_1_d),
    .read_idx_1             (read_idx_1_d),
    .write_enable           (write_enable_d),
    .write_idx              (write_idx_d),
    .immediate              (immediate_d),
    .branch_offset          (branch_offset_d),
    .load                   (load_d),
    .store                  (store_d),
    .size                   (size_d),
    .sign_extend            (sign_extend_d),
    .adder_op               (adder_op_d),
    .logic_op               (logic_op_d),
  
`line 1482 "/tmp/lm32-customizer/tmp.v"

    .direction              (direction_d),
 
`line 1484 "/tmp/lm32-customizer/tmp.v"

  
                 
                

`line 1488 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1491 "/tmp/lm32-customizer/tmp.v"

  
                     
                    

`line 1495 "/tmp/lm32-customizer/tmp.v"

    .branch                 (branch_d),
    .bi_unconditional       (bi_unconditional),
    .bi_conditional         (bi_conditional),
    .branch_reg             (branch_reg_d),
    .condition              (condition_d),
  
`line 1501 "/tmp/lm32-customizer/tmp.v"

    .break_opcode           (break_d),
 
`line 1503 "/tmp/lm32-customizer/tmp.v"

    .scall                  (scall_d),
    .eret                   (eret_d),
  
`line 1506 "/tmp/lm32-customizer/tmp.v"

    .bret                   (bret_d),
 
`line 1508 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1511 "/tmp/lm32-customizer/tmp.v"

    .csr_write_enable       (csr_write_enable_d)
    ); 


lm32_load_store_unit_medium_debug #(
    .associativity          (dcache_associativity),
    .sets                   (dcache_sets),
    .bytes_per_line         (dcache_bytes_per_line),
    .base_address           (dcache_base_address),
    .limit                  (dcache_limit)
  ) load_store_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .kill_x                 (kill_x),
    .kill_m                 (kill_m),
    .exception_m            (exception_m),
    .store_operand_x        (store_operand_x),
    .load_store_address_x   (adder_result_x),
    .load_store_address_m   (operand_m),
    .load_store_address_w   (operand_w[1:0]),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_q_x               (load_q_x),
    .store_q_x              (store_q_x),
    .load_q_m               (load_q_m),
    .store_q_m              (store_q_m),
    .sign_extend_x          (sign_extend_x),
    .size_x                 (size_x),
  
                     

`line 1547 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1550 "/tmp/lm32-customizer/tmp.v"

    
    .d_dat_i                (D_DAT_I),
    .d_ack_i                (D_ACK_I),
    .d_err_i                (D_ERR_I),
    .d_rty_i                (D_RTY_I),
    
    
  
      
     
       
           

`line 1563 "/tmp/lm32-customizer/tmp.v"
    
  
          
            
                 
       

`line 1569 "/tmp/lm32-customizer/tmp.v"

    .load_data_w            (load_data_w),
    .stall_wb_load          (stall_wb_load),
    
    .d_dat_o                (D_DAT_O),
    .d_adr_o                (D_ADR_O),
    .d_cyc_o                (D_CYC_O),
    .d_sel_o                (D_SEL_O),
    .d_stb_o                (D_STB_O),
    .d_we_o                 (D_WE_O),
    .d_cti_o                (D_CTI_O),
    .d_lock_o               (D_LOCK_O),
    .d_bte_o                (D_BTE_O)
    );      
       

lm32_adder adder (
    
    .adder_op_x             (adder_op_x),
    .adder_op_x_n           (adder_op_x_n),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .adder_result_x         (adder_result_x),
    .adder_carry_n_x        (adder_carry_n_x),
    .adder_overflow_x       (adder_overflow_x)
    );


lm32_logic_op logic_op (
    
    .logic_op_x             (logic_op_x),
    .operand_0_x            (operand_0_x),

    .operand_1_x            (operand_1_x),
    
    .logic_result_x         (logic_result_x)
    );
              
  
`line 1608 "/tmp/lm32-customizer/tmp.v"


lm32_shifter shifter (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .direction_x            (direction_x),
    .sign_extend_x          (sign_extend_x),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .shifter_result_m       (shifter_result_m)
    );
 
`line 1622 "/tmp/lm32-customizer/tmp.v"


  
`line 1624 "/tmp/lm32-customizer/tmp.v"


lm32_multiplier multiplier (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .operand_0              (d_result_0),
    .operand_1              (d_result_1),
    
    .result                 (multiplier_result_w)    
    );
 
`line 1637 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
                    
                     
                   
                   
                  

         
                 

 
               
              
              
    
                
                
    
                   
                   
           

            
    

`line 1668 "/tmp/lm32-customizer/tmp.v"

              
  
`line 1670 "/tmp/lm32-customizer/tmp.v"


lm32_interrupt_medium_debug interrupt_unit (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    
    .interrupt              (interrupt),
    
    .stall_x                (stall_x),
  
`line 1680 "/tmp/lm32-customizer/tmp.v"

    .non_debug_exception    (non_debug_exception_q_w), 
    .debug_exception        (debug_exception_q_w),
 
                   

`line 1685 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
  
`line 1687 "/tmp/lm32-customizer/tmp.v"

    .bret_q_x               (bret_q_x),
 
`line 1689 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    
    .interrupt_exception    (interrupt_exception),
    
    .csr_read_data          (interrupt_csr_read_data_x)
    );
 
`line 1698 "/tmp/lm32-customizer/tmp.v"


  
`line 1700 "/tmp/lm32-customizer/tmp.v"


lm32_jtag_medium_debug jtag (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .jtag_clk               (jtag_clk),
    .jtag_update            (jtag_update),
    .jtag_reg_q             (jtag_reg_q),
    .jtag_reg_addr_q        (jtag_reg_addr_q),
    
  
`line 1712 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    .stall_x                (stall_x),
 
`line 1717 "/tmp/lm32-customizer/tmp.v"

  
`line 1718 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_data         (jtag_read_data),
    .jtag_access_complete   (jtag_access_complete),
 
`line 1721 "/tmp/lm32-customizer/tmp.v"

  
`line 1722 "/tmp/lm32-customizer/tmp.v"

    .exception_q_w          (debug_exception_q_w || non_debug_exception_q_w),
 
`line 1724 "/tmp/lm32-customizer/tmp.v"
    
    
    
  
`line 1727 "/tmp/lm32-customizer/tmp.v"

    .jtx_csr_read_data      (jtx_csr_read_data),
    .jrx_csr_read_data      (jrx_csr_read_data),
 
`line 1730 "/tmp/lm32-customizer/tmp.v"

  
`line 1731 "/tmp/lm32-customizer/tmp.v"

    .jtag_csr_write_enable  (jtag_csr_write_enable),
    .jtag_csr_write_data    (jtag_csr_write_data),
    .jtag_csr               (jtag_csr),
    .jtag_read_enable       (jtag_read_enable),
    .jtag_write_enable      (jtag_write_enable),
    .jtag_write_data        (jtag_write_data),
    .jtag_address           (jtag_address),
 
`line 1739 "/tmp/lm32-customizer/tmp.v"

  
`line 1740 "/tmp/lm32-customizer/tmp.v"

    .jtag_break             (jtag_break),
    .jtag_reset             (reset_exception),
 
`line 1743 "/tmp/lm32-customizer/tmp.v"

    
    .jtag_reg_d             (jtag_reg_d),
    .jtag_reg_addr_d        (jtag_reg_addr_d)
    );
 
`line 1748 "/tmp/lm32-customizer/tmp.v"


  
`line 1750 "/tmp/lm32-customizer/tmp.v"


lm32_debug_medium_debug #(
    .breakpoints            (breakpoints),
    .watchpoints            (watchpoints)
  ) hw_debug (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    .pc_x                   (pc_x),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_store_address_x   (adder_result_x),
    .csr_write_enable_x     (csr_write_enable_q_x),
    .csr_write_data         (operand_1_x),
    .csr_x                  (csr_x),
  
`line 1766 "/tmp/lm32-customizer/tmp.v"

    .jtag_csr_write_enable  (jtag_csr_write_enable),
    .jtag_csr_write_data    (jtag_csr_write_data),
    .jtag_csr               (jtag_csr),
 
`line 1770 "/tmp/lm32-customizer/tmp.v"

  
`line 1771 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
    .bret_q_x               (bret_q_x),
    .stall_x                (stall_x),
    .exception_x            (exception_x),
    .q_x                    (q_x),
  
      

`line 1779 "/tmp/lm32-customizer/tmp.v"

 
`line 1780 "/tmp/lm32-customizer/tmp.v"

    
  
`line 1782 "/tmp/lm32-customizer/tmp.v"

    .dc_ss                  (dc_ss),
 
`line 1784 "/tmp/lm32-customizer/tmp.v"

    .dc_re                  (dc_re),
    .bp_match               (bp_match),
    .wp_match               (wp_match)
    );
 
`line 1789 "/tmp/lm32-customizer/tmp.v"




  
`line 1793 "/tmp/lm32-customizer/tmp.v"

   
           
            
          
            


             
              
    

   wire [31:0] regfile_data_0, regfile_data_1;
   reg [31:0]  w_result_d;
   reg 	       regfile_raw_0, regfile_raw_0_nxt;
   reg 	       regfile_raw_1, regfile_raw_1_nxt;
   
   
             
          

   always @(reg_write_enable_q_w or write_idx_w or instruction_f)
     begin
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[25:21]))
	  regfile_raw_0_nxt = 1'b1;
	else
	  regfile_raw_0_nxt = 1'b0;
	
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[20:16]))
	  regfile_raw_1_nxt = 1'b1;
	else
	  regfile_raw_1_nxt = 1'b0;
     end
   
   
           
           
       

   always @(regfile_raw_0 or w_result_d or regfile_data_0)
     if (regfile_raw_0)
       reg_data_live_0 = w_result_d;
     else
       reg_data_live_0 = regfile_data_0;
   
   
           
           
       

   always @(regfile_raw_1 or w_result_d or regfile_data_1)
     if (regfile_raw_1)
       reg_data_live_1 = w_result_d;
     else
       reg_data_live_1 = regfile_data_1;
   
   
     

   always @(posedge clk_i  )
     if (rst_i ==  1'b1)
       begin
	  regfile_raw_0 <= 1'b0;
	  regfile_raw_1 <= 1'b0;
	  w_result_d <= 32'b0;
       end
     else
       begin
	  regfile_raw_0 <= regfile_raw_0_nxt;
	  regfile_raw_1 <= regfile_raw_1_nxt;
	  w_result_d <= w_result;
       end
   
   
      

   
   lm32_dp_ram
     #(
       
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_0
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[25:21]),
      
      .rdata_o	(regfile_data_0)
      );

   lm32_dp_ram
     #(
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_1
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[20:16]),
      
      .rdata_o	(regfile_data_1)
      );
 
`line 1910 "/tmp/lm32-customizer/tmp.v"


  
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      
   
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      

`line 1978 "/tmp/lm32-customizer/tmp.v"







  
`line 1985 "/tmp/lm32-customizer/tmp.v"


assign reg_data_0 = use_buf ? reg_data_buf_0 : reg_data_live_0;
assign reg_data_1 = use_buf ? reg_data_buf_1 : reg_data_live_1;
 
`line 1989 "/tmp/lm32-customizer/tmp.v"

  
`line 1990 "/tmp/lm32-customizer/tmp.v"

 

   
   

`line 1995 "/tmp/lm32-customizer/tmp.v"



assign raw_x_0 = (write_idx_x == read_idx_0_d) && (write_enable_q_x ==  1'b1);
assign raw_m_0 = (write_idx_m == read_idx_0_d) && (write_enable_q_m ==  1'b1);
assign raw_w_0 = (write_idx_w == read_idx_0_d) && (write_enable_q_w ==  1'b1);
assign raw_x_1 = (write_idx_x == read_idx_1_d) && (write_enable_q_x ==  1'b1);
assign raw_m_1 = (write_idx_m == read_idx_1_d) && (write_enable_q_m ==  1'b1);
assign raw_w_1 = (write_idx_w == read_idx_1_d) && (write_enable_q_w ==  1'b1);


always @(*)
begin
    if (   (   (x_bypass_enable_x ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_x_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_x_1 ==  1'b1))
               )
           )
        || (   (m_bypass_enable_m ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_m_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_m_1 ==  1'b1))
               )
           )
       )
        interlock =  1'b1;
    else
        interlock =  1'b0;
end


always @(*)
begin
    if (raw_x_0 ==  1'b1)        
        bypass_data_0 = x_result;
    else if (raw_m_0 ==  1'b1)
        bypass_data_0 = m_result;
    else if (raw_w_0 ==  1'b1)
        bypass_data_0 = w_result;
    else
        bypass_data_0 = reg_data_0;
end


always @(*)
begin
    if (raw_x_1 ==  1'b1)
        bypass_data_1 = x_result;
    else if (raw_m_1 ==  1'b1)
        bypass_data_1 = m_result;
    else if (raw_w_1 ==  1'b1)
        bypass_data_1 = w_result;
    else
        bypass_data_1 = reg_data_1;
end

   
          
       
       
     

   assign branch_predict_d = bi_unconditional | bi_conditional;
   assign branch_predict_taken_d = bi_unconditional ? 1'b1 : (bi_conditional ? instruction_d[15] : 1'b0);
   
   
   assign branch_target_d = pc_d + branch_offset_d;

   
   
   
   assign branch_predict_address_d = branch_predict_taken_d ? branch_target_d : pc_f;


always @(*)
begin
    d_result_0 = d_result_sel_0_d[0] ? {pc_f, 2'b00} : bypass_data_0; 
    case (d_result_sel_1_d)
     2'b00:      d_result_1 = { 32{1'b0}};
     2'b01:     d_result_1 = bypass_data_1;
     2'b10: d_result_1 = immediate_d;
    default:                        d_result_1 = { 32{1'bx}};
    endcase
end

      

   
   

`line 2083 "/tmp/lm32-customizer/tmp.v"


  
`line 2085 "/tmp/lm32-customizer/tmp.v"


assign sextb_result_x = {{24{operand_0_x[7]}}, operand_0_x[7:0]};
assign sexth_result_x = {{16{operand_0_x[15]}}, operand_0_x[15:0]};
assign sext_result_x = size_x ==  2'b00 ? sextb_result_x : sexth_result_x;
 
`line 2090 "/tmp/lm32-customizer/tmp.v"


  

      

`line 2095 "/tmp/lm32-customizer/tmp.v"



assign cmp_zero = operand_0_x == operand_1_x;
assign cmp_negative = adder_result_x[ 32-1];
assign cmp_overflow = adder_overflow_x;
assign cmp_carry_n = adder_carry_n_x;
always @(*)
begin
    case (condition_x)
     3'b000:   condition_met_x =  1'b1;
     3'b110:   condition_met_x =  1'b1;
     3'b001:    condition_met_x = cmp_zero;
     3'b111:   condition_met_x = !cmp_zero;
     3'b010:    condition_met_x = !cmp_zero && (cmp_negative == cmp_overflow);
     3'b101:   condition_met_x = cmp_carry_n && !cmp_zero;
     3'b011:   condition_met_x = cmp_negative == cmp_overflow;
     3'b100:  condition_met_x = cmp_carry_n;
    default:              condition_met_x = 1'bx;
    endcase 
end


always @(*)
begin
    x_result =   x_result_sel_add_x ? adder_result_x 
               : x_result_sel_csr_x ? csr_read_data_x
  
`line 2122 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_sext_x ? sext_result_x
 
`line 2124 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2127 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2130 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2133 "/tmp/lm32-customizer/tmp.v"

               : logic_result_x;
end


always @(*)
begin
    m_result =   m_result_sel_compare_m ? {{ 32-1{1'b0}}, condition_met_m}
  
`line 2141 "/tmp/lm32-customizer/tmp.v"

               : m_result_sel_shift_m ? shifter_result_m
 
`line 2143 "/tmp/lm32-customizer/tmp.v"

               : operand_m; 
end


always @(*)
begin
    w_result =    w_result_sel_load_w ? load_data_w
  
`line 2151 "/tmp/lm32-customizer/tmp.v"

                : w_result_sel_mul_w ? multiplier_result_w
 
`line 2153 "/tmp/lm32-customizer/tmp.v"

                : operand_w;
end

      

          
                                
                                     
                                 
                                 
                              

`line 2165 "/tmp/lm32-customizer/tmp.v"



assign branch_taken_m =      (stall_m ==  1'b0) 
                          && (   (   (branch_m ==  1'b1) 
                                  && (valid_m ==  1'b1)
                                  && (   (   (condition_met_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b0)
					 )
				      || (   (condition_met_m ==  1'b0)
					  && (branch_predict_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b1)
					 )
				     )
                                 ) 
                              || (exception_m ==  1'b1)
                             );


assign branch_mispredict_taken_m =    (condition_met_m ==  1'b0)
                                   && (branch_predict_m ==  1'b1)
	   			   && (branch_predict_taken_m ==  1'b1);
   

assign branch_flushX_m =    (stall_m ==  1'b0)
                         && (   (   (branch_m ==  1'b1) 
                                 && (valid_m ==  1'b1)
			         && (   (condition_met_m ==  1'b1)
				     || (   (condition_met_m ==  1'b0)
					 && (branch_predict_m ==  1'b1)
					 && (branch_predict_taken_m ==  1'b1)
					)
				    )
			        )
			     || (exception_m ==  1'b1)
			    );


assign kill_f =    (   (valid_d ==  1'b1)
                    && (branch_predict_taken_d ==  1'b1)
		   )
                || (branch_taken_m ==  1'b1) 
      
                   

`line 2209 "/tmp/lm32-customizer/tmp.v"

  
`line 2210 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1) 
 
`line 2212 "/tmp/lm32-customizer/tmp.v"

                  
                   

`line 2215 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_d =    (branch_taken_m ==  1'b1) 
      
                   

`line 2220 "/tmp/lm32-customizer/tmp.v"

  
`line 2221 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1)     
 
`line 2223 "/tmp/lm32-customizer/tmp.v"
                
                  
                   

`line 2226 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_x =    (branch_flushX_m ==  1'b1) 
                  
                   

`line 2231 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_m =     1'b0
                  
                   

`line 2236 "/tmp/lm32-customizer/tmp.v"

                ;                
assign kill_w =     1'b0
                  
                   

`line 2241 "/tmp/lm32-customizer/tmp.v"
                
                ;



  
`line 2246 "/tmp/lm32-customizer/tmp.v"

assign breakpoint_exception =    (   (   (break_x ==  1'b1)
				      || (bp_match ==  1'b1)
				     )
				  && (valid_x ==  1'b1)
				 )
  
`line 2252 "/tmp/lm32-customizer/tmp.v"

                              || (jtag_break ==  1'b1)
 
`line 2254 "/tmp/lm32-customizer/tmp.v"

                              ;
 
`line 2256 "/tmp/lm32-customizer/tmp.v"


  
`line 2258 "/tmp/lm32-customizer/tmp.v"

assign watchpoint_exception = wp_match ==  1'b1;
 
`line 2260 "/tmp/lm32-customizer/tmp.v"


  
        
                                             
                                         
     

`line 2267 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2271 "/tmp/lm32-customizer/tmp.v"


assign system_call_exception = (   (scall_x ==  1'b1)
  
                                   

`line 2276 "/tmp/lm32-customizer/tmp.v"

			       );

  
`line 2279 "/tmp/lm32-customizer/tmp.v"

assign debug_exception_x =  (breakpoint_exception ==  1'b1)
                         || (watchpoint_exception ==  1'b1)
                         ;

assign non_debug_exception_x = (system_call_exception ==  1'b1)
  
`line 2285 "/tmp/lm32-customizer/tmp.v"

                            || (reset_exception ==  1'b1)
 
`line 2287 "/tmp/lm32-customizer/tmp.v"

  
                               
                               

`line 2291 "/tmp/lm32-customizer/tmp.v"

  
                               

`line 2294 "/tmp/lm32-customizer/tmp.v"

  
`line 2295 "/tmp/lm32-customizer/tmp.v"

                            || (   (interrupt_exception ==  1'b1)
  
`line 2297 "/tmp/lm32-customizer/tmp.v"

                                && (dc_ss ==  1'b0)
 
`line 2299 "/tmp/lm32-customizer/tmp.v"
                            
  
 				   
				   

`line 2303 "/tmp/lm32-customizer/tmp.v"

                               )
 
`line 2305 "/tmp/lm32-customizer/tmp.v"

                            ;

assign exception_x = (debug_exception_x ==  1'b1) || (non_debug_exception_x ==  1'b1);
 
               
 
                               
                               

 
                               

 
                                  
 
                                   
                            
 
 				   
				   

                               

                            

`line 2330 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
  
`line 2335 "/tmp/lm32-customizer/tmp.v"

  
`line 2336 "/tmp/lm32-customizer/tmp.v"

    if (reset_exception ==  1'b1)
        eid_x =  3'h0;
    else
 
`line 2340 "/tmp/lm32-customizer/tmp.v"
     
  
            
          
    

`line 2345 "/tmp/lm32-customizer/tmp.v"

         if (breakpoint_exception ==  1'b1)
        eid_x =  3'd1;
    else
 
`line 2349 "/tmp/lm32-customizer/tmp.v"

  
            
          
    
            
          
    

`line 2357 "/tmp/lm32-customizer/tmp.v"

  
`line 2358 "/tmp/lm32-customizer/tmp.v"

         if (watchpoint_exception ==  1'b1)
        eid_x =  3'd3;
    else 
 
`line 2362 "/tmp/lm32-customizer/tmp.v"

  
            
          
    

`line 2367 "/tmp/lm32-customizer/tmp.v"

  
`line 2368 "/tmp/lm32-customizer/tmp.v"

         if (   (interrupt_exception ==  1'b1)
  
`line 2370 "/tmp/lm32-customizer/tmp.v"

             && (dc_ss ==  1'b0)
 
`line 2372 "/tmp/lm32-customizer/tmp.v"
                            
            )
        eid_x =  3'h6;
    else
 
`line 2376 "/tmp/lm32-customizer/tmp.v"

        eid_x =  3'h7;
end



assign stall_a = (stall_f ==  1'b1);
                
assign stall_f = (stall_d ==  1'b1);
                
assign stall_d =   (stall_x ==  1'b1) 
                || (   (interlock ==  1'b1)
                    && (kill_d ==  1'b0)
                   ) 
		|| (   (   (eret_d ==  1'b1)
			|| (scall_d ==  1'b1)
  
			   

`line 2394 "/tmp/lm32-customizer/tmp.v"

		       )
		    && (   (load_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
  
`line 2404 "/tmp/lm32-customizer/tmp.v"

		|| (   (   (break_d ==  1'b1)
			|| (bret_d ==  1'b1)
		       )
		    && (   (load_q_x ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
 
`line 2416 "/tmp/lm32-customizer/tmp.v"
                   
                || (   (csr_write_enable_d ==  1'b1)
                    && (load_q_x ==  1'b1)
                   )                      
                ;
                
assign stall_x =    (stall_m ==  1'b1)
  
                       
                        
                     

`line 2427 "/tmp/lm32-customizer/tmp.v"

  
                 
                 
                       
		           
			    
			
		    

`line 2436 "/tmp/lm32-customizer/tmp.v"

                 ;

assign stall_m =    (stall_wb_load ==  1'b1)
  
                    

`line 2442 "/tmp/lm32-customizer/tmp.v"

                 || (   (D_CYC_O ==  1'b1)
                     && (   (store_m ==  1'b1)
		         
          
          

		  
	 
	

          
           
          
       

  
`line 2458 "/tmp/lm32-customizer/tmp.v"

		         || ((store_x ==  1'b1) && (interrupt_exception ==  1'b1))
 
`line 2460 "/tmp/lm32-customizer/tmp.v"

                         || (load_m ==  1'b1)
                         || (load_x ==  1'b1)
                        ) 
                    ) 
 
`line 2465 "/tmp/lm32-customizer/tmp.v"
                 
  
                         

`line 2468 "/tmp/lm32-customizer/tmp.v"
                                    
  
`line 2469 "/tmp/lm32-customizer/tmp.v"

                 || (icache_stall_request ==  1'b1)     
                 || ((I_CYC_O ==  1'b1) && ((branch_m ==  1'b1) || (exception_m ==  1'b1))) 
 
 
                                


`line 2476 "/tmp/lm32-customizer/tmp.v"
                               
  
                                  
                        
                    

`line 2481 "/tmp/lm32-customizer/tmp.v"

                 ;      


  
         

`line 2487 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2491 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2494 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2498 "/tmp/lm32-customizer/tmp.v"

assign q_x = (valid_x ==  1'b1) && (kill_x ==  1'b0);
assign csr_write_enable_q_x = (csr_write_enable_x ==  1'b1) && (q_x ==  1'b1);
assign eret_q_x = (eret_x ==  1'b1) && (q_x ==  1'b1);
  
`line 2502 "/tmp/lm32-customizer/tmp.v"

assign bret_q_x = (bret_x ==  1'b1) && (q_x ==  1'b1);
 
`line 2504 "/tmp/lm32-customizer/tmp.v"

assign load_q_x = (load_x ==  1'b1) 
               && (q_x ==  1'b1)
  
`line 2507 "/tmp/lm32-customizer/tmp.v"

               && (bp_match ==  1'b0)
 
`line 2509 "/tmp/lm32-customizer/tmp.v"

                  ;
assign store_q_x = (store_x ==  1'b1) 
               && (q_x ==  1'b1)
  
`line 2513 "/tmp/lm32-customizer/tmp.v"

               && (bp_match ==  1'b0)
 
`line 2515 "/tmp/lm32-customizer/tmp.v"

                  ;
  
         

`line 2519 "/tmp/lm32-customizer/tmp.v"
                              
assign q_m = (valid_m ==  1'b1) && (kill_m ==  1'b0) && (exception_m ==  1'b0);
assign load_q_m = (load_m ==  1'b1) && (q_m ==  1'b1);
assign store_q_m = (store_m ==  1'b1) && (q_m ==  1'b1);
  
`line 2523 "/tmp/lm32-customizer/tmp.v"

assign debug_exception_q_w = ((debug_exception_w ==  1'b1) && (valid_w ==  1'b1));
assign non_debug_exception_q_w = ((non_debug_exception_w ==  1'b1) && (valid_w ==  1'b1));        
 
                 

`line 2528 "/tmp/lm32-customizer/tmp.v"


assign write_enable_q_x = (write_enable_x ==  1'b1) && (valid_x ==  1'b1) && (branch_flushX_m ==  1'b0);
assign write_enable_q_m = (write_enable_m ==  1'b1) && (valid_m ==  1'b1);
assign write_enable_q_w = (write_enable_w ==  1'b1) && (valid_w ==  1'b1);

assign reg_write_enable_q_w = (write_enable_w ==  1'b1) && (kill_w ==  1'b0) && (valid_w ==  1'b1);


assign cfg = {
               6'h02,
              watchpoints[3:0],
              breakpoints[3:0],
              interrupts[5:0],
  
`line 2542 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2546 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2549 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2551 "/tmp/lm32-customizer/tmp.v"

  
`line 2552 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2556 "/tmp/lm32-customizer/tmp.v"

  
`line 2557 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2561 "/tmp/lm32-customizer/tmp.v"

  
`line 2562 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2566 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2569 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2571 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2574 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2576 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2579 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2581 "/tmp/lm32-customizer/tmp.v"

  
`line 2582 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2586 "/tmp/lm32-customizer/tmp.v"

  
`line 2587 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2591 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2594 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2596 "/tmp/lm32-customizer/tmp.v"

  
`line 2597 "/tmp/lm32-customizer/tmp.v"
 
               1'b1
 
              

`line 2601 "/tmp/lm32-customizer/tmp.v"

              };

assign cfg2 = {
		     30'b0,
  
		     

`line 2608 "/tmp/lm32-customizer/tmp.v"

		      1'b0,
 
`line 2610 "/tmp/lm32-customizer/tmp.v"

  
		     

`line 2613 "/tmp/lm32-customizer/tmp.v"

		      1'b0
 
`line 2615 "/tmp/lm32-customizer/tmp.v"

		     };
   

  
`line 2619 "/tmp/lm32-customizer/tmp.v"

assign iflush = (   (csr_write_enable_d ==  1'b1) 
                 && (csr_d ==  5'h3)
                 && (stall_d ==  1'b0)
                 && (kill_d ==  1'b0)
                 && (valid_d ==  1'b1))

  
`line 2626 "/tmp/lm32-customizer/tmp.v"

             ||
                (   (jtag_csr_write_enable ==  1'b1)
		 && (jtag_csr ==  5'h3))
 
`line 2630 "/tmp/lm32-customizer/tmp.v"

		 ;
 
`line 2632 "/tmp/lm32-customizer/tmp.v"
 
  
         
                      

 
               
                       
		      

		   

`line 2643 "/tmp/lm32-customizer/tmp.v"
 


assign csr_d = read_idx_0_d[ (5-1):0];


always @(*)
begin
    case (csr_x)
  
`line 2652 "/tmp/lm32-customizer/tmp.v"

     5'h0,
     5'h1,
     5'h2:   csr_read_data_x = interrupt_csr_read_data_x;  
 
`line 2656 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2659 "/tmp/lm32-customizer/tmp.v"

     5'h6:  csr_read_data_x = cfg;
     5'h7:  csr_read_data_x = {eba, 8'h00};
  
`line 2662 "/tmp/lm32-customizer/tmp.v"

     5'h9: csr_read_data_x = {deba, 8'h00};
 
`line 2664 "/tmp/lm32-customizer/tmp.v"

  
`line 2665 "/tmp/lm32-customizer/tmp.v"

     5'he:  csr_read_data_x = jtx_csr_read_data;  
     5'hf:  csr_read_data_x = jrx_csr_read_data;
 
`line 2668 "/tmp/lm32-customizer/tmp.v"

     5'ha: csr_read_data_x = cfg2;
      
    default:        csr_read_data_x = { 32{1'bx}};
    endcase
end






always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        eba <= eba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  5'h7) && (stall_x ==  1'b0))
            eba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
`line 2688 "/tmp/lm32-customizer/tmp.v"

        if ((jtag_csr_write_enable ==  1'b1) && (jtag_csr ==  5'h7))
            eba <= jtag_csr_write_data[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
 
`line 2691 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 2695 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        deba <= deba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  5'h9) && (stall_x ==  1'b0))
            deba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
`line 2705 "/tmp/lm32-customizer/tmp.v"

        if ((jtag_csr_write_enable ==  1'b1) && (jtag_csr ==  5'h9))
            deba <= jtag_csr_write_data[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
 
`line 2708 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 2711 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
            


`line 2722 "/tmp/lm32-customizer/tmp.v"


  

   

       
          
    
    
        
               
              
        
               
              
    


`line 2740 "/tmp/lm32-customizer/tmp.v"

 


  
`line 2744 "/tmp/lm32-customizer/tmp.v"

  
 

           
           
       
          
            
                 
             
          
     
            
 

`line 2759 "/tmp/lm32-customizer/tmp.v"

always @(*)
begin
    if (icache_refill_request ==  1'b1) 
        valid_a =  1'b0;
    else if (icache_restart_request ==  1'b1) 
        valid_a =  1'b1;
    else 
        valid_a = !icache_refilling;
end 
 
`line 2769 "/tmp/lm32-customizer/tmp.v"

 
 
 

        
          
         
          
     
          
 


`line 2782 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        valid_f <=  1'b0;
        valid_d <=  1'b0;
        valid_x <=  1'b0;
        valid_m <=  1'b0;
        valid_w <=  1'b0;
    end
    else
    begin    
        if ((kill_f ==  1'b1) || (stall_a ==  1'b0))
  
`line 2797 "/tmp/lm32-customizer/tmp.v"

            valid_f <= valid_a;    
 
              

`line 2801 "/tmp/lm32-customizer/tmp.v"
            
        else if (stall_f ==  1'b0)
            valid_f <=  1'b0;            

        if (kill_d ==  1'b1)
            valid_d <=  1'b0;
        else if (stall_f ==  1'b0)
            valid_d <= valid_f & !kill_f;
        else if (stall_d ==  1'b0)
            valid_d <=  1'b0;
       
        if (stall_d ==  1'b0)
            valid_x <= valid_d & !kill_d;
        else if (kill_x ==  1'b1)
            valid_x <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_x <=  1'b0;

        if (kill_m ==  1'b1)
            valid_m <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_m <= valid_x & !kill_x;
        else if (stall_m ==  1'b0)
            valid_m <=  1'b0;

        if (stall_m ==  1'b0)
            valid_w <= valid_m & !kill_m;
        else 
            valid_w <=  1'b0;        
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
  
                 

`line 2840 "/tmp/lm32-customizer/tmp.v"
        
        operand_0_x <= { 32{1'b0}};
        operand_1_x <= { 32{1'b0}};
        store_operand_x <= { 32{1'b0}};
        branch_target_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};        
        x_result_sel_csr_x <=  1'b0;
  
          

`line 2848 "/tmp/lm32-customizer/tmp.v"

      
          

`line 2851 "/tmp/lm32-customizer/tmp.v"

  
`line 2852 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_sext_x <=  1'b0;
 
`line 2854 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_logic_x <=  1'b0;
  
          

`line 2858 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_add_x <=  1'b0;
        m_result_sel_compare_x <=  1'b0;
  
`line 2861 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_x <=  1'b0;
 
`line 2863 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_x <=  1'b0;
  
`line 2865 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_x <=  1'b0;
 
`line 2867 "/tmp/lm32-customizer/tmp.v"

        x_bypass_enable_x <=  1'b0;
        m_bypass_enable_x <=  1'b0;
        write_enable_x <=  1'b0;
        write_idx_x <= { 5{1'b0}};
        csr_x <= { 5{1'b0}};
        load_x <=  1'b0;
        store_x <=  1'b0;
        size_x <= { 2{1'b0}};
        sign_extend_x <=  1'b0;
        adder_op_x <=  1'b0;
        adder_op_x_n <=  1'b0;
        logic_op_x <= 4'h0;
  
`line 2880 "/tmp/lm32-customizer/tmp.v"

        direction_x <=  1'b0;
 
`line 2882 "/tmp/lm32-customizer/tmp.v"

  
          


`line 2886 "/tmp/lm32-customizer/tmp.v"

        branch_x <=  1'b0;
        branch_predict_x <=  1'b0;
        branch_predict_taken_x <=  1'b0;
        condition_x <=  3'b000;
  
`line 2891 "/tmp/lm32-customizer/tmp.v"

        break_x <=  1'b0;
 
`line 2893 "/tmp/lm32-customizer/tmp.v"

        scall_x <=  1'b0;
        eret_x <=  1'b0;
  
`line 2896 "/tmp/lm32-customizer/tmp.v"

        bret_x <=  1'b0;
 
`line 2898 "/tmp/lm32-customizer/tmp.v"

  
          
          

`line 2902 "/tmp/lm32-customizer/tmp.v"

        csr_write_enable_x <=  1'b0;
        operand_m <= { 32{1'b0}};
        branch_target_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        m_result_sel_compare_m <=  1'b0;
  
`line 2907 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_m <=  1'b0;
 
`line 2909 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_m <=  1'b0;
  
`line 2911 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_m <=  1'b0;
 
`line 2913 "/tmp/lm32-customizer/tmp.v"

        m_bypass_enable_m <=  1'b0;
        branch_m <=  1'b0;
        branch_predict_m <=  1'b0;
	branch_predict_taken_m <=  1'b0;
        exception_m <=  1'b0;
        load_m <=  1'b0;
        store_m <=  1'b0;
  
`line 2921 "/tmp/lm32-customizer/tmp.v"

        direction_m <=  1'b0;
 
`line 2923 "/tmp/lm32-customizer/tmp.v"

        write_enable_m <=  1'b0;            
        write_idx_m <= { 5{1'b0}};
        condition_met_m <=  1'b0;
  
          

`line 2929 "/tmp/lm32-customizer/tmp.v"

  
`line 2930 "/tmp/lm32-customizer/tmp.v"

        debug_exception_m <=  1'b0;
        non_debug_exception_m <=  1'b0;        
 
`line 2933 "/tmp/lm32-customizer/tmp.v"

        operand_w <= { 32{1'b0}};        
        w_result_sel_load_w <=  1'b0;
  
`line 2936 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <=  1'b0;
 
`line 2938 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= { 5{1'b0}};        
        write_enable_w <=  1'b0;
  
`line 2941 "/tmp/lm32-customizer/tmp.v"

        debug_exception_w <=  1'b0;
        non_debug_exception_w <=  1'b0;        
 
          

`line 2946 "/tmp/lm32-customizer/tmp.v"

  
          

`line 2949 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        
       
        if (stall_x ==  1'b0)
        begin
  
                     

`line 2959 "/tmp/lm32-customizer/tmp.v"
        
            operand_0_x <= d_result_0;
            operand_1_x <= d_result_1;
            store_operand_x <= bypass_data_1;
            branch_target_x <= branch_reg_d ==  1'b1 ? bypass_data_0[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] : branch_target_d;            
            x_result_sel_csr_x <= x_result_sel_csr_d;
  
              

`line 2967 "/tmp/lm32-customizer/tmp.v"

      
              

`line 2970 "/tmp/lm32-customizer/tmp.v"

  
`line 2971 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_sext_x <= x_result_sel_sext_d;
 
`line 2973 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_logic_x <= x_result_sel_logic_d;
  
              

`line 2977 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_add_x <= x_result_sel_add_d;
            m_result_sel_compare_x <= m_result_sel_compare_d;
  
`line 2980 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_x <= m_result_sel_shift_d;
 
`line 2982 "/tmp/lm32-customizer/tmp.v"
    
            w_result_sel_load_x <= w_result_sel_load_d;
  
`line 2984 "/tmp/lm32-customizer/tmp.v"

            w_result_sel_mul_x <= w_result_sel_mul_d;
 
`line 2986 "/tmp/lm32-customizer/tmp.v"

            x_bypass_enable_x <= x_bypass_enable_d;
            m_bypass_enable_x <= m_bypass_enable_d;
            load_x <= load_d;
            store_x <= store_d;
            branch_x <= branch_d;
	    branch_predict_x <= branch_predict_d;
	    branch_predict_taken_x <= branch_predict_taken_d;
	    write_idx_x <= write_idx_d;
            csr_x <= csr_d;
            size_x <= size_d;
            sign_extend_x <= sign_extend_d;
            adder_op_x <= adder_op_d;
            adder_op_x_n <= ~adder_op_d;
            logic_op_x <= logic_op_d;
  
`line 3001 "/tmp/lm32-customizer/tmp.v"

            direction_x <= direction_d;
 
`line 3003 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3006 "/tmp/lm32-customizer/tmp.v"

            condition_x <= condition_d;
            csr_write_enable_x <= csr_write_enable_d;
  
`line 3009 "/tmp/lm32-customizer/tmp.v"

            break_x <= break_d;
 
`line 3011 "/tmp/lm32-customizer/tmp.v"

            scall_x <= scall_d;
  
              

`line 3015 "/tmp/lm32-customizer/tmp.v"

            eret_x <= eret_d;
  
`line 3017 "/tmp/lm32-customizer/tmp.v"

            bret_x <= bret_d; 
 
`line 3019 "/tmp/lm32-customizer/tmp.v"

            write_enable_x <= write_enable_d;
        end
        
        

        if (stall_m ==  1'b0)
        begin
            operand_m <= x_result;
            m_result_sel_compare_m <= m_result_sel_compare_x;
  
`line 3029 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_m <= m_result_sel_shift_x;
 
`line 3031 "/tmp/lm32-customizer/tmp.v"
    
            if (exception_x ==  1'b1)
            begin
                w_result_sel_load_m <=  1'b0;
  
`line 3035 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <=  1'b0;
 
`line 3037 "/tmp/lm32-customizer/tmp.v"

            end
            else
            begin
                w_result_sel_load_m <= w_result_sel_load_x;
  
`line 3042 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <= w_result_sel_mul_x;
 
`line 3044 "/tmp/lm32-customizer/tmp.v"

            end
            m_bypass_enable_m <= m_bypass_enable_x;
  
`line 3047 "/tmp/lm32-customizer/tmp.v"

            direction_m <= direction_x;
 
`line 3049 "/tmp/lm32-customizer/tmp.v"

            load_m <= load_x;
            store_m <= store_x;
      
                

`line 3054 "/tmp/lm32-customizer/tmp.v"

            branch_m <= branch_x;
	    branch_predict_m <= branch_predict_x;
	    branch_predict_taken_m <= branch_predict_taken_x;
 
`line 3058 "/tmp/lm32-customizer/tmp.v"

  
`line 3059 "/tmp/lm32-customizer/tmp.v"

	   
	   
	   
	   
	   
            if (non_debug_exception_x ==  1'b1) 
                write_idx_m <=  5'd30;
            else if (debug_exception_x ==  1'b1)
                write_idx_m <=  5'd31;
            else 
                write_idx_m <= write_idx_x;
 
               
                  
             
                  

`line 3076 "/tmp/lm32-customizer/tmp.v"

            condition_met_m <= condition_met_x;
  
`line 3078 "/tmp/lm32-customizer/tmp.v"

	   if (exception_x ==  1'b1)
	     if ((dc_re ==  1'b1)
		 || ((debug_exception_x ==  1'b1) 
		     && (non_debug_exception_x ==  1'b0)))
	       branch_target_m <= {deba, eid_x, {3{1'b0}}};
	     else
	       branch_target_m <= {eba, eid_x, {3{1'b0}}};
	   else
	     branch_target_m <= branch_target_x;
 
                      

`line 3090 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3093 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3096 "/tmp/lm32-customizer/tmp.v"

            eret_m <= eret_q_x;
  
`line 3098 "/tmp/lm32-customizer/tmp.v"

            bret_m <= bret_q_x; 
 
`line 3100 "/tmp/lm32-customizer/tmp.v"

            write_enable_m <= exception_x ==  1'b1 ?  1'b1 : write_enable_x;            
  
`line 3102 "/tmp/lm32-customizer/tmp.v"

            debug_exception_m <= debug_exception_x;
            non_debug_exception_m <= non_debug_exception_x;        
 
`line 3105 "/tmp/lm32-customizer/tmp.v"

        end
        
        
        if (stall_m ==  1'b0)
        begin
            if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
                exception_m <=  1'b1;
            else 
                exception_m <=  1'b0;
  
	           
 
					    

					 

`line 3121 "/tmp/lm32-customizer/tmp.v"

	end
                
        
  
                      

`line 3127 "/tmp/lm32-customizer/tmp.v"

        operand_w <= exception_m ==  1'b1 ? {pc_m, 2'b00} : m_result;
 
`line 3129 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_load_w <= w_result_sel_load_m;
  
`line 3131 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <= w_result_sel_mul_m;
 
`line 3133 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= write_idx_m;
  
          
          
 
           


`line 3141 "/tmp/lm32-customizer/tmp.v"

        write_enable_w <= write_enable_m;
  
`line 3143 "/tmp/lm32-customizer/tmp.v"

        debug_exception_w <= debug_exception_m;
        non_debug_exception_w <= non_debug_exception_m;
 
          

`line 3148 "/tmp/lm32-customizer/tmp.v"

  
              
                   
                   
               
	   
            

`line 3156 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 3160 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        use_buf <=  1'b0;
        reg_data_buf_0 <= { 32{1'b0}};
        reg_data_buf_1 <= { 32{1'b0}};
    end
    else
    begin
        if (stall_d ==  1'b0)
            use_buf <=  1'b0;
        else if (use_buf ==  1'b0)
        begin        
            reg_data_buf_0 <= reg_data_live_0;
            reg_data_buf_1 <= reg_data_live_1;
            use_buf <=  1'b1;
        end        
        if (reg_write_enable_q_w ==  1'b1)
        begin
            if (write_idx_w == read_idx_0_d)
                reg_data_buf_0 <= w_result;
            if (write_idx_w == read_idx_1_d)
                reg_data_buf_1 <= w_result;
        end
    end
end
 
`line 3190 "/tmp/lm32-customizer/tmp.v"


  
`line 3192 "/tmp/lm32-customizer/tmp.v"

 

   

        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
        
     
           
            
        


`line 3236 "/tmp/lm32-customizer/tmp.v"


  

   

       
    
          
          
          
          
          
 
          

          
    
    
    
          
        
 
               

           

                
              
              
              
              
        
        
              
        
             
        
            
                 
            
                
                  
                  
            
            
              
            
              
 
              

        
        
        
              
 
              

        
    


`line 3298 "/tmp/lm32-customizer/tmp.v"

      







initial
begin
  
`line 3309 "/tmp/lm32-customizer/tmp.v"

    reg_0.ram[0] = { 32{1'b0}};
    reg_1.ram[0] = { 32{1'b0}};
 
      

`line 3314 "/tmp/lm32-customizer/tmp.v"

end


        
endmodule 









































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_load_store_unit_medium_debug (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_x,
    stall_m,
    kill_x,
    kill_m,
    exception_m,
    store_operand_x,
    load_store_address_x,
    load_store_address_m,
    load_store_address_w,
    load_x,
    store_x,
    load_q_x,
    store_q_x,
    load_q_m,
    store_q_m,
    sign_extend_x,
    size_x,
  
    

`line 3392 "/tmp/lm32-customizer/tmp.v"

  
    

`line 3395 "/tmp/lm32-customizer/tmp.v"

    
    d_dat_i,
    d_ack_i,
    d_err_i,
    d_rty_i,
    
    
  
    
    
    
    

`line 3408 "/tmp/lm32-customizer/tmp.v"
    
  
    
    
    
    

`line 3414 "/tmp/lm32-customizer/tmp.v"
			     
    load_data_w,
    stall_wb_load,
    
    d_dat_o,
    d_adr_o,
    d_cyc_o,
    d_sel_o,
    d_stb_o,
    d_we_o,
    d_cti_o,
    d_lock_o,
    d_bte_o
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          
input kill_x;                                           
input kill_m;                                           
input exception_m;                                      

input [ (32-1):0] store_operand_x;                 
input [ (32-1):0] load_store_address_x;            
input [ (32-1):0] load_store_address_m;            
input [1:0] load_store_address_w;                       
input load_x;                                           
input store_x;                                          
input load_q_x;                                         
input store_q_x;                                        
input load_q_m;                                         
input store_q_m;                                        
input sign_extend_x;                                    
input [ 1:0] size_x;                          

  
                                            

`line 3473 "/tmp/lm32-customizer/tmp.v"


     
                       

`line 3477 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] d_dat_i;                         
input d_ack_i;                                          
input d_err_i;                                          
input d_rty_i;                                          





  
                            
   
                           
   
                             
   
 
   

`line 3497 "/tmp/lm32-customizer/tmp.v"


     
                                
    
                  
    
                                       
   
                             
                               

`line 3508 "/tmp/lm32-customizer/tmp.v"

   
output [ (32-1):0] load_data_w;                    
reg    [ (32-1):0] load_data_w;
output stall_wb_load;                                   
reg    stall_wb_load;

output [ (32-1):0] d_dat_o;                        
reg    [ (32-1):0] d_dat_o;
output [ (32-1):0] d_adr_o;                        
reg    [ (32-1):0] d_adr_o;
output d_cyc_o;                                         
reg    d_cyc_o;
output [ (4-1):0] d_sel_o;                 
reg    [ (4-1):0] d_sel_o;
output d_stb_o;                                         
reg    d_stb_o; 
output d_we_o;                                          
reg    d_we_o;
output [ (3-1):0] d_cti_o;                       
reg    [ (3-1):0] d_cti_o;
output d_lock_o;                                        
reg    d_lock_o;
output [ (2-1):0] d_bte_o;                       
wire   [ (2-1):0] d_bte_o;






reg [ 1:0] size_m;
reg [ 1:0] size_w;
reg sign_extend_m;
reg sign_extend_w;
reg [ (32-1):0] store_data_x;       
reg [ (32-1):0] store_data_m;       
reg [ (4-1):0] byte_enable_x;
reg [ (4-1):0] byte_enable_m;
wire [ (32-1):0] data_m;
reg [ (32-1):0] data_w;

  
                                    
 
                      
              
                                 
                  
                   
                                          
                      

`line 3560 "/tmp/lm32-customizer/tmp.v"

  
                                      
 
                                      
                    
                      
                        
                  

`line 3569 "/tmp/lm32-customizer/tmp.v"

wire wb_select_x;                                       
  
                                      
  

`line 3574 "/tmp/lm32-customizer/tmp.v"

reg wb_select_m;
reg [ (32-1):0] wb_data_m;                         
reg wb_load_complete;                                   





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






  
   
    
     
       
                    

       
       
       
       
       
       
	
              
              
              
              
              
              

                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	    
	                   
	                   
	                        
	                           
	    
	                         
	                         
	    
   
   
               
              
              
    
      
        
       
	    
	    
       
     
       
	     
	      
	  
	         
                 
	         
	            
	             
		 
	         
	     
	      
	  
	          
		   
	       
	        
       
   
          

`line 3671 "/tmp/lm32-customizer/tmp.v"


  

 
              
                       
             
               
                      
       
    
                      
                            
                    
                    
                    
                  
                  
                     
                    
                 
            
               
                
                     
    
              
            
             
             
                  
                  
    

`line 3705 "/tmp/lm32-customizer/tmp.v"







  
            
                             

`line 3715 "/tmp/lm32-customizer/tmp.v"


  
            
                             

`line 3720 "/tmp/lm32-customizer/tmp.v"

   
  
            
                               
 
                               

 
                               

                     

`line 3732 "/tmp/lm32-customizer/tmp.v"

	  
   assign wb_select_x =     1'b1
  
                          

`line 3737 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3740 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3743 "/tmp/lm32-customizer/tmp.v"

                     ;


always @(*)
begin
    case (size_x)
     2'b00:  store_data_x = {4{store_operand_x[7:0]}};
     2'b11: store_data_x = {2{store_operand_x[15:0]}};
     2'b10:  store_data_x = store_operand_x;    
    default:          store_data_x = { 32{1'bx}};
    endcase
end


always @(*)
begin
    casez ({size_x, load_store_address_x[1:0]})
    { 2'b00, 2'b11}:  byte_enable_x = 4'b0001;
    { 2'b00, 2'b10}:  byte_enable_x = 4'b0010;
    { 2'b00, 2'b01}:  byte_enable_x = 4'b0100;
    { 2'b00, 2'b00}:  byte_enable_x = 4'b1000;
    { 2'b11, 2'b1?}: byte_enable_x = 4'b0011;
    { 2'b11, 2'b0?}: byte_enable_x = 4'b1100;
    { 2'b10, 2'b??}:  byte_enable_x = 4'b1111;
    default:                   byte_enable_x = 4'bxxxx;
    endcase
end

  

       
       
       
       

`line 3778 "/tmp/lm32-customizer/tmp.v"


  

       
       
       
       

`line 3786 "/tmp/lm32-customizer/tmp.v"


  
   
   
   
   
            
	                     
	                     
   
   
           
	                  
   
   
   
   
   
           
	                            

`line 3807 "/tmp/lm32-customizer/tmp.v"

   
  
  
   
   
         
                    
                       
                      
                        
                         
                        
  
   
         
                    
                       
                      
                      
  
 
   
   
         
                    
                       
                      
                      
  
   
         
                     
                    
  
 

`line 3843 "/tmp/lm32-customizer/tmp.v"

   
   
   
         
                     
                      
                      
                      
  
   
         
                     
                    
  
 
`line 3858 "/tmp/lm32-customizer/tmp.v"

    
   
         
                     
                    
  
`line 3864 "/tmp/lm32-customizer/tmp.v"

   
   assign data_m = wb_data_m;
   
`line 3867 "/tmp/lm32-customizer/tmp.v"

  
`line 3868 "/tmp/lm32-customizer/tmp.v"

 
`line 3869 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    casez ({size_w, load_store_address_w[1:0]})
    { 2'b00, 2'b11}:  load_data_w = {{24{sign_extend_w & data_w[7]}}, data_w[7:0]};
    { 2'b00, 2'b10}:  load_data_w = {{24{sign_extend_w & data_w[15]}}, data_w[15:8]};
    { 2'b00, 2'b01}:  load_data_w = {{24{sign_extend_w & data_w[23]}}, data_w[23:16]};
    { 2'b00, 2'b00}:  load_data_w = {{24{sign_extend_w & data_w[31]}}, data_w[31:24]};
    { 2'b11, 2'b1?}: load_data_w = {{16{sign_extend_w & data_w[15]}}, data_w[15:0]};
    { 2'b11, 2'b0?}: load_data_w = {{16{sign_extend_w & data_w[31]}}, data_w[31:16]};
    { 2'b10, 2'b??}:  load_data_w = data_w;
    default:                   load_data_w = { 32{1'bx}};
    endcase
end


assign d_bte_o =  2'b00;

                  

 
     
    
    
   
   
   
    
    
    
    
   
   
     
     
    
    
    
   
         
     
     
    
    


`line 3916 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        d_cyc_o <=  1'b0;
        d_stb_o <=  1'b0;
        d_dat_o <= { 32{1'b0}};
        d_adr_o <= { 32{1'b0}};
        d_sel_o <= { 4{ 1'b0}};
        d_we_o <=  1'b0;
        d_cti_o <=  3'b111;
        d_lock_o <=  1'b0;
        wb_data_m <= { 32{1'b0}};
        wb_load_complete <=  1'b0;
        stall_wb_load <=  1'b0;
                  
          

`line 3940 "/tmp/lm32-customizer/tmp.v"
                
    end
    else
    begin
   
        
          

`line 3947 "/tmp/lm32-customizer/tmp.v"
                
        
        if (d_cyc_o ==  1'b1)
        begin
            
            if ((d_ack_i ==  1'b1) || (d_err_i ==  1'b1))
            begin
                  
                     
                
                    
                        
                
                

`line 3961 "/tmp/lm32-customizer/tmp.v"
                
                begin
                    
                    d_cyc_o <=  1'b0;
                    d_stb_o <=  1'b0;
                    d_lock_o <=  1'b0;
                end
      
                  
                
                  

`line 3972 "/tmp/lm32-customizer/tmp.v"

                
                wb_data_m <= d_dat_i;
                
                wb_load_complete <= !d_we_o;
            end
            
            if (d_err_i ==  1'b1)
                $display ("Data bus error. Address: %x", d_adr_o);
            
        end
        else
        begin
                  
               
            
                
                  
                  
                  
                                  
                  
                  
                
            
             

`line 3998 "/tmp/lm32-customizer/tmp.v"
            
                 if (   (store_q_m ==  1'b1)
                     && (stall_m ==  1'b0)
  
                        

`line 4003 "/tmp/lm32-customizer/tmp.v"

  
		        

`line 4006 "/tmp/lm32-customizer/tmp.v"
			
                    )
            begin
                
                d_dat_o <= store_data_m;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b1;
                d_cti_o <=  3'b111;
            end        
            else if (   (load_q_m ==  1'b1) 
                     && (wb_select_m ==  1'b1) 
                     && (wb_load_complete ==  1'b0)
                     
                    )
            begin
                
                stall_wb_load <=  1'b0;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b0;
                d_cti_o <=  3'b111;
            end
        end
        
        if (stall_m ==  1'b0)
            wb_load_complete <=  1'b0;
        
        if ((load_q_x ==  1'b1) && (wb_select_x ==  1'b1) && (stall_x ==  1'b0))
            stall_wb_load <=  1'b1;
        
        if ((kill_m ==  1'b1) || (exception_m ==  1'b1))
            stall_wb_load <=  1'b0;
    end
end




always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        sign_extend_m <=  1'b0;
        size_m <= 2'b00;
        byte_enable_m <=  1'b0;
        store_data_m <= { 32{1'b0}};
  
          

`line 4059 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4062 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4065 "/tmp/lm32-customizer/tmp.v"

        wb_select_m <=  1'b0;        
    end
    else
    begin
        if (stall_m ==  1'b0)
        begin
            sign_extend_m <= sign_extend_x;
            size_m <= size_x;
            byte_enable_m <= byte_enable_x;    
            store_data_m <= store_data_x;
  
              

`line 4078 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4081 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4084 "/tmp/lm32-customizer/tmp.v"

            wb_select_m <= wb_select_x;
        end
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        size_w <= 2'b00;
        data_w <= { 32{1'b0}};
        sign_extend_w <=  1'b0;
    end
    else
    begin
        size_w <= size_m;
        data_w <= data_m;
        sign_extend_w <= sign_extend_m;
    end
end








always @(posedge clk_i)
begin
    if (((load_q_m ==  1'b1) || (store_q_m ==  1'b1)) && (stall_m ==  1'b0)) 
    begin
        if ((size_m ===  2'b11) && (load_store_address_m[0] !== 1'b0))
            $display ("Warning: Non-aligned halfword access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
        if ((size_m ===  2'b10) && (load_store_address_m[1:0] !== 2'b00))
            $display ("Warning: Non-aligned word access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
    end
end



endmodule


































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"



  
`line 4165 "/tmp/lm32-customizer/tmp.v"

  
`line 4166 "/tmp/lm32-customizer/tmp.v"



  
`line 4169 "/tmp/lm32-customizer/tmp.v"

  
`line 4170 "/tmp/lm32-customizer/tmp.v"

  
`line 4171 "/tmp/lm32-customizer/tmp.v"

  
`line 4172 "/tmp/lm32-customizer/tmp.v"

  
`line 4173 "/tmp/lm32-customizer/tmp.v"

  
`line 4174 "/tmp/lm32-customizer/tmp.v"

  
`line 4175 "/tmp/lm32-customizer/tmp.v"

  
`line 4176 "/tmp/lm32-customizer/tmp.v"

  
`line 4177 "/tmp/lm32-customizer/tmp.v"

  
`line 4178 "/tmp/lm32-customizer/tmp.v"

  
`line 4179 "/tmp/lm32-customizer/tmp.v"

  
`line 4180 "/tmp/lm32-customizer/tmp.v"

  
`line 4181 "/tmp/lm32-customizer/tmp.v"

  
`line 4182 "/tmp/lm32-customizer/tmp.v"

  
`line 4183 "/tmp/lm32-customizer/tmp.v"

  
`line 4184 "/tmp/lm32-customizer/tmp.v"

  
`line 4185 "/tmp/lm32-customizer/tmp.v"

  
`line 4186 "/tmp/lm32-customizer/tmp.v"

  
`line 4187 "/tmp/lm32-customizer/tmp.v"

  
`line 4188 "/tmp/lm32-customizer/tmp.v"

  
`line 4189 "/tmp/lm32-customizer/tmp.v"

  
`line 4190 "/tmp/lm32-customizer/tmp.v"

  
`line 4191 "/tmp/lm32-customizer/tmp.v"

  
`line 4192 "/tmp/lm32-customizer/tmp.v"

  
`line 4193 "/tmp/lm32-customizer/tmp.v"

  
`line 4194 "/tmp/lm32-customizer/tmp.v"

  
`line 4195 "/tmp/lm32-customizer/tmp.v"

  
`line 4196 "/tmp/lm32-customizer/tmp.v"

  
`line 4197 "/tmp/lm32-customizer/tmp.v"

  
`line 4198 "/tmp/lm32-customizer/tmp.v"

  
`line 4199 "/tmp/lm32-customizer/tmp.v"

  
`line 4200 "/tmp/lm32-customizer/tmp.v"

  
`line 4201 "/tmp/lm32-customizer/tmp.v"

  
`line 4202 "/tmp/lm32-customizer/tmp.v"

  
`line 4203 "/tmp/lm32-customizer/tmp.v"

  
`line 4204 "/tmp/lm32-customizer/tmp.v"

  
`line 4205 "/tmp/lm32-customizer/tmp.v"

  
`line 4206 "/tmp/lm32-customizer/tmp.v"

  
`line 4207 "/tmp/lm32-customizer/tmp.v"

  
`line 4208 "/tmp/lm32-customizer/tmp.v"

  
`line 4209 "/tmp/lm32-customizer/tmp.v"

  
`line 4210 "/tmp/lm32-customizer/tmp.v"

  
`line 4211 "/tmp/lm32-customizer/tmp.v"

  
`line 4212 "/tmp/lm32-customizer/tmp.v"

  
`line 4213 "/tmp/lm32-customizer/tmp.v"






module lm32_decoder_medium_debug (
    
    instruction,
    
    d_result_sel_0,
    d_result_sel_1,        
    x_result_sel_csr,
  
    

`line 4228 "/tmp/lm32-customizer/tmp.v"
    
      
    

`line 4231 "/tmp/lm32-customizer/tmp.v"

  
`line 4232 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext,
 
`line 4234 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_logic,
  
    

`line 4238 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add,
    m_result_sel_compare,
  
`line 4241 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift,  
 
`line 4243 "/tmp/lm32-customizer/tmp.v"
    
    w_result_sel_load,
  
`line 4245 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul,
 
`line 4247 "/tmp/lm32-customizer/tmp.v"

    x_bypass_enable,
    m_bypass_enable,
    read_enable_0,
    read_idx_0,
    read_enable_1,
    read_idx_1,
    write_enable,
    write_idx,
    immediate,
    branch_offset,
    load,
    store,
    size,
    sign_extend,
    adder_op,
    logic_op,
  
`line 4264 "/tmp/lm32-customizer/tmp.v"

    direction,
 
`line 4266 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4270 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4273 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4277 "/tmp/lm32-customizer/tmp.v"

    branch,
    branch_reg,
    condition,
    bi_conditional,
    bi_unconditional,
  
`line 4283 "/tmp/lm32-customizer/tmp.v"

    break_opcode,
 
`line 4285 "/tmp/lm32-customizer/tmp.v"

    scall,
    eret,
  
`line 4288 "/tmp/lm32-customizer/tmp.v"

    bret,
 
`line 4290 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4293 "/tmp/lm32-customizer/tmp.v"

    csr_write_enable
    );





input [ (32-1):0] instruction;       





output [ 0:0] d_result_sel_0;
reg    [ 0:0] d_result_sel_0;
output [ 1:0] d_result_sel_1;
reg    [ 1:0] d_result_sel_1;
output x_result_sel_csr;
reg    x_result_sel_csr;
  
 
    

`line 4316 "/tmp/lm32-customizer/tmp.v"

      
 
    

`line 4320 "/tmp/lm32-customizer/tmp.v"

  
`line 4321 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_sext;
reg    x_result_sel_sext;
 
`line 4324 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_logic;
reg    x_result_sel_logic;
  
 
    

`line 4330 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_add;
reg    x_result_sel_add;
output m_result_sel_compare;
reg    m_result_sel_compare;
  
`line 4335 "/tmp/lm32-customizer/tmp.v"

output m_result_sel_shift;
reg    m_result_sel_shift;
 
`line 4338 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_load;
reg    w_result_sel_load;
  
`line 4341 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_mul;
reg    w_result_sel_mul;
 
`line 4344 "/tmp/lm32-customizer/tmp.v"

output x_bypass_enable;
wire   x_bypass_enable;
output m_bypass_enable;
wire   m_bypass_enable;
output read_enable_0;
wire   read_enable_0;
output [ (5-1):0] read_idx_0;
wire   [ (5-1):0] read_idx_0;
output read_enable_1;
wire   read_enable_1;
output [ (5-1):0] read_idx_1;
wire   [ (5-1):0] read_idx_1;
output write_enable;
wire   write_enable;
output [ (5-1):0] write_idx;
wire   [ (5-1):0] write_idx;
output [ (32-1):0] immediate;
wire   [ (32-1):0] immediate;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
wire   [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
output load;
wire   load;
output store;
wire   store;
output [ 1:0] size;
wire   [ 1:0] size;
output sign_extend;
wire   sign_extend;
output adder_op;
wire   adder_op;
output [ 3:0] logic_op;
wire   [ 3:0] logic_op;
  
`line 4377 "/tmp/lm32-customizer/tmp.v"

output direction;
wire   direction;
 
`line 4380 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4386 "/tmp/lm32-customizer/tmp.v"

  
 
   

`line 4390 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4396 "/tmp/lm32-customizer/tmp.v"

output branch;
wire   branch;
output branch_reg;
wire   branch_reg;
output [ (3-1):0] condition;
wire   [ (3-1):0] condition;
output bi_conditional;
wire bi_conditional;
output bi_unconditional;
wire bi_unconditional;
  
`line 4407 "/tmp/lm32-customizer/tmp.v"

output break_opcode;
wire   break_opcode;
 
`line 4410 "/tmp/lm32-customizer/tmp.v"

output scall;
wire   scall;
output eret;
wire   eret;
  
`line 4415 "/tmp/lm32-customizer/tmp.v"

output bret;
wire   bret;
 
`line 4418 "/tmp/lm32-customizer/tmp.v"

  
  
    

`line 4422 "/tmp/lm32-customizer/tmp.v"

output csr_write_enable;
wire   csr_write_enable;





wire [ (32-1):0] extended_immediate;       
wire [ (32-1):0] high_immediate;           
wire [ (32-1):0] call_immediate;           
wire [ (32-1):0] branch_immediate;         
wire sign_extend_immediate;                     
wire select_high_immediate;                     
wire select_call_immediate;                     





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







assign op_add    = instruction[ 30:26] ==  5'b01101;
assign op_and    = instruction[ 30:26] ==  5'b01000;
assign op_andhi  = instruction[ 31:26] ==  6'b011000;
assign op_b      = instruction[ 31:26] ==  6'b110000;
assign op_bi     = instruction[ 31:26] ==  6'b111000;
assign op_be     = instruction[ 31:26] ==  6'b010001;
assign op_bg     = instruction[ 31:26] ==  6'b010010;
assign op_bge    = instruction[ 31:26] ==  6'b010011;
assign op_bgeu   = instruction[ 31:26] ==  6'b010100;
assign op_bgu    = instruction[ 31:26] ==  6'b010101;
assign op_bne    = instruction[ 31:26] ==  6'b010111;
assign op_call   = instruction[ 31:26] ==  6'b110110;
assign op_calli  = instruction[ 31:26] ==  6'b111110;
assign op_cmpe   = instruction[ 30:26] ==  5'b11001;
assign op_cmpg   = instruction[ 30:26] ==  5'b11010;
assign op_cmpge  = instruction[ 30:26] ==  5'b11011;
assign op_cmpgeu = instruction[ 30:26] ==  5'b11100;
assign op_cmpgu  = instruction[ 30:26] ==  5'b11101;
assign op_cmpne  = instruction[ 30:26] ==  5'b11111;
  
       

`line 4470 "/tmp/lm32-customizer/tmp.v"

assign op_lb     = instruction[ 31:26] ==  6'b000100;
assign op_lbu    = instruction[ 31:26] ==  6'b010000;
assign op_lh     = instruction[ 31:26] ==  6'b000111;
assign op_lhu    = instruction[ 31:26] ==  6'b001011;
assign op_lw     = instruction[ 31:26] ==  6'b001010;
  
       

`line 4478 "/tmp/lm32-customizer/tmp.v"

  
`line 4479 "/tmp/lm32-customizer/tmp.v"

assign op_mul    = instruction[ 30:26] ==  5'b00010;
 
`line 4481 "/tmp/lm32-customizer/tmp.v"

assign op_nor    = instruction[ 30:26] ==  5'b00001;
assign op_or     = instruction[ 30:26] ==  5'b01110;
assign op_orhi   = instruction[ 31:26] ==  6'b011110;
assign op_raise  = instruction[ 31:26] ==  6'b101011;
assign op_rcsr   = instruction[ 31:26] ==  6'b100100;
assign op_sb     = instruction[ 31:26] ==  6'b001100;
  
`line 4488 "/tmp/lm32-customizer/tmp.v"

assign op_sextb  = instruction[ 31:26] ==  6'b101100;
assign op_sexth  = instruction[ 31:26] ==  6'b110111;
 
`line 4491 "/tmp/lm32-customizer/tmp.v"

assign op_sh     = instruction[ 31:26] ==  6'b000011;
  
`line 4493 "/tmp/lm32-customizer/tmp.v"

assign op_sl     = instruction[ 30:26] ==  5'b01111;      
 
`line 4495 "/tmp/lm32-customizer/tmp.v"

assign op_sr     = instruction[ 30:26] ==  5'b00101;
assign op_sru    = instruction[ 30:26] ==  5'b00000;
assign op_sub    = instruction[ 31:26] ==  6'b110010;
assign op_sw     = instruction[ 31:26] ==  6'b010110;
assign op_user   = instruction[ 31:26] ==  6'b110011;
assign op_wcsr   = instruction[ 31:26] ==  6'b110100;
assign op_xnor   = instruction[ 30:26] ==  5'b01001;
assign op_xor    = instruction[ 30:26] ==  5'b00110;


assign arith = op_add | op_sub;
assign logical = op_and | op_andhi | op_nor | op_or | op_orhi | op_xor | op_xnor;
assign cmp = op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne;
assign bi_conditional = op_be | op_bg | op_bge | op_bgeu  | op_bgu | op_bne;
assign bi_unconditional = op_bi;
assign bra = op_b | bi_unconditional | bi_conditional;
assign call = op_call | op_calli;
  
`line 4513 "/tmp/lm32-customizer/tmp.v"

assign shift = op_sl | op_sr | op_sru;
 
`line 4515 "/tmp/lm32-customizer/tmp.v"

  
     

`line 4518 "/tmp/lm32-customizer/tmp.v"

  
   
     

`line 4522 "/tmp/lm32-customizer/tmp.v"

  
`line 4523 "/tmp/lm32-customizer/tmp.v"

assign sext = op_sextb | op_sexth;
 
`line 4525 "/tmp/lm32-customizer/tmp.v"

  
`line 4526 "/tmp/lm32-customizer/tmp.v"

assign multiply = op_mul;
 
`line 4528 "/tmp/lm32-customizer/tmp.v"

  
    
   

`line 4532 "/tmp/lm32-customizer/tmp.v"

assign load = op_lb | op_lbu | op_lh | op_lhu | op_lw;
assign store = op_sb | op_sh | op_sw;


always @(*)
begin
    
    if (call) 
        d_result_sel_0 =  1'b1;
    else 
        d_result_sel_0 =  1'b0;
    if (call) 
        d_result_sel_1 =  2'b00;         
    else if ((instruction[31] == 1'b0) && !bra) 
        d_result_sel_1 =  2'b10;
    else
        d_result_sel_1 =  2'b01; 
    
    x_result_sel_csr =  1'b0;
  
      

`line 4554 "/tmp/lm32-customizer/tmp.v"

  
      

`line 4557 "/tmp/lm32-customizer/tmp.v"

  
`line 4558 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext =  1'b0;
 
`line 4560 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_logic =  1'b0;
          
      

`line 4564 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add =  1'b0;
    if (op_rcsr)
        x_result_sel_csr =  1'b1;
      
 
         
          

 
        
                  

 
      
                      


`line 4581 "/tmp/lm32-customizer/tmp.v"

  
      
                  

`line 4585 "/tmp/lm32-customizer/tmp.v"

  
`line 4586 "/tmp/lm32-customizer/tmp.v"

    else if (sext)
        x_result_sel_sext =  1'b1;
 
`line 4589 "/tmp/lm32-customizer/tmp.v"
        
    else if (logical) 
        x_result_sel_logic =  1'b1;
          
      
          

`line 4595 "/tmp/lm32-customizer/tmp.v"

    else 
        x_result_sel_add =  1'b1;        
    
    

    m_result_sel_compare = cmp;
  
`line 4602 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift = shift;
 
`line 4604 "/tmp/lm32-customizer/tmp.v"


    
    w_result_sel_load = load;
  
`line 4608 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul = op_mul; 
 
`line 4610 "/tmp/lm32-customizer/tmp.v"

end


assign x_bypass_enable =  arith 
                        | logical
  
                         
                         

`line 4619 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4622 "/tmp/lm32-customizer/tmp.v"

  
                         
                         

`line 4626 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 4629 "/tmp/lm32-customizer/tmp.v"
                  
  
`line 4630 "/tmp/lm32-customizer/tmp.v"

                        | sext 
 
`line 4632 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4635 "/tmp/lm32-customizer/tmp.v"

                        | op_rcsr
                        ;

assign m_bypass_enable = x_bypass_enable 
  
`line 4640 "/tmp/lm32-customizer/tmp.v"

                        | shift
 
`line 4642 "/tmp/lm32-customizer/tmp.v"

                        | cmp
                        ;

assign read_enable_0 = ~(op_bi | op_calli);
assign read_idx_0 = instruction[25:21];

assign read_enable_1 = ~(op_bi | op_calli | load);
assign read_idx_1 = instruction[20:16];

assign write_enable = ~(bra | op_raise | store | op_wcsr);
assign write_idx = call
                    ? 5'd29
                    : instruction[31] == 1'b0 
                        ? instruction[20:16] 
                        : instruction[15:11];
                        

assign size = instruction[27:26];

assign sign_extend = instruction[28];                      

assign adder_op = op_sub | op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne | bra;

assign logic_op = instruction[29:26];
  
`line 4667 "/tmp/lm32-customizer/tmp.v"


assign direction = instruction[29];
 
`line 4670 "/tmp/lm32-customizer/tmp.v"


assign branch = bra | call;
assign branch_reg = op_call | op_b;
assign condition = instruction[28:26];      
  
`line 4675 "/tmp/lm32-customizer/tmp.v"

assign break_opcode = op_raise & ~instruction[2];
 
`line 4677 "/tmp/lm32-customizer/tmp.v"

assign scall = op_raise & instruction[2];
assign eret = op_b & (instruction[25:21] == 5'd30);
  
`line 4680 "/tmp/lm32-customizer/tmp.v"

assign bret = op_b & (instruction[25:21] == 5'd31);
 
`line 4682 "/tmp/lm32-customizer/tmp.v"

  

   

`line 4686 "/tmp/lm32-customizer/tmp.v"


assign csr_write_enable = op_wcsr;



assign sign_extend_immediate = ~(op_and | op_cmpgeu | op_cmpgu | op_nor | op_or | op_xnor | op_xor);
assign select_high_immediate = op_andhi | op_orhi;
assign select_call_immediate = instruction[31];

assign high_immediate = {instruction[15:0], 16'h0000};
assign extended_immediate = {{16{sign_extend_immediate & instruction[15]}}, instruction[15:0]};
assign call_immediate = {{6{instruction[25]}}, instruction[25:0]};
assign branch_immediate = {{16{instruction[15]}}, instruction[15:0]};

assign immediate = select_high_immediate ==  1'b1 
                        ? high_immediate 
                        : extended_immediate;
   
assign branch_offset = select_call_immediate ==  1'b1   
                        ? call_immediate
                        : branch_immediate;
    
endmodule 



































					  
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 4748 "/tmp/lm32-customizer/tmp.v"


  
`line 4750 "/tmp/lm32-customizer/tmp.v"

  
`line 4751 "/tmp/lm32-customizer/tmp.v"

  
`line 4752 "/tmp/lm32-customizer/tmp.v"

  
`line 4753 "/tmp/lm32-customizer/tmp.v"


  
`line 4755 "/tmp/lm32-customizer/tmp.v"

  
`line 4756 "/tmp/lm32-customizer/tmp.v"

  
`line 4757 "/tmp/lm32-customizer/tmp.v"

  
`line 4758 "/tmp/lm32-customizer/tmp.v"


  
`line 4760 "/tmp/lm32-customizer/tmp.v"

  
`line 4761 "/tmp/lm32-customizer/tmp.v"

  
`line 4762 "/tmp/lm32-customizer/tmp.v"

  
`line 4763 "/tmp/lm32-customizer/tmp.v"


  
`line 4765 "/tmp/lm32-customizer/tmp.v"

  
`line 4766 "/tmp/lm32-customizer/tmp.v"

  
`line 4767 "/tmp/lm32-customizer/tmp.v"

  
`line 4768 "/tmp/lm32-customizer/tmp.v"

  
`line 4769 "/tmp/lm32-customizer/tmp.v"






module lm32_icache_medium_debug ( 
    
    clk_i,
    rst_i,    
    stall_a,
    stall_f,
    address_a,
    address_f,
    read_enable_f,
    refill_ready,
    refill_data,
    iflush,
  
    

`line 4789 "/tmp/lm32-customizer/tmp.v"

    valid_d,
    branch_predict_taken_d,
    
    stall_request,
    restart_request,
    refill_request,
    refill_address,
    refilling,
    inst
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    

localparam addr_offset_width = clogb2(bytes_per_line)-1-2;
localparam addr_set_width = clogb2(sets)-1;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);
localparam addr_set_lsb = (addr_offset_msb+1);
localparam addr_set_msb = (addr_set_lsb+addr_set_width-1);
localparam addr_tag_lsb = (addr_set_msb+1);
localparam addr_tag_msb = clogb2( 32'h7fffffff- 32'h0)-1;
localparam addr_tag_width = (addr_tag_msb-addr_tag_lsb+1);





input clk_i;                                        
input rst_i;                                        

input stall_a;                                      
input stall_f;                                      

input valid_d;                                      
input branch_predict_taken_d;                       
   
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_a;                     
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_f;                     
input read_enable_f;                                

input refill_ready;                                 
input [ (32-1):0] refill_data;          

input iflush;                                       
  
                                      

`line 4844 "/tmp/lm32-customizer/tmp.v"

   




output stall_request;                               
wire   stall_request;
output restart_request;                             
reg    restart_request;
output refill_request;                              
wire   refill_request;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
output refilling;                                   
reg    refilling;
output [ (32-1):0] inst;                
wire   [ (32-1):0] inst;





wire enable;
wire [0:associativity-1] way_mem_we;
wire [ (32-1):0] way_data[0:associativity-1];
wire [ ((addr_tag_width+1)-1):1] way_tag[0:associativity-1];
wire [0:associativity-1] way_valid;
wire [0:associativity-1] way_match;
wire miss;

wire [ (addr_set_width-1):0] tmem_read_address;
wire [ (addr_set_width-1):0] tmem_write_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_read_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_write_address;
wire [ ((addr_tag_width+1)-1):0] tmem_write_data;

reg [ 3:0] state;
wire flushing;
wire check;
wire refill;

reg [associativity-1:0] refill_way_select;
reg [ addr_offset_msb:addr_offset_lsb] refill_offset;
wire last_refill;
reg [ (addr_set_width-1):0] flush_set;

genvar i;





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






   generate
      for (i = 0; i < associativity; i = i + 1)
	begin : memories
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 (32),
	       .address_width              ( (addr_offset_width+addr_set_width))

) 
	   way_0_data_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (dmem_read_address),
	      .enable_read                (enable),
	      .write_address              (dmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i]),
	      .write_data                 (refill_data),    
	      
	      .read_data                  (way_data[i])
	      );
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 ( (addr_tag_width+1)),
	       .address_width              ( addr_set_width)

	       ) 
	   way_0_tag_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (tmem_read_address),
	      .enable_read                (enable),
	      .write_address              (tmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i] | flushing),
	      .write_data                 (tmem_write_data),
	      
	      .read_data                  ({way_tag[i], way_valid[i]})
	      );
	   
	end
endgenerate






generate
    for (i = 0; i < associativity; i = i + 1)
    begin : match
assign way_match[i] = ({way_tag[i], way_valid[i]} == {address_f[ addr_tag_msb:addr_tag_lsb],  1'b1});
    end
endgenerate


generate
    if (associativity == 1)
    begin : inst_1
assign inst = way_match[0] ? way_data[0] : 32'b0;
    end
    else if (associativity == 2)
	 begin : inst_2
assign inst = way_match[0] ? way_data[0] : (way_match[1] ? way_data[1] : 32'b0);
    end
endgenerate


generate 
    if (bytes_per_line > 4)
assign dmem_write_address = {refill_address[ addr_set_msb:addr_set_lsb], refill_offset};
    else
assign dmem_write_address = refill_address[ addr_set_msb:addr_set_lsb];
endgenerate
    
assign dmem_read_address = address_a[ addr_set_msb:addr_offset_lsb];


assign tmem_read_address = address_a[ addr_set_msb:addr_set_lsb];
assign tmem_write_address = flushing 
                                ? flush_set
                                : refill_address[ addr_set_msb:addr_set_lsb];


generate 
    if (bytes_per_line > 4)                            
assign last_refill = refill_offset == {addr_offset_width{1'b1}};
    else
assign last_refill =  1'b1;
endgenerate


assign enable = (stall_a ==  1'b0);


generate
    if (associativity == 1) 
    begin : we_1     
assign way_mem_we[0] = (refill_ready ==  1'b1);
    end
    else
    begin : we_2
assign way_mem_we[0] = (refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1);
assign way_mem_we[1] = (refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1);
    end
endgenerate                     


assign tmem_write_data[ 0] = last_refill & !flushing;
assign tmem_write_data[ ((addr_tag_width+1)-1):1] = refill_address[ addr_tag_msb:addr_tag_lsb];


assign flushing = |state[1:0];
assign check = state[2];
assign refill = state[3];

assign miss = (~(|way_match)) && (read_enable_f ==  1'b1) && (stall_f ==  1'b0) && !(valid_d && branch_predict_taken_d);
assign stall_request = (check ==  1'b0);
assign refill_request = (refill ==  1'b1);
                      





generate
    if (associativity >= 2) 
    begin : way_select      
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_way_select <= {{associativity-1{1'b0}}, 1'b1};
    else
    begin        
        if (miss ==  1'b1)
            refill_way_select <= {refill_way_select[0], refill_way_select[1]};
    end
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refilling <=  1'b0;
    else
        refilling <= refill;
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'b0001;
        flush_set <= { addr_set_width{1'b1}};
        refill_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        restart_request <=  1'b0;
    end
    else 
    begin
        case (state)

        
         4'b0001:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
                state <=  4'b0100;
            flush_set <= flush_set - 1'b1;
        end

        
         4'b0010:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
  
	       
                  
	      

`line 5093 "/tmp/lm32-customizer/tmp.v"

		state <=  4'b0100;
	   
            flush_set <= flush_set - 1'b1;
        end
        
        
         4'b0100:
        begin            
            if (stall_a ==  1'b0)
                restart_request <=  1'b0;
            if (iflush ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b0010;
            end
            else if (miss ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b1000;
            end
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
            begin
                if (last_refill ==  1'b1)
                begin
                    restart_request <=  1'b1;
                    state <=  4'b0100;
                end
            end
        end

        endcase        
    end
end

generate 
    if (bytes_per_line > 4)
    begin

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_offset <= {addr_offset_width{1'b0}};
    else 
    begin
        case (state)
        
        
         4'b0100:
        begin            
            if (iflush ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
            else if (miss ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
                refill_offset <= refill_offset + 1'b1;
        end

        endcase        
    end
end
    end
endgenerate
   
endmodule

 
`line 5169 "/tmp/lm32-customizer/tmp.v"































								 
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

           
              
              
              

           
             
           
             

                
                  
              
            

                 
               
               
              





   
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    





                               
                                      
                             
                                
                                       

   
   
   
   
   
   
   
   
   





                                             
                                             

                                           
                                           
                                           

                         
                         
                                          
                                         
                        
          

                                      
                       

                                            





                                    
   
                                  
    
                                   
    
                   
     
                                        
    
                        
    





                                   
                                  
                     
                     
        
  
                       
                       
                                               

          
         
          
         
                 
                     

                           
                                           
                                              
                                             

                                        
                
             
                                        
                   

  





 





   
                     
	  
	   
              
               
		 
		  
		    
		     
		     

		      
		    
		     
		      
		      
		      
		      
		      
		      
		      
		      
		          
		     
		      
		         
             
           
             
		               
		    
		      
		       
			 
			  
			  

			   
			 
			  
			   
			   
			   
			   
			   
			   
			   
			       
			       
			  
			   
			  
		  
             
	   
	   
	    
	     
	       
	        
	        

	         
	       
		
		 
		 
		 
		 
		 
		 
		 
		 
		 
		
		  
		
	
      
   







               
      
       
    




           
	   
   
    
        
	   
        
    



       
    

 

       
          
    
    
              
              
              
              
    

    
    
    

 

       
          
    
          

    



 
        
      
                              
                             
    
      
                             
                             

   

     
                             
                             
   


 
                                   
     
    
   



     
       


         



        
           
             
         
     
     
      
                 
                 
             
             
    



             
   


   
   
   

           
     
                      






        
            
   

       
           
    
            
           
               
    

     
   


   

       
          
     
          



   

       
    
          
          
          
          
          
    
     
    
         

        
        
        
               
                  
                
        
        
        
        
        
               
                  
               
            
                  
                  
                  
            
                
                  
        

        
        
        
              
               
            
                   
                
                      
                      
                
            
        
        
                
    



       
    

   

       
          
     
    
         
        
        
        
        
               
                  
        

        
        
        
               
                    
        
        
                
    

    





`line 5675 "/tmp/lm32-customizer/tmp.v"

































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 5710 "/tmp/lm32-customizer/tmp.v"



  
`line 5713 "/tmp/lm32-customizer/tmp.v"

  
`line 5714 "/tmp/lm32-customizer/tmp.v"

  
`line 5715 "/tmp/lm32-customizer/tmp.v"

  
`line 5716 "/tmp/lm32-customizer/tmp.v"

  
`line 5717 "/tmp/lm32-customizer/tmp.v"

  
`line 5718 "/tmp/lm32-customizer/tmp.v"






module lm32_debug_medium_debug (
    
    clk_i, 
    rst_i,
    pc_x,
    load_x,
    store_x,
    load_store_address_x,
    csr_write_enable_x,
    csr_write_data,
    csr_x,
  
`line 5735 "/tmp/lm32-customizer/tmp.v"

    jtag_csr_write_enable,
    jtag_csr_write_data,
    jtag_csr,
 
`line 5739 "/tmp/lm32-customizer/tmp.v"

  
`line 5740 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
    bret_q_x,
    stall_x,
    exception_x,
    q_x,
  
    

`line 5748 "/tmp/lm32-customizer/tmp.v"

 
`line 5749 "/tmp/lm32-customizer/tmp.v"

    
  
`line 5751 "/tmp/lm32-customizer/tmp.v"

    dc_ss,
 
`line 5753 "/tmp/lm32-customizer/tmp.v"

    dc_re,
    bp_match,
    wp_match
    );
    




parameter breakpoints = 0;                      
parameter watchpoints = 0;                      





input clk_i;                                    
input rst_i;                                    

input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                      
input load_x;                                   
input store_x;                                  
input [ (32-1):0] load_store_address_x;    
input csr_write_enable_x;                       
input [ (32-1):0] csr_write_data;          
input [ (5-1):0] csr_x;                    
  
`line 5780 "/tmp/lm32-customizer/tmp.v"

input jtag_csr_write_enable;                    
input [ (32-1):0] jtag_csr_write_data;     
input [ (5-1):0] jtag_csr;                 
 
`line 5784 "/tmp/lm32-customizer/tmp.v"

  
`line 5785 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
input bret_q_x;                                 
input stall_x;                                  
input exception_x;                              
input q_x;                                      
  
                     

`line 5793 "/tmp/lm32-customizer/tmp.v"

 
`line 5794 "/tmp/lm32-customizer/tmp.v"






  
`line 5800 "/tmp/lm32-customizer/tmp.v"

output dc_ss;                                   
reg    dc_ss;
 
`line 5803 "/tmp/lm32-customizer/tmp.v"

output dc_re;                                   
reg    dc_re;
output bp_match;                                
wire   bp_match;        
output wp_match;                                
wire   wp_match;





genvar i;                                       



reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] bp_a[0:breakpoints-1];       
reg bp_e[0:breakpoints-1];                      
wire [0:breakpoints-1]bp_match_n;               

reg [ 1:0] wpc_c[0:watchpoints-1];   
reg [ (32-1):0] wp[0:watchpoints-1];       
wire [0:watchpoints]wp_match_n;               

wire debug_csr_write_enable;                    
wire [ (32-1):0] debug_csr_write_data;     
wire [ (5-1):0] debug_csr;                 

  
`line 5831 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;           

 
`line 5835 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







generate
    for (i = 0; i < breakpoints; i = i + 1)
    begin : bp_comb
assign bp_match_n[i] = ((bp_a[i] == pc_x) && (bp_e[i] ==  1'b1));
    end
endgenerate
generate 
  
`line 5855 "/tmp/lm32-customizer/tmp.v"

    if (breakpoints > 0) 
assign bp_match = (|bp_match_n) || (state ==  3'b011);
    else
assign bp_match = state ==  3'b011;
 
        
   
    
   

`line 5865 "/tmp/lm32-customizer/tmp.v"

endgenerate    
               

generate 
    for (i = 0; i < watchpoints; i = i + 1)
    begin : wp_comb
assign wp_match_n[i] = (wp[i] == load_store_address_x) && ((load_x & wpc_c[i][0]) | (store_x & wpc_c[i][1]));
    end               
endgenerate
generate
    if (watchpoints > 0) 
assign wp_match = |wp_match_n;                
    else
assign wp_match =  1'b0;
endgenerate
                
  
`line 5882 "/tmp/lm32-customizer/tmp.v"
                

assign debug_csr_write_enable = (csr_write_enable_x ==  1'b1) || (jtag_csr_write_enable ==  1'b1);
assign debug_csr_write_data = jtag_csr_write_enable ==  1'b1 ? jtag_csr_write_data : csr_write_data;
assign debug_csr = jtag_csr_write_enable ==  1'b1 ? jtag_csr : csr_x;
 
   
   
   

`line 5891 "/tmp/lm32-customizer/tmp.v"







generate
    for (i = 0; i < breakpoints; i = i + 1)
    begin : bp_seq
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        bp_a[i] <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        bp_e[i] <=  1'b0;
    end
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h10 + i))
        begin
            bp_a[i] <= debug_csr_write_data[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2];
            bp_e[i] <= debug_csr_write_data[0];
        end
    end
end    
    end
endgenerate


generate
    for (i = 0; i < watchpoints; i = i + 1)
    begin : wp_seq
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        wp[i] <= { 32{1'bx}};
        wpc_c[i] <=  2'b00;
    end
    else
    begin
        if (debug_csr_write_enable ==  1'b1)
        begin
            if (debug_csr ==  5'h8)
                wpc_c[i] <= debug_csr_write_data[3+i*2:2+i*2];
            if (debug_csr ==  5'h18 + i)
                wp[i] <= debug_csr_write_data;
        end
    end  
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        dc_re <=  1'b0;
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h8))
            dc_re <= debug_csr_write_data[1];
    end
end    

  
`line 5957 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  3'b000;
        dc_ss <=  1'b0;
    end
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h8))
        begin
            dc_ss <= debug_csr_write_data[0];
            if (debug_csr_write_data[0] ==  1'b0) 
                state <=  3'b000;
            else 
                state <=  3'b001;
        end
        case (state)
         3'b001:
        begin
            
            if (   (   (eret_q_x ==  1'b1)
                    || (bret_q_x ==  1'b1)
                    )
                && (stall_x ==  1'b0)
               )
                state <=  3'b010; 
        end
         3'b010:
        begin
            
            if ((q_x ==  1'b1) && (stall_x ==  1'b0))
                state <=  3'b011;
        end
         3'b011:
        begin
            
  
               
                  
             

`line 6000 "/tmp/lm32-customizer/tmp.v"

                 if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
            begin
                dc_ss <=  1'b0;
                state <=  3'b100;
            end
        end
         3'b100:
        begin
            
  
               
                  
             

`line 6014 "/tmp/lm32-customizer/tmp.v"

                state <=  3'b000;
        end
        endcase
    end
end
 
`line 6020 "/tmp/lm32-customizer/tmp.v"


endmodule

 
`line 6024 "/tmp/lm32-customizer/tmp.v"















































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_instruction_unit_medium_debug (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_f,
    stall_d,
    stall_x,
    stall_m,
    valid_f,
    valid_d,
    kill_f,
    branch_predict_taken_d,
    branch_predict_address_d,
      
    
    

`line 6095 "/tmp/lm32-customizer/tmp.v"

    exception_m,
    branch_taken_m,
    branch_mispredict_taken_m,
    branch_target_m,
  
`line 6100 "/tmp/lm32-customizer/tmp.v"

    iflush,
 
`line 6102 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 6107 "/tmp/lm32-customizer/tmp.v"
        
  
    
    
    

`line 6112 "/tmp/lm32-customizer/tmp.v"

  
`line 6113 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_i,
    i_ack_i,
    i_err_i,
    i_rty_i,
 
`line 6119 "/tmp/lm32-customizer/tmp.v"

  
`line 6120 "/tmp/lm32-customizer/tmp.v"

    jtag_read_enable,
    jtag_write_enable,
    jtag_write_data,
    jtag_address,
 
`line 6125 "/tmp/lm32-customizer/tmp.v"

    
    
    pc_f,
    pc_d,
    pc_x,
    pc_m,
    pc_w,
  
`line 6133 "/tmp/lm32-customizer/tmp.v"

    icache_stall_request,
    icache_restart_request,
    icache_refill_request,
    icache_refilling,
 
`line 6138 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6141 "/tmp/lm32-customizer/tmp.v"

  
`line 6142 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_o,
    i_adr_o,
    i_cyc_o,
    i_sel_o,
    i_stb_o,
    i_we_o,
    i_cti_o,
    i_lock_o,
    i_bte_o,
 
`line 6153 "/tmp/lm32-customizer/tmp.v"

  
`line 6154 "/tmp/lm32-customizer/tmp.v"

    jtag_read_data,
    jtag_access_complete,
 
`line 6157 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6160 "/tmp/lm32-customizer/tmp.v"

  
`line 6161 "/tmp/lm32-customizer/tmp.v"

    instruction_f,
 
`line 6163 "/tmp/lm32-customizer/tmp.v"
    
    instruction_d
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_f;                                          
input stall_d;                                          
input stall_x;                                          
input stall_m;                                          
input valid_f;                                          
input valid_d;                                          
input kill_f;                                           

input branch_predict_taken_d;                           
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;          
   
      
                                    
                     

`line 6204 "/tmp/lm32-customizer/tmp.v"

input exception_m;
input branch_taken_m;                                   
input branch_mispredict_taken_m;                        
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;                   

  
`line 6210 "/tmp/lm32-customizer/tmp.v"

input iflush;                                           
 
`line 6212 "/tmp/lm32-customizer/tmp.v"

  
                            
                             
 

`line 6217 "/tmp/lm32-customizer/tmp.v"
        

  
                 
                   
                                        

`line 6223 "/tmp/lm32-customizer/tmp.v"


  
`line 6225 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] i_dat_i;                         
input i_ack_i;                                          
input i_err_i;                                          
input i_rty_i;                                          
 
`line 6230 "/tmp/lm32-customizer/tmp.v"


  
`line 6232 "/tmp/lm32-customizer/tmp.v"

input jtag_read_enable;                                 
input jtag_write_enable;                                
input [ 7:0] jtag_write_data;                 
input [ (32-1):0] jtag_address;                    
 
`line 6237 "/tmp/lm32-customizer/tmp.v"





        
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;

  
`line 6254 "/tmp/lm32-customizer/tmp.v"

output icache_stall_request;                            
wire   icache_stall_request;
output icache_restart_request;                          
wire   icache_restart_request;
output icache_refill_request;                           
wire   icache_refill_request;
output icache_refilling;                                
wire   icache_refilling;
 
`line 6263 "/tmp/lm32-customizer/tmp.v"


  
                      
                          

`line 6268 "/tmp/lm32-customizer/tmp.v"
   

  
`line 6270 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_dat_o;                        
  
`line 6272 "/tmp/lm32-customizer/tmp.v"

reg    [ (32-1):0] i_dat_o;
 
    

`line 6276 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_adr_o;                        
reg    [ (32-1):0] i_adr_o;
output i_cyc_o;                                         
reg    i_cyc_o; 
output [ (4-1):0] i_sel_o;                 
  
`line 6282 "/tmp/lm32-customizer/tmp.v"

reg    [ (4-1):0] i_sel_o;
 
    

`line 6286 "/tmp/lm32-customizer/tmp.v"

output i_stb_o;                                         
reg    i_stb_o;
output i_we_o;                                          
  
`line 6290 "/tmp/lm32-customizer/tmp.v"

reg    i_we_o;
 
   

`line 6294 "/tmp/lm32-customizer/tmp.v"

output [ (3-1):0] i_cti_o;                       
reg    [ (3-1):0] i_cti_o;
output i_lock_o;                                        
reg    i_lock_o;
output [ (2-1):0] i_bte_o;                       
wire   [ (2-1):0] i_bte_o;
 
`line 6301 "/tmp/lm32-customizer/tmp.v"


  
`line 6303 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_read_data;                 
reg    [ 7:0] jtag_read_data;
output jtag_access_complete;                            
wire   jtag_access_complete;
 
`line 6308 "/tmp/lm32-customizer/tmp.v"


  
                                      
    

`line 6313 "/tmp/lm32-customizer/tmp.v"

  
`line 6314 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_f;           
wire   [ (32-1):0] instruction_f;
 
`line 6317 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_d;           
reg    [ (32-1):0] instruction_d;





reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_a;                                

  
`line 6327 "/tmp/lm32-customizer/tmp.v"

reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] restart_address;                     
 
`line 6329 "/tmp/lm32-customizer/tmp.v"


  
`line 6331 "/tmp/lm32-customizer/tmp.v"

wire icache_read_enable_f;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] icache_refill_address;              
reg icache_refill_ready;                                
reg [ (32-1):0] icache_refill_data;         
wire [ (32-1):0] icache_data_f;             
wire [ (3-1):0] first_cycle_type;                
wire [ (3-1):0] next_cycle_type;                 
wire last_word;                                         
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] first_address;                      
 
 
                    


`line 6345 "/tmp/lm32-customizer/tmp.v"

  
                                      
                                       
                 

`line 6350 "/tmp/lm32-customizer/tmp.v"

  
`line 6351 "/tmp/lm32-customizer/tmp.v"

 
               

`line 6354 "/tmp/lm32-customizer/tmp.v"

  
                                         

`line 6357 "/tmp/lm32-customizer/tmp.v"


  
`line 6359 "/tmp/lm32-customizer/tmp.v"

reg jtag_access;                                        
 
`line 6361 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







    
    
     
       
                    
	 
       
       
       
       
       
       
	 
              
              
              
              
              
              
	 
                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	                   
	                     
	                        
	                         
	    
	                         
	                         
	    

`line 6420 "/tmp/lm32-customizer/tmp.v"
    
 
  
`line 6422 "/tmp/lm32-customizer/tmp.v"


lm32_icache_medium_debug #(
    .associativity          (associativity),
    .sets                   (sets),
    .bytes_per_line         (bytes_per_line),
    .base_address           (base_address),
    .limit                  (limit)
    ) icache ( 
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),      
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .valid_d                (valid_d),
    .address_a              (pc_a),
    .address_f              (pc_f),
    .read_enable_f          (icache_read_enable_f),
    .refill_ready           (icache_refill_ready),
    .refill_data            (icache_refill_data),
    .iflush                 (iflush),
    
    .stall_request          (icache_stall_request),
    .restart_request        (icache_restart_request),
    .refill_request         (icache_refill_request),
    .refill_address         (icache_refill_address),
    .refilling              (icache_refilling),
    .inst                   (icache_data_f)
    );
 
`line 6452 "/tmp/lm32-customizer/tmp.v"






  
`line 6458 "/tmp/lm32-customizer/tmp.v"


assign icache_read_enable_f =    (valid_f ==  1'b1)
                              && (kill_f ==  1'b0)
  
                                 

`line 6464 "/tmp/lm32-customizer/tmp.v"
                         
   
                                 

`line 6467 "/tmp/lm32-customizer/tmp.v"
       
                              ;
 
`line 6469 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    
  
       
          
     

`line 6479 "/tmp/lm32-customizer/tmp.v"
    
      if (branch_taken_m ==  1'b1)
	if ((branch_mispredict_taken_m ==  1'b1) && (exception_m ==  1'b0))
	  pc_a = pc_x;
	else
          pc_a = branch_target_m;
      
          
          

`line 6488 "/tmp/lm32-customizer/tmp.v"

      else
	if ( (valid_d ==  1'b1) && (branch_predict_taken_d ==  1'b1) )
	  pc_a = branch_predict_address_d;
	else
  
`line 6493 "/tmp/lm32-customizer/tmp.v"

          if (icache_restart_request ==  1'b1)
            pc_a = restart_address;
	  else 
 
`line 6497 "/tmp/lm32-customizer/tmp.v"
        
            pc_a = pc_f + 1'b1;
end


  
           

`line 6504 "/tmp/lm32-customizer/tmp.v"

                     

  
`line 6507 "/tmp/lm32-customizer/tmp.v"

  
         

`line 6510 "/tmp/lm32-customizer/tmp.v"

assign instruction_f = icache_data_f;
 
`line 6512 "/tmp/lm32-customizer/tmp.v"

 
 
 
         

   


   


`line 6523 "/tmp/lm32-customizer/tmp.v"



  
`line 6526 "/tmp/lm32-customizer/tmp.v"

  
`line 6527 "/tmp/lm32-customizer/tmp.v"

 
   
   
   

`line 6532 "/tmp/lm32-customizer/tmp.v"

assign i_bte_o =  2'b00;
 
`line 6534 "/tmp/lm32-customizer/tmp.v"


  
`line 6536 "/tmp/lm32-customizer/tmp.v"


generate
    case (bytes_per_line)
    4:
    begin
assign first_cycle_type =  3'b111;
assign next_cycle_type =  3'b111;
assign last_word =  1'b1;
assign first_address = icache_refill_address;
    end
    8:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type =  3'b111;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 1'b1;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    16:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type = i_adr_o[addr_offset_msb] == 1'b1 ?  3'b111 :  3'b010;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 2'b11;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    endcase
endgenerate
 
`line 6563 "/tmp/lm32-customizer/tmp.v"

                     





always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        pc_f <= ( 32'h00000000-4)/4;
        pc_d <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_w <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    end
    else
    begin
        if (stall_f ==  1'b0)
            pc_f <= pc_a;
        if (stall_d ==  1'b0)
            pc_d <= pc_f;
        if (stall_x ==  1'b0)
            pc_x <= pc_d;
        if (stall_m ==  1'b0)
            pc_m <= pc_x;
        pc_w <= pc_m;
    end
end

  
`line 6594 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        restart_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    else
    begin
  
         
            
               
                  
                    
                  

               
                  


`line 6613 "/tmp/lm32-customizer/tmp.v"

  
`line 6614 "/tmp/lm32-customizer/tmp.v"
        
            if (icache_refill_request ==  1'b1)
                restart_address <= icache_refill_address;
 
`line 6617 "/tmp/lm32-customizer/tmp.v"

 
`line 6618 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 6621 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
    
           
              
    


`line 6635 "/tmp/lm32-customizer/tmp.v"


  
`line 6637 "/tmp/lm32-customizer/tmp.v"

assign jtag_access_complete = (i_cyc_o ==  1'b1) && ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1)) && (jtag_access ==  1'b1);
always @(*)
begin
    case (jtag_address[1:0])
    2'b00: jtag_read_data = i_dat_i[ 31:24];
    2'b01: jtag_read_data = i_dat_i[ 23:16];
    2'b10: jtag_read_data = i_dat_i[ 15:8];
    2'b11: jtag_read_data = i_dat_i[ 7:0];
    endcase 
end
 
`line 6648 "/tmp/lm32-customizer/tmp.v"


  
`line 6650 "/tmp/lm32-customizer/tmp.v"


  
`line 6652 "/tmp/lm32-customizer/tmp.v"
                
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        i_cyc_o <=  1'b0;
        i_stb_o <=  1'b0;
        i_adr_o <= { 32{1'b0}};
        i_cti_o <=  3'b111;
        i_lock_o <=  1'b0;
        icache_refill_data <= { 32{1'b0}};
        icache_refill_ready <=  1'b0;
  
          

`line 6666 "/tmp/lm32-customizer/tmp.v"

  
`line 6667 "/tmp/lm32-customizer/tmp.v"

        i_we_o <=  1'b0;
        i_sel_o <= 4'b1111;
        jtag_access <=  1'b0;
 
`line 6671 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin   
        icache_refill_ready <=  1'b0;
        
        if (i_cyc_o ==  1'b1)
        begin
            
            if ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1))
            begin
  
`line 6682 "/tmp/lm32-customizer/tmp.v"

                if (jtag_access ==  1'b1)
                begin
                    i_cyc_o <=  1'b0;
                    i_stb_o <=  1'b0;       
                    i_we_o <=  1'b0;  
                    jtag_access <=  1'b0;    
                end
                else
 
`line 6691 "/tmp/lm32-customizer/tmp.v"

                begin
                    if (last_word ==  1'b1)
                    begin
                        
                        i_cyc_o <=  1'b0;
                        i_stb_o <=  1'b0;
                        i_lock_o <=  1'b0;
                    end
                    
                    i_adr_o[addr_offset_msb:addr_offset_lsb] <= i_adr_o[addr_offset_msb:addr_offset_lsb] + 1'b1;
                    i_cti_o <= next_cycle_type;
                    
                    icache_refill_ready <=  1'b1;
                    icache_refill_data <= i_dat_i;
                end
            end
  
               
            
                  
                  
            

`line 6714 "/tmp/lm32-customizer/tmp.v"

        end
        else
        begin
            if ((icache_refill_request ==  1'b1) && (icache_refill_ready ==  1'b0))
            begin
                
  
`line 6721 "/tmp/lm32-customizer/tmp.v"
     
                i_sel_o <= 4'b1111;
 
`line 6723 "/tmp/lm32-customizer/tmp.v"

                i_adr_o <= {first_address, 2'b00};
                i_cyc_o <=  1'b1;
                i_stb_o <=  1'b1;                
                i_cti_o <= first_cycle_type;
                
  
                  

`line 6731 "/tmp/lm32-customizer/tmp.v"

            end
  
`line 6733 "/tmp/lm32-customizer/tmp.v"

            else
            begin
                if ((jtag_read_enable ==  1'b1) || (jtag_write_enable ==  1'b1))
                begin
                    case (jtag_address[1:0])
                    2'b00: i_sel_o <= 4'b1000;
                    2'b01: i_sel_o <= 4'b0100;
                    2'b10: i_sel_o <= 4'b0010;
                    2'b11: i_sel_o <= 4'b0001;
                    endcase
                    i_adr_o <= jtag_address;
                    i_dat_o <= {4{jtag_write_data}};
                    i_cyc_o <=  1'b1;
                    i_stb_o <=  1'b1;
                    i_we_o <= jtag_write_enable;
                    i_cti_o <=  3'b111;
                    jtag_access <=  1'b1;
                end
            end 
 
`line 6753 "/tmp/lm32-customizer/tmp.v"
                    
  
            
            
     
               
                  

               
                  

`line 6763 "/tmp/lm32-customizer/tmp.v"

        end
    end
end
 
   

       
    
          
          
          
          
          
          
 
          

    
    
       
        
           
        
            
                  
            
                
                  
                  
                
                  
            
 
               
            
                  
                  
            

        
        
        
            
                   
  
                   
       
               
            
                
      
                  

                   
                  
                  
 
                  

            
	    
	    
	               
  
		       
       
	           
		
 
		      

		
	    
        
    


`line 6840 "/tmp/lm32-customizer/tmp.v"

 
`line 6841 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        instruction_d <= { 32{1'b0}};
  
          

`line 6851 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        if (stall_d ==  1'b0)
        begin
            instruction_d <= instruction_f;
  
              

`line 6860 "/tmp/lm32-customizer/tmp.v"

        end
    end
end  
  
endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 6896 "/tmp/lm32-customizer/tmp.v"


  
`line 6898 "/tmp/lm32-customizer/tmp.v"

  
`line 6899 "/tmp/lm32-customizer/tmp.v"

  
`line 6900 "/tmp/lm32-customizer/tmp.v"



  
`line 6903 "/tmp/lm32-customizer/tmp.v"

  
`line 6904 "/tmp/lm32-customizer/tmp.v"

  
`line 6905 "/tmp/lm32-customizer/tmp.v"

  
`line 6906 "/tmp/lm32-customizer/tmp.v"

  
`line 6907 "/tmp/lm32-customizer/tmp.v"

  
`line 6908 "/tmp/lm32-customizer/tmp.v"

  
`line 6909 "/tmp/lm32-customizer/tmp.v"

  
`line 6910 "/tmp/lm32-customizer/tmp.v"



  
`line 6913 "/tmp/lm32-customizer/tmp.v"

  
`line 6914 "/tmp/lm32-customizer/tmp.v"

  
`line 6915 "/tmp/lm32-customizer/tmp.v"

  
`line 6916 "/tmp/lm32-customizer/tmp.v"

  
`line 6917 "/tmp/lm32-customizer/tmp.v"

  
`line 6918 "/tmp/lm32-customizer/tmp.v"

  
`line 6919 "/tmp/lm32-customizer/tmp.v"

  
`line 6920 "/tmp/lm32-customizer/tmp.v"

  
`line 6921 "/tmp/lm32-customizer/tmp.v"

  
`line 6922 "/tmp/lm32-customizer/tmp.v"






module lm32_jtag_medium_debug (
    
    clk_i,
    rst_i,
    jtag_clk, 
    jtag_update,
    jtag_reg_q,
    jtag_reg_addr_q,
  
`line 6936 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_enable,
    csr_write_data,
    stall_x,
 
`line 6941 "/tmp/lm32-customizer/tmp.v"

  
`line 6942 "/tmp/lm32-customizer/tmp.v"

    jtag_read_data,
    jtag_access_complete,
 
`line 6945 "/tmp/lm32-customizer/tmp.v"

  
`line 6946 "/tmp/lm32-customizer/tmp.v"

    exception_q_w,
 
`line 6948 "/tmp/lm32-customizer/tmp.v"

    
  
`line 6950 "/tmp/lm32-customizer/tmp.v"

    jtx_csr_read_data,
    jrx_csr_read_data,
 
`line 6953 "/tmp/lm32-customizer/tmp.v"

  
`line 6954 "/tmp/lm32-customizer/tmp.v"

    jtag_csr_write_enable,
    jtag_csr_write_data,
    jtag_csr,
    jtag_read_enable,
    jtag_write_enable,
    jtag_write_data,
    jtag_address,
 
`line 6962 "/tmp/lm32-customizer/tmp.v"

  
`line 6963 "/tmp/lm32-customizer/tmp.v"

    jtag_break,
    jtag_reset,
 
`line 6966 "/tmp/lm32-customizer/tmp.v"

    jtag_reg_d,
    jtag_reg_addr_d
    );





input clk_i;                                            
input rst_i;                                            

input jtag_clk;                                         
input jtag_update;                                      
input [ 7:0] jtag_reg_q;                      
input [2:0] jtag_reg_addr_q;                            

  
`line 6983 "/tmp/lm32-customizer/tmp.v"

input [ (5-1):0] csr;                              
input csr_write_enable;                                 
input [ (32-1):0] csr_write_data;                  
input stall_x;                                          
 
`line 6988 "/tmp/lm32-customizer/tmp.v"

  
`line 6989 "/tmp/lm32-customizer/tmp.v"

input [ 7:0] jtag_read_data;                  
input jtag_access_complete;                             
 
`line 6992 "/tmp/lm32-customizer/tmp.v"

  
`line 6993 "/tmp/lm32-customizer/tmp.v"

input exception_q_w;                                    
 
`line 6995 "/tmp/lm32-customizer/tmp.v"





       
  
`line 7001 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] jtx_csr_read_data;              
wire   [ (32-1):0] jtx_csr_read_data;
output [ (32-1):0] jrx_csr_read_data;              
wire   [ (32-1):0] jrx_csr_read_data;
 
`line 7006 "/tmp/lm32-customizer/tmp.v"

  
`line 7007 "/tmp/lm32-customizer/tmp.v"

output jtag_csr_write_enable;                           
reg    jtag_csr_write_enable;
output [ (32-1):0] jtag_csr_write_data;            
wire   [ (32-1):0] jtag_csr_write_data;
output [ (5-1):0] jtag_csr;                        
wire   [ (5-1):0] jtag_csr;
output jtag_read_enable;                                
reg    jtag_read_enable;
output jtag_write_enable;                               
reg    jtag_write_enable;
output [ 7:0] jtag_write_data;                
wire   [ 7:0] jtag_write_data;        
output [ (32-1):0] jtag_address;                   
wire   [ (32-1):0] jtag_address;
 
`line 7022 "/tmp/lm32-customizer/tmp.v"

  
`line 7023 "/tmp/lm32-customizer/tmp.v"

output jtag_break;                                      
reg    jtag_break;
output jtag_reset;                                      
reg    jtag_reset;
 
`line 7028 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_reg_d;
reg    [ 7:0] jtag_reg_d;
output [2:0] jtag_reg_addr_d;
wire   [2:0] jtag_reg_addr_d;
             




reg rx_update;                          
reg rx_update_r;                        
reg rx_update_r_r;                      
reg rx_update_r_r_r;                    



wire [ 7:0] rx_byte;   
wire [2:0] rx_addr;

  
`line 7048 "/tmp/lm32-customizer/tmp.v"
                 
reg [ 7:0] uart_tx_byte;      
reg uart_tx_valid;                      
reg [ 7:0] uart_rx_byte;      
reg uart_rx_valid;                      
 
`line 7053 "/tmp/lm32-customizer/tmp.v"


reg [ 3:0] command;             
  
`line 7056 "/tmp/lm32-customizer/tmp.v"

reg [ 7:0] jtag_byte_0;       
reg [ 7:0] jtag_byte_1;
reg [ 7:0] jtag_byte_2;
reg [ 7:0] jtag_byte_3;
reg [ 7:0] jtag_byte_4;
reg processing;                         
 
`line 7063 "/tmp/lm32-customizer/tmp.v"


reg [ 3:0] state;       





  
`line 7071 "/tmp/lm32-customizer/tmp.v"

assign jtag_csr_write_data = {jtag_byte_0, jtag_byte_1, jtag_byte_2, jtag_byte_3};
assign jtag_csr = jtag_byte_4[ (5-1):0];
assign jtag_address = {jtag_byte_0, jtag_byte_1, jtag_byte_2, jtag_byte_3};
assign jtag_write_data = jtag_byte_4;
 
`line 7076 "/tmp/lm32-customizer/tmp.v"

                 

  
`line 7079 "/tmp/lm32-customizer/tmp.v"
                 
assign jtag_reg_addr_d[1:0] = {uart_rx_valid, uart_tx_valid};         
 
   

`line 7083 "/tmp/lm32-customizer/tmp.v"

  
`line 7084 "/tmp/lm32-customizer/tmp.v"

assign jtag_reg_addr_d[2] = processing;
 
   

`line 7088 "/tmp/lm32-customizer/tmp.v"


  
`line 7090 "/tmp/lm32-customizer/tmp.v"
                 
assign jtx_csr_read_data = {{ 32-9{1'b0}}, uart_tx_valid, 8'h00};
assign jrx_csr_read_data = {{ 32-9{1'b0}}, uart_rx_valid, uart_rx_byte};
 
`line 7093 "/tmp/lm32-customizer/tmp.v"
         
                 




assign rx_byte = jtag_reg_q;
assign rx_addr = jtag_reg_addr_q;



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        rx_update <= 1'b0;
        rx_update_r <= 1'b0;
        rx_update_r_r <= 1'b0;
        rx_update_r_r_r <= 1'b0;
    end
    else
    begin
        rx_update <= jtag_update;
        rx_update_r <= rx_update;
        rx_update_r_r <= rx_update_r;
        rx_update_r_r_r <= rx_update_r_r;
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'h0;
        command <= 4'b0000;
        jtag_reg_d <= 8'h00;
  
`line 7130 "/tmp/lm32-customizer/tmp.v"

        processing <=  1'b0;
        jtag_csr_write_enable <=  1'b0;
        jtag_read_enable <=  1'b0;
        jtag_write_enable <=  1'b0;
 
`line 7135 "/tmp/lm32-customizer/tmp.v"

  
`line 7136 "/tmp/lm32-customizer/tmp.v"

        jtag_break <=  1'b0;
        jtag_reset <=  1'b0;
 
`line 7139 "/tmp/lm32-customizer/tmp.v"

  
`line 7140 "/tmp/lm32-customizer/tmp.v"
                 
        uart_tx_byte <= 8'h00;
        uart_tx_valid <=  1'b0;
        uart_rx_byte <= 8'h00;
        uart_rx_valid <=  1'b0;
 
`line 7145 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
  
`line 7149 "/tmp/lm32-customizer/tmp.v"
                 
        if ((csr_write_enable ==  1'b1) && (stall_x ==  1'b0))
        begin
            case (csr)
             5'he:
            begin
                
                uart_tx_byte <= csr_write_data[ 7:0];
                uart_tx_valid <=  1'b1;
            end
             5'hf:
            begin
                
                uart_rx_valid <=  1'b0;
            end
            endcase
        end
 
`line 7166 "/tmp/lm32-customizer/tmp.v"

  
`line 7167 "/tmp/lm32-customizer/tmp.v"

        
        if (exception_q_w ==  1'b1)
        begin
            jtag_break <=  1'b0;
            jtag_reset <=  1'b0;
        end
 
`line 7174 "/tmp/lm32-customizer/tmp.v"

        case (state)
         4'h0:
        begin
            
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                command <= rx_byte[7:4];                
                case (rx_addr)
  
`line 7183 "/tmp/lm32-customizer/tmp.v"

                 3'b000:
                begin
                    case (rx_byte[7:4])
  
`line 7187 "/tmp/lm32-customizer/tmp.v"

                     4'b0001:
                        state <=  4'h1;
                     4'b0011:
                    begin
                        {jtag_byte_2, jtag_byte_3} <= {jtag_byte_2, jtag_byte_3} + 1'b1;
                        state <=  4'h6;
                    end
                     4'b0010:
                        state <=  4'h1;
                     4'b0100:
                    begin
                        {jtag_byte_2, jtag_byte_3} <= {jtag_byte_2, jtag_byte_3} + 1'b1;
                        state <= 5;
                    end
                     4'b0101:
                        state <=  4'h1;
 
`line 7204 "/tmp/lm32-customizer/tmp.v"
                    
                     4'b0110:
                    begin
  
`line 7207 "/tmp/lm32-customizer/tmp.v"
     
                        uart_rx_valid <=  1'b0;    
                        uart_tx_valid <=  1'b0;         
 
`line 7210 "/tmp/lm32-customizer/tmp.v"

                        jtag_break <=  1'b1;
                    end
                     4'b0111:
                    begin
  
`line 7215 "/tmp/lm32-customizer/tmp.v"
     
                        uart_rx_valid <=  1'b0;    
                        uart_tx_valid <=  1'b0;         
 
`line 7218 "/tmp/lm32-customizer/tmp.v"

                        jtag_reset <=  1'b1;
                    end
                    endcase                               
                end
 
`line 7223 "/tmp/lm32-customizer/tmp.v"

  
`line 7224 "/tmp/lm32-customizer/tmp.v"
                 
                 3'b001:
                begin
                    uart_rx_byte <= rx_byte;
                    uart_rx_valid <=  1'b1;
                end                    
                 3'b010:
                begin
                    jtag_reg_d <= uart_tx_byte;
                    uart_tx_valid <=  1'b0;
                end
 
`line 7235 "/tmp/lm32-customizer/tmp.v"

                default:
                    ;
                endcase                
            end
        end
  
`line 7241 "/tmp/lm32-customizer/tmp.v"

         4'h1:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_0 <= rx_byte;
                state <=  4'h2;
            end
        end
         4'h2:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_1 <= rx_byte;
                state <=  4'h3;
            end
        end
         4'h3:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_2 <= rx_byte;
                state <=  4'h4;
            end
        end
         4'h4:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_3 <= rx_byte;
                if (command ==  4'b0001)
                    state <=  4'h6;
                else 
                    state <=  4'h5;
            end
        end
         4'h5:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_4 <= rx_byte;
                state <=  4'h6;
            end
        end
         4'h6:
        begin
            case (command)
             4'b0001,
             4'b0011:
            begin
                jtag_read_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h7;
            end
             4'b0010,
             4'b0100:
            begin
                jtag_write_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h7;
            end
             4'b0101:
            begin
                jtag_csr_write_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h8;
            end
            endcase
        end
         4'h7:
        begin
            if (jtag_access_complete ==  1'b1)
            begin          
                jtag_read_enable <=  1'b0;
                jtag_reg_d <= jtag_read_data;
                jtag_write_enable <=  1'b0;  
                processing <=  1'b0;
                state <=  4'h0;
            end
        end    
         4'h8:
        begin
            jtag_csr_write_enable <=  1'b0;
            processing <=  1'b0;
            state <=  4'h0;
        end    
 
`line 7327 "/tmp/lm32-customizer/tmp.v"

        endcase
    end
end
  
endmodule

 
`line 7334 "/tmp/lm32-customizer/tmp.v"





























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_interrupt_medium_debug (
    
    clk_i, 
    rst_i,
    
    interrupt,
    
    stall_x,
  
`line 7377 "/tmp/lm32-customizer/tmp.v"

    non_debug_exception,
    debug_exception,
 
    

`line 7382 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
  
`line 7384 "/tmp/lm32-customizer/tmp.v"

    bret_q_x,
 
`line 7386 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_data,
    csr_write_enable,
    
    interrupt_exception,
    
    csr_read_data
    );





parameter interrupts =  32;         





input clk_i;                                    
input rst_i;                                    

input [interrupts-1:0] interrupt;               

input stall_x;                                  

  
`line 7413 "/tmp/lm32-customizer/tmp.v"

input non_debug_exception;                      
input debug_exception;                          
 
                                 

`line 7418 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
  
`line 7420 "/tmp/lm32-customizer/tmp.v"

input bret_q_x;                                 
 
`line 7422 "/tmp/lm32-customizer/tmp.v"


input [ (5-1):0] csr;                      
input [ (32-1):0] csr_write_data;          
input csr_write_enable;                         





output interrupt_exception;                     
wire   interrupt_exception;

output [ (32-1):0] csr_read_data;          
reg    [ (32-1):0] csr_read_data;





wire [interrupts-1:0] asserted;                 

wire [interrupts-1:0] interrupt_n_exception;



reg ie;                                         
reg eie;                                        
  
`line 7450 "/tmp/lm32-customizer/tmp.v"

reg bie;                                        
 
`line 7452 "/tmp/lm32-customizer/tmp.v"

reg [interrupts-1:0] ip;                        
reg [interrupts-1:0] im;                        






assign interrupt_n_exception = ip & im;


assign interrupt_exception = (|interrupt_n_exception) & ie;


assign asserted = ip | interrupt;
       
assign ie_csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7470 "/tmp/lm32-customizer/tmp.v"

                           bie,
 
                           

`line 7474 "/tmp/lm32-customizer/tmp.v"
                             
                           eie, 
                           ie
                          };
assign ip_csr_read_data = ip;
assign im_csr_read_data = im;
generate
    if (interrupts > 1) 
    begin

always @(*)
begin
    case (csr)
     5'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7488 "/tmp/lm32-customizer/tmp.v"

                                    bie,
 
                                                                         

`line 7492 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     5'h2:  csr_read_data = ip;
     5'h1:  csr_read_data = im;
    default:       csr_read_data = { 32{1'bx}};
    endcase
end
    end
    else
    begin

always @(*)
begin
    case (csr)
     5'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7509 "/tmp/lm32-customizer/tmp.v"

                                    bie, 
 
                                                                        

`line 7513 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     5'h2:  csr_read_data = ip;
    default:       csr_read_data = { 32{1'bx}};
      endcase
end
    end
endgenerate
    




  
`line 7528 "/tmp/lm32-customizer/tmp.v"

   reg [ 10:0] eie_delay  = 0;

   
generate

   
    if (interrupts > 1)
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie                   <=  1'b0;
        eie                  <=  1'b0;
  
`line 7544 "/tmp/lm32-customizer/tmp.v"

        bie                  <=  1'b0;
 
`line 7546 "/tmp/lm32-customizer/tmp.v"

        im                   <= {interrupts{1'b0}};
        ip                   <= {interrupts{1'b0}};
       eie_delay             <= 0;
       
    end
    else
    begin
        
        ip                   <= asserted;
  
`line 7556 "/tmp/lm32-customizer/tmp.v"

        if (non_debug_exception ==  1'b1)
        begin
            
            eie              <= ie;
            ie               <=  1'b0;
        end
        else if (debug_exception ==  1'b1)
        begin
            
            bie              <= ie;
            ie               <=  1'b0;
        end
 
           
        
            
                           
                            
        

`line 7576 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
        begin

           if(eie_delay[0])
             ie              <= eie;
           
           eie_delay         <= {1'b0, eie_delay[ 10:1]};

            if (eret_q_x ==  1'b1) begin
                
               eie_delay[ 10] <=  1'b1;
               eie_delay[ 10-1:0] <= 0;
            end
           
                      
           
  
`line 7593 "/tmp/lm32-customizer/tmp.v"

            else if (bret_q_x ==  1'b1)
                
                ie      <= bie;
 
`line 7597 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  5'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
`line 7605 "/tmp/lm32-customizer/tmp.v"

                    bie <= csr_write_data[2];
 
`line 7607 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  5'h1)
                    im  <= csr_write_data[interrupts-1:0];
                if (csr ==  5'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
else
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie              <=  1'b0;
        eie             <=  1'b0;
  
`line 7627 "/tmp/lm32-customizer/tmp.v"

        bie             <=  1'b0;
 
`line 7629 "/tmp/lm32-customizer/tmp.v"

        ip              <= {interrupts{1'b0}};
       eie_delay        <= 0;
    end
    else
    begin
        
        ip              <= asserted;
  
`line 7637 "/tmp/lm32-customizer/tmp.v"

        if (non_debug_exception ==  1'b1)
        begin
            
            eie         <= ie;
            ie          <=  1'b0;
        end
        else if (debug_exception ==  1'b1)
        begin
            
            bie         <= ie;
            ie          <=  1'b0;
        end
 
           
        
            
                      
                       
        

`line 7657 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
          begin

             if(eie_delay[0])
               ie              <= eie;
           
             eie_delay         <= {1'b0, eie_delay[ 10:1]};

             if (eret_q_x ==  1'b1) begin
                
                eie_delay[ 10] <=  1'b1;
                eie_delay[ 10-1:0] <= 0;
             end
           
  
`line 7672 "/tmp/lm32-customizer/tmp.v"

            else if (bret_q_x ==  1'b1)
                
                ie      <= bie;
 
`line 7676 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  5'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
`line 7684 "/tmp/lm32-customizer/tmp.v"

                    bie <= csr_write_data[2];
 
`line 7686 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  5'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
endgenerate

endmodule



`line 1 "/tmp/lm32-customizer/tmp.v"




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  

`line 33 "src/lm32_include.v"

  
`line 34 "src/lm32_include.v"



  
`line 1 "/tmp/lm32-customizer/system_conf.v"

`line 1 "/tmp/lm32-customizer/system_conf.v"
  
`line 1 "/tmp/lm32-customizer/system_conf.v"

  
`line 2 "/tmp/lm32-customizer/system_conf.v"

  
`line 3 "/tmp/lm32-customizer/system_conf.v"

  
`line 4 "/tmp/lm32-customizer/system_conf.v"

  
`line 5 "/tmp/lm32-customizer/system_conf.v"

  
`line 6 "/tmp/lm32-customizer/system_conf.v"

  
`line 7 "/tmp/lm32-customizer/system_conf.v"

  
`line 8 "/tmp/lm32-customizer/system_conf.v"

	  
`line 9 "/tmp/lm32-customizer/system_conf.v"

	  
`line 10 "/tmp/lm32-customizer/system_conf.v"

	  
`line 11 "/tmp/lm32-customizer/system_conf.v"

	  
`line 12 "/tmp/lm32-customizer/system_conf.v"

	  
`line 13 "/tmp/lm32-customizer/system_conf.v"

	  
`line 14 "/tmp/lm32-customizer/system_conf.v"

	  
`line 15 "/tmp/lm32-customizer/system_conf.v"

	  
`line 16 "/tmp/lm32-customizer/system_conf.v"

	  
`line 17 "/tmp/lm32-customizer/system_conf.v"

	  
`line 18 "/tmp/lm32-customizer/system_conf.v"

	  
`line 19 "/tmp/lm32-customizer/system_conf.v"

	  
`line 20 "/tmp/lm32-customizer/system_conf.v"

	  
	 
	 
	 
	 
	  
	  
	
`line 28 "/tmp/lm32-customizer/system_conf.v"

 
`line 29 "/tmp/lm32-customizer/system_conf.v"


`line 30 "src/lm32_include.v"


  

`line 40 "src/lm32_include.v"

  
`line 41 "src/lm32_include.v"

  
`line 42 "src/lm32_include.v"

  
`line 43 "src/lm32_include.v"

  
`line 44 "src/lm32_include.v"

 
`line 45 "src/lm32_include.v"



  
`line 48 "src/lm32_include.v"

  
`line 49 "src/lm32_include.v"



  
`line 52 "src/lm32_include.v"

  
`line 53 "src/lm32_include.v"

  
`line 54 "src/lm32_include.v"

  
`line 55 "src/lm32_include.v"

  
`line 56 "src/lm32_include.v"

  
`line 57 "src/lm32_include.v"



  
`line 60 "src/lm32_include.v"

  
`line 61 "src/lm32_include.v"

  
`line 62 "src/lm32_include.v"



  
`line 65 "src/lm32_include.v"

  
`line 66 "src/lm32_include.v"

  
`line 67 "src/lm32_include.v"



  
`line 70 "src/lm32_include.v"

  
`line 71 "src/lm32_include.v"

 
 
                    

                    


`line 78 "src/lm32_include.v"

  
`line 79 "src/lm32_include.v"



  
`line 82 "src/lm32_include.v"

  
`line 83 "src/lm32_include.v"



  
`line 86 "src/lm32_include.v"

  
`line 87 "src/lm32_include.v"



  
`line 90 "src/lm32_include.v"

  
`line 91 "src/lm32_include.v"



  
 

`line 96 "src/lm32_include.v"

  
 

`line 99 "src/lm32_include.v"

 
`line 100 "src/lm32_include.v"



  
 

`line 105 "src/lm32_include.v"

  
 

`line 108 "src/lm32_include.v"

 
`line 109 "src/lm32_include.v"

 
`line 110 "src/lm32_include.v"



  
`line 113 "src/lm32_include.v"

  
`line 114 "src/lm32_include.v"

  
 
 

 


`line 121 "src/lm32_include.v"
 


  
`line 124 "src/lm32_include.v"

  
`line 125 "src/lm32_include.v"

 
 
 


`line 130 "src/lm32_include.v"



  
 

`line 135 "src/lm32_include.v"

  
 

`line 138 "src/lm32_include.v"

  
 

`line 141 "src/lm32_include.v"



  
`line 144 "src/lm32_include.v"

  
`line 145 "src/lm32_include.v"

 
`line 146 "src/lm32_include.v"

  
 

`line 149 "src/lm32_include.v"



  
`line 152 "src/lm32_include.v"



  
`line 155 "src/lm32_include.v"



  
`line 158 "src/lm32_include.v"

  
`line 159 "src/lm32_include.v"

  
`line 160 "src/lm32_include.v"

  
`line 161 "src/lm32_include.v"

  
`line 162 "src/lm32_include.v"

  
`line 163 "src/lm32_include.v"

  
`line 164 "src/lm32_include.v"

  
`line 165 "src/lm32_include.v"

  
`line 166 "src/lm32_include.v"

  
`line 167 "src/lm32_include.v"



  
`line 170 "src/lm32_include.v"

  
`line 171 "src/lm32_include.v"

  
`line 172 "src/lm32_include.v"

  
`line 173 "src/lm32_include.v"

  
`line 174 "src/lm32_include.v"

  
`line 175 "src/lm32_include.v"



  
                   
                     

`line 181 "src/lm32_include.v"

  
                   
                     

`line 185 "src/lm32_include.v"

  
`line 186 "src/lm32_include.v"

  
`line 187 "src/lm32_include.v"

 
`line 188 "src/lm32_include.v"

 
`line 189 "src/lm32_include.v"



  
`line 192 "src/lm32_include.v"

  
`line 193 "src/lm32_include.v"

  
`line 194 "src/lm32_include.v"

  
`line 195 "src/lm32_include.v"

  
`line 196 "src/lm32_include.v"

  
`line 197 "src/lm32_include.v"

  
`line 198 "src/lm32_include.v"

  
`line 199 "src/lm32_include.v"

  
                      
                    

`line 203 "src/lm32_include.v"

  
`line 204 "src/lm32_include.v"

  
                     
                     

`line 208 "src/lm32_include.v"

  
                     
                     
                     
                     
                     
                     
                     
                     

`line 218 "src/lm32_include.v"
 


  
`line 221 "src/lm32_include.v"

  
`line 222 "src/lm32_include.v"

  
`line 223 "src/lm32_include.v"

  
`line 224 "src/lm32_include.v"

  
`line 225 "src/lm32_include.v"



  
`line 228 "src/lm32_include.v"

  
`line 229 "src/lm32_include.v"

  
`line 230 "src/lm32_include.v"

  
`line 231 "src/lm32_include.v"

  
`line 232 "src/lm32_include.v"

  
`line 233 "src/lm32_include.v"

  
`line 234 "src/lm32_include.v"

  
`line 235 "src/lm32_include.v"

  
`line 236 "src/lm32_include.v"

  
`line 237 "src/lm32_include.v"




  
`line 241 "src/lm32_include.v"

  
`line 242 "src/lm32_include.v"

  
`line 243 "src/lm32_include.v"


  
`line 245 "src/lm32_include.v"

  
`line 246 "src/lm32_include.v"

  
`line 247 "src/lm32_include.v"

  
`line 248 "src/lm32_include.v"


  
`line 250 "src/lm32_include.v"

  
`line 251 "src/lm32_include.v"



  
`line 254 "src/lm32_include.v"

  
`line 255 "src/lm32_include.v"

 
 
 


`line 260 "src/lm32_include.v"







  
`line 267 "src/lm32_include.v"

  
`line 268 "src/lm32_include.v"

  
`line 269 "src/lm32_include.v"







  
`line 276 "src/lm32_include.v"

  
`line 277 "src/lm32_include.v"

  
`line 278 "src/lm32_include.v"

  
`line 279 "src/lm32_include.v"



  
`line 282 "src/lm32_include.v"

  
`line 283 "src/lm32_include.v"

  
`line 284 "src/lm32_include.v"

  
`line 285 "src/lm32_include.v"



  
`line 288 "src/lm32_include.v"

  
`line 289 "src/lm32_include.v"



  
`line 292 "src/lm32_include.v"







  
`line 299 "src/lm32_include.v"

  
`line 300 "src/lm32_include.v"

  
`line 301 "src/lm32_include.v"

  
`line 302 "src/lm32_include.v"

  
`line 303 "src/lm32_include.v"

  
`line 304 "src/lm32_include.v"



  
`line 307 "src/lm32_include.v"

  
`line 308 "src/lm32_include.v"

  
`line 309 "src/lm32_include.v"

  
`line 310 "src/lm32_include.v"

  
`line 311 "src/lm32_include.v"

  
`line 312 "src/lm32_include.v"


 
`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"

           
  
`line 31 "/tmp/lm32-customizer/tmp.v"

  
`line 32 "/tmp/lm32-customizer/tmp.v"

  
`line 33 "/tmp/lm32-customizer/tmp.v"

  
`line 34 "/tmp/lm32-customizer/tmp.v"

  
`line 35 "/tmp/lm32-customizer/tmp.v"

  
`line 36 "/tmp/lm32-customizer/tmp.v"

  
`line 37 "/tmp/lm32-customizer/tmp.v"






module lm32_mc_arithmetic_medium_icache (
    
    clk_i,
    rst_i,
    stall_d,
    kill_x,
  
    
    

`line 52 "/tmp/lm32-customizer/tmp.v"

  
    

`line 55 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 60 "/tmp/lm32-customizer/tmp.v"

    operand_0_d,
    operand_1_d,
    
    result_x,
  
    

`line 67 "/tmp/lm32-customizer/tmp.v"

    stall_request_x
    );





input clk_i;                                    
input rst_i;                                    
input stall_d;                                  
input kill_x;                                   
  
                                  
                                 

`line 82 "/tmp/lm32-customizer/tmp.v"

  
                                

`line 85 "/tmp/lm32-customizer/tmp.v"

  
                              
                             
                             

`line 90 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] operand_0_d;
input [ (32-1):0] operand_1_d;





output [ (32-1):0] result_x;               
reg    [ (32-1):0] result_x;
  
                         
    

`line 103 "/tmp/lm32-customizer/tmp.v"

output stall_request_x;                         
wire   stall_request_x;





reg [ (32-1):0] p;                         
reg [ (32-1):0] a;
reg [ (32-1):0] b;
  
  

`line 116 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;                 
reg [5:0] cycles;                               

  
                               
                                 

`line 124 "/tmp/lm32-customizer/tmp.v"







assign stall_request_x = state !=  3'b000;

  

      

`line 136 "/tmp/lm32-customizer/tmp.v"


  

       

`line 141 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        cycles <= {6{1'b0}};
        p <= { 32{1'b0}};
        a <= { 32{1'b0}};
        b <= { 32{1'b0}};
  
          

`line 158 "/tmp/lm32-customizer/tmp.v"

  
          

`line 161 "/tmp/lm32-customizer/tmp.v"

        result_x <= { 32{1'b0}};
        state <=  3'b000;
    end
    else
    begin
  
          

`line 169 "/tmp/lm32-customizer/tmp.v"

        case (state)
         3'b000:
        begin
            if (stall_d ==  1'b0)                 
            begin          
                cycles <=  32;
                p <= 32'b0;
                a <= operand_0_d;
                b <= operand_1_d;                    
  
                   
                      
                   
                      

`line 184 "/tmp/lm32-customizer/tmp.v"
                    
  
                   
                      

`line 188 "/tmp/lm32-customizer/tmp.v"

  
                   
                
                      
                      
                      
                      
                      
                
                   
                
                      
                      
                      
                      
                      
                

`line 206 "/tmp/lm32-customizer/tmp.v"

            end            
        end
  
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        

`line 252 "/tmp/lm32-customizer/tmp.v"
        
  
        
        
               
                    
               
               
              
                   
                  
                
        

`line 265 "/tmp/lm32-customizer/tmp.v"
     
  
        
               
               
              
                   
                  
                
        
        
               
               
              
                   
                  
                
        

`line 283 "/tmp/lm32-customizer/tmp.v"
   
        endcase
    end
end 

endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_top_medium_icache (
    
    clk_i,
    rst_i,
    

    interrupt,

    
  
    
    

`line 335 "/tmp/lm32-customizer/tmp.v"
     
  
`line 336 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 342 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
      
    
    
    
    

`line 354 "/tmp/lm32-customizer/tmp.v"
    
  
`line 355 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 366 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





input clk_i;                                    
input rst_i;                                    


input [ (32-1):0] interrupt;          


  
               
                             

`line 393 "/tmp/lm32-customizer/tmp.v"
    

  
`line 395 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 400 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                               
   
       
     
           
    
           
    

`line 420 "/tmp/lm32-customizer/tmp.v"


  
`line 422 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 441 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;
  



 
  

  
  
 
  
  
 
 

`line 475 "/tmp/lm32-customizer/tmp.v"



  

                     
                             
                            
                   
                                 
 
                                 


`line 488 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"




   

lm32_cpu_medium_icache cpu (
    
    .clk_i                 (clk_i),
  
                   

`line 505 "/tmp/lm32-customizer/tmp.v"

    .rst_i                 (rst_i),
    
  
`line 508 "/tmp/lm32-customizer/tmp.v"

    .interrupt             (interrupt),
 
`line 510 "/tmp/lm32-customizer/tmp.v"

    
  
               
             

`line 515 "/tmp/lm32-customizer/tmp.v"
     
  
    
                  
               
                
           

`line 522 "/tmp/lm32-customizer/tmp.v"

  
`line 523 "/tmp/lm32-customizer/tmp.v"

     
    .I_DAT_I               (I_DAT_I),
    .I_ACK_I               (I_ACK_I),
    .I_ERR_I               (I_ERR_I),
    .I_RTY_I               (I_RTY_I),
 
`line 529 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_I               (D_DAT_I),
    .D_ACK_I               (D_ACK_I),
    .D_ERR_I               (D_ERR_I),
    .D_RTY_I               (D_RTY_I),
    
  
                  
            
           
                 
                
 
                


`line 545 "/tmp/lm32-customizer/tmp.v"

  
                
           

`line 549 "/tmp/lm32-customizer/tmp.v"

      
                
               
            
            

`line 555 "/tmp/lm32-customizer/tmp.v"
    
  
`line 556 "/tmp/lm32-customizer/tmp.v"

    
    .I_DAT_O               (I_DAT_O),
    .I_ADR_O               (I_ADR_O),
    .I_CYC_O               (I_CYC_O),
    .I_SEL_O               (I_SEL_O),
    .I_STB_O               (I_STB_O),
    .I_WE_O                (I_WE_O),
    .I_CTI_O               (I_CTI_O),
    .I_LOCK_O              (I_LOCK_O),
    .I_BTE_O               (I_BTE_O),
     
`line 567 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_O               (D_DAT_O),
    .D_ADR_O               (D_ADR_O),
    .D_CYC_O               (D_CYC_O),
    .D_SEL_O               (D_SEL_O),
    .D_STB_O               (D_STB_O),
    .D_WE_O                (D_WE_O),
    .D_CTI_O               (D_CTI_O),
    .D_LOCK_O              (D_LOCK_O),
    .D_BTE_O               (D_BTE_O)
    );
   
  		   

  
    
                     
                
    
                
                     
                
                      
                     
    

`line 593 "/tmp/lm32-customizer/tmp.v"
        
   
endmodule
































































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_cpu_medium_icache (
    
    clk_i,
  
    

`line 671 "/tmp/lm32-customizer/tmp.v"
    
    rst_i,
    
  
`line 674 "/tmp/lm32-customizer/tmp.v"

    interrupt,
 
`line 676 "/tmp/lm32-customizer/tmp.v"

    
  
    
    

`line 681 "/tmp/lm32-customizer/tmp.v"
     
  
    
    
     
    
    

`line 688 "/tmp/lm32-customizer/tmp.v"

  
`line 689 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 695 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
  
    
    
    
    
    
 
    


`line 711 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 715 "/tmp/lm32-customizer/tmp.v"

      
    
    
    
    

`line 721 "/tmp/lm32-customizer/tmp.v"
    
  
`line 722 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 733 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





parameter eba_reset =  32'h00000000;                           
  
                            

`line 753 "/tmp/lm32-customizer/tmp.v"


  
`line 755 "/tmp/lm32-customizer/tmp.v"

parameter icache_associativity =  1;     
parameter icache_sets =  256;                       
parameter icache_bytes_per_line =  16;   
parameter icache_base_address =  32'h0;       
parameter icache_limit =  32'h7fffffff;                     
 
       
                         
     
         
                       

`line 767 "/tmp/lm32-customizer/tmp.v"


  
        
                          
      
          
                        

`line 775 "/tmp/lm32-customizer/tmp.v"

parameter dcache_associativity = 1;    
parameter dcache_sets = 512;                      
parameter dcache_bytes_per_line = 16;  
parameter dcache_base_address = 0;      
parameter dcache_limit = 0;                    
 
`line 781 "/tmp/lm32-customizer/tmp.v"


  
                          

`line 785 "/tmp/lm32-customizer/tmp.v"

parameter watchpoints = 0;
 
`line 787 "/tmp/lm32-customizer/tmp.v"

  
                          

`line 790 "/tmp/lm32-customizer/tmp.v"

parameter breakpoints = 0;
 
`line 792 "/tmp/lm32-customizer/tmp.v"


  
`line 794 "/tmp/lm32-customizer/tmp.v"

parameter interrupts =  32;                         
 
   

`line 798 "/tmp/lm32-customizer/tmp.v"






input clk_i;                                    
  
                                   

`line 807 "/tmp/lm32-customizer/tmp.v"
    
input rst_i;                                    

  
`line 810 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] interrupt;          
 
`line 812 "/tmp/lm32-customizer/tmp.v"


  
               
                             

`line 817 "/tmp/lm32-customizer/tmp.v"
    

  
                                  
                               
                
  

`line 824 "/tmp/lm32-customizer/tmp.v"


  
`line 826 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 831 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                   
     
                           
    
                          
    
                 
     
                               
    
 
                               
    


`line 857 "/tmp/lm32-customizer/tmp.v"


  
  
    
  
    

`line 864 "/tmp/lm32-customizer/tmp.v"


  
                               
   
       
     
           
    
           
    

`line 875 "/tmp/lm32-customizer/tmp.v"


  
`line 877 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 896 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;







  
`line 923 "/tmp/lm32-customizer/tmp.v"

reg valid_a;                                    
 
`line 925 "/tmp/lm32-customizer/tmp.v"

reg valid_f;                                    
reg valid_d;                                    
reg valid_x;                                    
reg valid_m;                                    
reg valid_w;                                    
   
wire q_x;
wire [ (32-1):0] immediate_d;              
wire load_d;                                    
reg load_x;                                     
reg load_m;
wire load_q_x;
wire store_q_x;
wire store_d;                                   
reg store_x;
reg store_m;
wire [ 1:0] size_d;                   
reg [ 1:0] size_x;
wire branch_d;                                  
wire branch_predict_d;                          
wire branch_predict_taken_d;                    
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;   
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_d;
wire bi_unconditional;
wire bi_conditional;
reg branch_x;                                   
reg branch_predict_x;
reg branch_predict_taken_x;
reg branch_m;
reg branch_predict_m;
reg branch_predict_taken_m;
wire branch_mispredict_taken_m;                 
wire branch_flushX_m;                           
wire branch_reg_d;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset_d;            
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_x;             
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;
wire [ 0:0] d_result_sel_0_d; 
wire [ 1:0] d_result_sel_1_d; 

wire x_result_sel_csr_d;                        
reg x_result_sel_csr_x;
  
                    
 

`line 971 "/tmp/lm32-customizer/tmp.v"

      
                       
 

`line 975 "/tmp/lm32-customizer/tmp.v"

  
`line 976 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_sext_d;                       
reg x_result_sel_sext_x;
 
`line 979 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_logic_d;                      
reg x_result_sel_logic_x;
  
                        
 

`line 985 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_add_d;                        
reg x_result_sel_add_x;
wire m_result_sel_compare_d;                    
reg m_result_sel_compare_x;
reg m_result_sel_compare_m;
  
`line 991 "/tmp/lm32-customizer/tmp.v"

wire m_result_sel_shift_d;                      
reg m_result_sel_shift_x;
reg m_result_sel_shift_m;
 
`line 995 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_load_d;                       
reg w_result_sel_load_x;
reg w_result_sel_load_m;
reg w_result_sel_load_w;
  
`line 1000 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_mul_d;                        
reg w_result_sel_mul_x;
reg w_result_sel_mul_m;
reg w_result_sel_mul_w;
 
`line 1005 "/tmp/lm32-customizer/tmp.v"

wire x_bypass_enable_d;                         
reg x_bypass_enable_x;                          
wire m_bypass_enable_d;                         
reg m_bypass_enable_x;                          
reg m_bypass_enable_m;
wire sign_extend_d;                             
reg sign_extend_x;
wire write_enable_d;                            
reg write_enable_x;
wire write_enable_q_x;
reg write_enable_m;
wire write_enable_q_m;
reg write_enable_w;
wire write_enable_q_w;
wire read_enable_0_d;                           
wire [ (5-1):0] read_idx_0_d;          
wire read_enable_1_d;                           
wire [ (5-1):0] read_idx_1_d;          
wire [ (5-1):0] write_idx_d;           
reg [ (5-1):0] write_idx_x;            
reg [ (5-1):0] write_idx_m;
reg [ (5-1):0] write_idx_w;
wire [ (3-1):0] csr_d;                     
reg  [ (3-1):0] csr_x;                  
wire [ (3-1):0] condition_d;         
reg [ (3-1):0] condition_x;          
  
                                    
                                     

`line 1035 "/tmp/lm32-customizer/tmp.v"

wire scall_d;                                   
reg scall_x;    
wire eret_d;                                    
reg eret_x;
wire eret_q_x;
reg eret_m;
  
 

`line 1044 "/tmp/lm32-customizer/tmp.v"

  
                                     
 
 
 
 
 


`line 1053 "/tmp/lm32-customizer/tmp.v"

wire csr_write_enable_d;                        
reg csr_write_enable_x;
wire csr_write_enable_q_x;
  
       

`line 1059 "/tmp/lm32-customizer/tmp.v"


  
                                
 
 
  

`line 1066 "/tmp/lm32-customizer/tmp.v"


reg [ (32-1):0] d_result_0;                
reg [ (32-1):0] d_result_1;                
reg [ (32-1):0] x_result;                  
reg [ (32-1):0] m_result;                  
reg [ (32-1):0] w_result;                  

reg [ (32-1):0] operand_0_x;               
reg [ (32-1):0] operand_1_x;               
reg [ (32-1):0] store_operand_x;           
reg [ (32-1):0] operand_m;                 
reg [ (32-1):0] operand_w;                 


  
`line 1081 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] reg_data_live_0;          
reg [ (32-1):0] reg_data_live_1;  
reg use_buf;                                    
reg [ (32-1):0] reg_data_buf_0;
reg [ (32-1):0] reg_data_buf_1;
 
`line 1087 "/tmp/lm32-customizer/tmp.v"

  
`line 1088 "/tmp/lm32-customizer/tmp.v"

 
     

`line 1091 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] reg_data_0;               
wire [ (32-1):0] reg_data_1;               
reg [ (32-1):0] bypass_data_0;             
reg [ (32-1):0] bypass_data_1;             
wire reg_write_enable_q_w;

reg interlock;                                  

wire stall_a;                                   
wire stall_f;                                   
wire stall_d;                                   
wire stall_x;                                   
wire stall_m;                                   


wire adder_op_d;                                
reg adder_op_x;                                 
reg adder_op_x_n;                               
wire [ (32-1):0] adder_result_x;           
wire adder_overflow_x;                          
wire adder_carry_n_x;                           


wire [ 3:0] logic_op_d;           
reg [ 3:0] logic_op_x;            
wire [ (32-1):0] logic_result_x;           

  
`line 1119 "/tmp/lm32-customizer/tmp.v"


wire [ (32-1):0] sextb_result_x;           
wire [ (32-1):0] sexth_result_x;           
wire [ (32-1):0] sext_result_x;            
 
`line 1124 "/tmp/lm32-customizer/tmp.v"



  
`line 1127 "/tmp/lm32-customizer/tmp.v"

  
                                   
                                     

`line 1131 "/tmp/lm32-customizer/tmp.v"

wire direction_d;                               
reg direction_x;                                        
reg direction_m;
wire [ (32-1):0] shifter_result_m;         
 
`line 1136 "/tmp/lm32-customizer/tmp.v"

  
                               
 
                              
 

`line 1142 "/tmp/lm32-customizer/tmp.v"

  
           

`line 1145 "/tmp/lm32-customizer/tmp.v"



  
`line 1148 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] multiplier_result_w;      
 
`line 1150 "/tmp/lm32-customizer/tmp.v"

  
                                 
 

`line 1154 "/tmp/lm32-customizer/tmp.v"



  
                                   
 
 
 
                           

`line 1163 "/tmp/lm32-customizer/tmp.v"



  
                         
  

`line 1169 "/tmp/lm32-customizer/tmp.v"



  
`line 1172 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] interrupt_csr_read_data_x;
 
`line 1174 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] cfg;                      
wire [ (32-1):0] cfg2;                     
  
                          

`line 1179 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] csr_read_data_x;           


wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                       
  
                          

`line 1190 "/tmp/lm32-customizer/tmp.v"

  
`line 1191 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] instruction_f;     
 
`line 1193 "/tmp/lm32-customizer/tmp.v"



wire [ (32-1):0] instruction_d;     
  
`line 1197 "/tmp/lm32-customizer/tmp.v"

wire iflush;                                    
wire icache_stall_request;                      
wire icache_restart_request;                    
wire icache_refill_request;                     
wire icache_refilling;                          
 
`line 1203 "/tmp/lm32-customizer/tmp.v"

  
          
            
                
                                 
                       

`line 1210 "/tmp/lm32-customizer/tmp.v"



  
                                   
                                     
                       
                     
                      
                           

`line 1220 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] load_data_w;              
wire stall_wb_load;                             


  
 
          
          

 
                      
        
                    
                           
  
 
  
  
 

 
                                 


`line 1244 "/tmp/lm32-customizer/tmp.v"



wire raw_x_0;                                   
wire raw_x_1;                                   
wire raw_m_0;                                   
wire raw_m_1;                                   
wire raw_w_0;                                   
wire raw_w_1;                                   


wire cmp_zero;                                  
wire cmp_negative;                              
wire cmp_overflow;                              
wire cmp_carry_n;                               
reg condition_met_x;                            
reg condition_met_m;
      
                             

`line 1263 "/tmp/lm32-customizer/tmp.v"

wire branch_taken_m;                            

wire kill_f;                                    
wire kill_d;                                    
wire kill_x;                                    
wire kill_m;                                    
wire kill_w;                                    

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] eba;                 
  
                  

`line 1275 "/tmp/lm32-customizer/tmp.v"

reg [ (3-1):0] eid_x;                      
  
                        
                        

`line 1280 "/tmp/lm32-customizer/tmp.v"


  
 
                                      

                                      
                                
                                 
                          
 
 
 
                      
 
 
 

`line 1297 "/tmp/lm32-customizer/tmp.v"

wire exception_x;                               
reg exception_m;
reg exception_w;
wire exception_q_w;
 
`line 1302 "/tmp/lm32-customizer/tmp.v"


  
 
                            


`line 1308 "/tmp/lm32-customizer/tmp.v"

  
`line 1309 "/tmp/lm32-customizer/tmp.v"

wire interrupt_exception;                       
 
`line 1311 "/tmp/lm32-customizer/tmp.v"

  
                       
                       

`line 1315 "/tmp/lm32-customizer/tmp.v"

  
            
                   

`line 1319 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1322 "/tmp/lm32-customizer/tmp.v"

wire system_call_exception;                     

  
                         

`line 1327 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







lm32_instruction_unit_medium_icache #(
    .associativity          (icache_associativity),
    .sets                   (icache_sets),
    .bytes_per_line         (icache_bytes_per_line),
    .base_address           (icache_base_address),
    .limit                  (icache_limit)
  ) instruction_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .stall_d                (stall_d),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .valid_f                (valid_f),
    .valid_d                (valid_d),
    .kill_f                 (kill_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .branch_predict_address_d (branch_predict_address_d),
      
             
            

`line 1364 "/tmp/lm32-customizer/tmp.v"

    .exception_m            (exception_m),
    .branch_taken_m         (branch_taken_m),
    .branch_mispredict_taken_m (branch_mispredict_taken_m),
    .branch_target_m        (branch_target_m),
  
`line 1369 "/tmp/lm32-customizer/tmp.v"

    .iflush                 (iflush),
 
`line 1371 "/tmp/lm32-customizer/tmp.v"

  
          
            
                 

`line 1376 "/tmp/lm32-customizer/tmp.v"

  
     
      
           

`line 1381 "/tmp/lm32-customizer/tmp.v"
        
  
`line 1382 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_i                (I_DAT_I),
    .i_ack_i                (I_ACK_I),
    .i_err_i                (I_ERR_I),
    .i_rty_i                (I_RTY_I),
 
`line 1388 "/tmp/lm32-customizer/tmp.v"

  
           
          
            
               

`line 1394 "/tmp/lm32-customizer/tmp.v"

    
    
    .pc_f                   (pc_f),
    .pc_d                   (pc_d),
    .pc_x                   (pc_x),
    .pc_m                   (pc_m),
    .pc_w                   (pc_w),
  
`line 1402 "/tmp/lm32-customizer/tmp.v"

    .icache_stall_request   (icache_stall_request),
    .icache_restart_request (icache_restart_request),
    .icache_refill_request  (icache_refill_request),
    .icache_refilling       (icache_refilling),
 
`line 1407 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1410 "/tmp/lm32-customizer/tmp.v"

  
`line 1411 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_o                (I_DAT_O),
    .i_adr_o                (I_ADR_O),
    .i_cyc_o                (I_CYC_O),
    .i_sel_o                (I_SEL_O),
    .i_stb_o                (I_STB_O),
    .i_we_o                 (I_WE_O),
    .i_cti_o                (I_CTI_O),
    .i_lock_o               (I_LOCK_O),
    .i_bte_o                (I_BTE_O),
 
`line 1422 "/tmp/lm32-customizer/tmp.v"

  
             
       

`line 1426 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1429 "/tmp/lm32-customizer/tmp.v"

  
`line 1430 "/tmp/lm32-customizer/tmp.v"

    .instruction_f          (instruction_f),
 
`line 1432 "/tmp/lm32-customizer/tmp.v"

    .instruction_d          (instruction_d)
    );


lm32_decoder_medium_icache decoder (
    
    .instruction            (instruction_d),
    
    .d_result_sel_0         (d_result_sel_0_d),
    .d_result_sel_1         (d_result_sel_1_d),
    .x_result_sel_csr       (x_result_sel_csr_d),
  
      

`line 1446 "/tmp/lm32-customizer/tmp.v"

      
         

`line 1449 "/tmp/lm32-customizer/tmp.v"

  
`line 1450 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_sext      (x_result_sel_sext_d),
 
`line 1452 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_logic     (x_result_sel_logic_d),
  
          

`line 1456 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_add       (x_result_sel_add_d),
    .m_result_sel_compare   (m_result_sel_compare_d),
  
`line 1459 "/tmp/lm32-customizer/tmp.v"

    .m_result_sel_shift     (m_result_sel_shift_d),  
 
`line 1461 "/tmp/lm32-customizer/tmp.v"
    
    .w_result_sel_load      (w_result_sel_load_d),
  
`line 1463 "/tmp/lm32-customizer/tmp.v"

    .w_result_sel_mul       (w_result_sel_mul_d),
 
`line 1465 "/tmp/lm32-customizer/tmp.v"

    .x_bypass_enable        (x_bypass_enable_d),
    .m_bypass_enable        (m_bypass_enable_d),
    .read_enable_0          (read_enable_0_d),
    .read_idx_0             (read_idx_0_d),
    .read_enable_1          (read_enable_1_d),
    .read_idx_1             (read_idx_1_d),
    .write_enable           (write_enable_d),
    .write_idx              (write_idx_d),
    .immediate              (immediate_d),
    .branch_offset          (branch_offset_d),
    .load                   (load_d),
    .store                  (store_d),
    .size                   (size_d),
    .sign_extend            (sign_extend_d),
    .adder_op               (adder_op_d),
    .logic_op               (logic_op_d),
  
`line 1482 "/tmp/lm32-customizer/tmp.v"

    .direction              (direction_d),
 
`line 1484 "/tmp/lm32-customizer/tmp.v"

  
                 
                

`line 1488 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1491 "/tmp/lm32-customizer/tmp.v"

  
                     
                    

`line 1495 "/tmp/lm32-customizer/tmp.v"

    .branch                 (branch_d),
    .bi_unconditional       (bi_unconditional),
    .bi_conditional         (bi_conditional),
    .branch_reg             (branch_reg_d),
    .condition              (condition_d),
  
               

`line 1503 "/tmp/lm32-customizer/tmp.v"

    .scall                  (scall_d),
    .eret                   (eret_d),
  
                       

`line 1508 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1511 "/tmp/lm32-customizer/tmp.v"

    .csr_write_enable       (csr_write_enable_d)
    ); 


lm32_load_store_unit_medium_icache #(
    .associativity          (dcache_associativity),
    .sets                   (dcache_sets),
    .bytes_per_line         (dcache_bytes_per_line),
    .base_address           (dcache_base_address),
    .limit                  (dcache_limit)
  ) load_store_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .kill_x                 (kill_x),
    .kill_m                 (kill_m),
    .exception_m            (exception_m),
    .store_operand_x        (store_operand_x),
    .load_store_address_x   (adder_result_x),
    .load_store_address_m   (operand_m),
    .load_store_address_w   (operand_w[1:0]),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_q_x               (load_q_x),
    .store_q_x              (store_q_x),
    .load_q_m               (load_q_m),
    .store_q_m              (store_q_m),
    .sign_extend_x          (sign_extend_x),
    .size_x                 (size_x),
  
                     

`line 1547 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1550 "/tmp/lm32-customizer/tmp.v"

    
    .d_dat_i                (D_DAT_I),
    .d_ack_i                (D_ACK_I),
    .d_err_i                (D_ERR_I),
    .d_rty_i                (D_RTY_I),
    
    
  
      
     
       
           

`line 1563 "/tmp/lm32-customizer/tmp.v"
    
  
          
            
                 
       

`line 1569 "/tmp/lm32-customizer/tmp.v"

    .load_data_w            (load_data_w),
    .stall_wb_load          (stall_wb_load),
    
    .d_dat_o                (D_DAT_O),
    .d_adr_o                (D_ADR_O),
    .d_cyc_o                (D_CYC_O),
    .d_sel_o                (D_SEL_O),
    .d_stb_o                (D_STB_O),
    .d_we_o                 (D_WE_O),
    .d_cti_o                (D_CTI_O),
    .d_lock_o               (D_LOCK_O),
    .d_bte_o                (D_BTE_O)
    );      
       

lm32_adder adder (
    
    .adder_op_x             (adder_op_x),
    .adder_op_x_n           (adder_op_x_n),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .adder_result_x         (adder_result_x),
    .adder_carry_n_x        (adder_carry_n_x),
    .adder_overflow_x       (adder_overflow_x)
    );


lm32_logic_op logic_op (
    
    .logic_op_x             (logic_op_x),
    .operand_0_x            (operand_0_x),

    .operand_1_x            (operand_1_x),
    
    .logic_result_x         (logic_result_x)
    );
              
  
`line 1608 "/tmp/lm32-customizer/tmp.v"


lm32_shifter shifter (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .direction_x            (direction_x),
    .sign_extend_x          (sign_extend_x),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .shifter_result_m       (shifter_result_m)
    );
 
`line 1622 "/tmp/lm32-customizer/tmp.v"


  
`line 1624 "/tmp/lm32-customizer/tmp.v"


lm32_multiplier multiplier (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .operand_0              (d_result_0),
    .operand_1              (d_result_1),
    
    .result                 (multiplier_result_w)    
    );
 
`line 1637 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
                    
                     
                   
                   
                  

         
                 

 
               
              
              
    
                
                
    
                   
                   
           

            
    

`line 1668 "/tmp/lm32-customizer/tmp.v"

              
  
`line 1670 "/tmp/lm32-customizer/tmp.v"


lm32_interrupt_medium_icache interrupt_unit (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    
    .interrupt              (interrupt),
    
    .stall_x                (stall_x),
  
         
            

`line 1683 "/tmp/lm32-customizer/tmp.v"

    .exception              (exception_q_w), 
 
`line 1685 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
  
                   

`line 1689 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    
    .interrupt_exception    (interrupt_exception),
    
    .csr_read_data          (interrupt_csr_read_data_x)
    );
 
`line 1698 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
    
                   
                
                 
            
    
 
                        
             
           
                    

 
             
       

 
                
    
    
    
 
          
          

 
      
        
                   
           
          
            
               

 
                 
                 

    
                 
            
    

`line 1748 "/tmp/lm32-customizer/tmp.v"


  

 
                
                
    
    
                       
                      
                       
                     
                    
       
         
             
                      
 
      
        
                   

 
                   
                   
                    
                
                        
 
      


    
 
                      

                      
                   
                   
    

`line 1789 "/tmp/lm32-customizer/tmp.v"




  
`line 1793 "/tmp/lm32-customizer/tmp.v"

   
           
            
          
            


             
              
    

   wire [31:0] regfile_data_0, regfile_data_1;
   reg [31:0]  w_result_d;
   reg 	       regfile_raw_0, regfile_raw_0_nxt;
   reg 	       regfile_raw_1, regfile_raw_1_nxt;
   
   
             
          

   always @(reg_write_enable_q_w or write_idx_w or instruction_f)
     begin
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[25:21]))
	  regfile_raw_0_nxt = 1'b1;
	else
	  regfile_raw_0_nxt = 1'b0;
	
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[20:16]))
	  regfile_raw_1_nxt = 1'b1;
	else
	  regfile_raw_1_nxt = 1'b0;
     end
   
   
           
           
       

   always @(regfile_raw_0 or w_result_d or regfile_data_0)
     if (regfile_raw_0)
       reg_data_live_0 = w_result_d;
     else
       reg_data_live_0 = regfile_data_0;
   
   
           
           
       

   always @(regfile_raw_1 or w_result_d or regfile_data_1)
     if (regfile_raw_1)
       reg_data_live_1 = w_result_d;
     else
       reg_data_live_1 = regfile_data_1;
   
   
     

   always @(posedge clk_i  )
     if (rst_i ==  1'b1)
       begin
	  regfile_raw_0 <= 1'b0;
	  regfile_raw_1 <= 1'b0;
	  w_result_d <= 32'b0;
       end
     else
       begin
	  regfile_raw_0 <= regfile_raw_0_nxt;
	  regfile_raw_1 <= regfile_raw_1_nxt;
	  w_result_d <= w_result;
       end
   
   
      

   
   lm32_dp_ram
     #(
       
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_0
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[25:21]),
      
      .rdata_o	(regfile_data_0)
      );

   lm32_dp_ram
     #(
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_1
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[20:16]),
      
      .rdata_o	(regfile_data_1)
      );
 
`line 1910 "/tmp/lm32-customizer/tmp.v"


  
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      
   
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      

`line 1978 "/tmp/lm32-customizer/tmp.v"







  
`line 1985 "/tmp/lm32-customizer/tmp.v"


assign reg_data_0 = use_buf ? reg_data_buf_0 : reg_data_live_0;
assign reg_data_1 = use_buf ? reg_data_buf_1 : reg_data_live_1;
 
`line 1989 "/tmp/lm32-customizer/tmp.v"

  
`line 1990 "/tmp/lm32-customizer/tmp.v"

 

   
   

`line 1995 "/tmp/lm32-customizer/tmp.v"



assign raw_x_0 = (write_idx_x == read_idx_0_d) && (write_enable_q_x ==  1'b1);
assign raw_m_0 = (write_idx_m == read_idx_0_d) && (write_enable_q_m ==  1'b1);
assign raw_w_0 = (write_idx_w == read_idx_0_d) && (write_enable_q_w ==  1'b1);
assign raw_x_1 = (write_idx_x == read_idx_1_d) && (write_enable_q_x ==  1'b1);
assign raw_m_1 = (write_idx_m == read_idx_1_d) && (write_enable_q_m ==  1'b1);
assign raw_w_1 = (write_idx_w == read_idx_1_d) && (write_enable_q_w ==  1'b1);


always @(*)
begin
    if (   (   (x_bypass_enable_x ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_x_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_x_1 ==  1'b1))
               )
           )
        || (   (m_bypass_enable_m ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_m_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_m_1 ==  1'b1))
               )
           )
       )
        interlock =  1'b1;
    else
        interlock =  1'b0;
end


always @(*)
begin
    if (raw_x_0 ==  1'b1)        
        bypass_data_0 = x_result;
    else if (raw_m_0 ==  1'b1)
        bypass_data_0 = m_result;
    else if (raw_w_0 ==  1'b1)
        bypass_data_0 = w_result;
    else
        bypass_data_0 = reg_data_0;
end


always @(*)
begin
    if (raw_x_1 ==  1'b1)
        bypass_data_1 = x_result;
    else if (raw_m_1 ==  1'b1)
        bypass_data_1 = m_result;
    else if (raw_w_1 ==  1'b1)
        bypass_data_1 = w_result;
    else
        bypass_data_1 = reg_data_1;
end

   
          
       
       
     

   assign branch_predict_d = bi_unconditional | bi_conditional;
   assign branch_predict_taken_d = bi_unconditional ? 1'b1 : (bi_conditional ? instruction_d[15] : 1'b0);
   
   
   assign branch_target_d = pc_d + branch_offset_d;

   
   
   
   assign branch_predict_address_d = branch_predict_taken_d ? branch_target_d : pc_f;


always @(*)
begin
    d_result_0 = d_result_sel_0_d[0] ? {pc_f, 2'b00} : bypass_data_0; 
    case (d_result_sel_1_d)
     2'b00:      d_result_1 = { 32{1'b0}};
     2'b01:     d_result_1 = bypass_data_1;
     2'b10: d_result_1 = immediate_d;
    default:                        d_result_1 = { 32{1'bx}};
    endcase
end

      

   
   

`line 2083 "/tmp/lm32-customizer/tmp.v"


  
`line 2085 "/tmp/lm32-customizer/tmp.v"


assign sextb_result_x = {{24{operand_0_x[7]}}, operand_0_x[7:0]};
assign sexth_result_x = {{16{operand_0_x[15]}}, operand_0_x[15:0]};
assign sext_result_x = size_x ==  2'b00 ? sextb_result_x : sexth_result_x;
 
`line 2090 "/tmp/lm32-customizer/tmp.v"


  

      

`line 2095 "/tmp/lm32-customizer/tmp.v"



assign cmp_zero = operand_0_x == operand_1_x;
assign cmp_negative = adder_result_x[ 32-1];
assign cmp_overflow = adder_overflow_x;
assign cmp_carry_n = adder_carry_n_x;
always @(*)
begin
    case (condition_x)
     3'b000:   condition_met_x =  1'b1;
     3'b110:   condition_met_x =  1'b1;
     3'b001:    condition_met_x = cmp_zero;
     3'b111:   condition_met_x = !cmp_zero;
     3'b010:    condition_met_x = !cmp_zero && (cmp_negative == cmp_overflow);
     3'b101:   condition_met_x = cmp_carry_n && !cmp_zero;
     3'b011:   condition_met_x = cmp_negative == cmp_overflow;
     3'b100:  condition_met_x = cmp_carry_n;
    default:              condition_met_x = 1'bx;
    endcase 
end


always @(*)
begin
    x_result =   x_result_sel_add_x ? adder_result_x 
               : x_result_sel_csr_x ? csr_read_data_x
  
`line 2122 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_sext_x ? sext_result_x
 
`line 2124 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2127 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2130 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2133 "/tmp/lm32-customizer/tmp.v"

               : logic_result_x;
end


always @(*)
begin
    m_result =   m_result_sel_compare_m ? {{ 32-1{1'b0}}, condition_met_m}
  
`line 2141 "/tmp/lm32-customizer/tmp.v"

               : m_result_sel_shift_m ? shifter_result_m
 
`line 2143 "/tmp/lm32-customizer/tmp.v"

               : operand_m; 
end


always @(*)
begin
    w_result =    w_result_sel_load_w ? load_data_w
  
`line 2151 "/tmp/lm32-customizer/tmp.v"

                : w_result_sel_mul_w ? multiplier_result_w
 
`line 2153 "/tmp/lm32-customizer/tmp.v"

                : operand_w;
end

      

          
                                
                                     
                                 
                                 
                              

`line 2165 "/tmp/lm32-customizer/tmp.v"



assign branch_taken_m =      (stall_m ==  1'b0) 
                          && (   (   (branch_m ==  1'b1) 
                                  && (valid_m ==  1'b1)
                                  && (   (   (condition_met_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b0)
					 )
				      || (   (condition_met_m ==  1'b0)
					  && (branch_predict_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b1)
					 )
				     )
                                 ) 
                              || (exception_m ==  1'b1)
                             );


assign branch_mispredict_taken_m =    (condition_met_m ==  1'b0)
                                   && (branch_predict_m ==  1'b1)
	   			   && (branch_predict_taken_m ==  1'b1);
   

assign branch_flushX_m =    (stall_m ==  1'b0)
                         && (   (   (branch_m ==  1'b1) 
                                 && (valid_m ==  1'b1)
			         && (   (condition_met_m ==  1'b1)
				     || (   (condition_met_m ==  1'b0)
					 && (branch_predict_m ==  1'b1)
					 && (branch_predict_taken_m ==  1'b1)
					)
				    )
			        )
			     || (exception_m ==  1'b1)
			    );


assign kill_f =    (   (valid_d ==  1'b1)
                    && (branch_predict_taken_d ==  1'b1)
		   )
                || (branch_taken_m ==  1'b1) 
      
                   

`line 2209 "/tmp/lm32-customizer/tmp.v"

  
`line 2210 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1) 
 
`line 2212 "/tmp/lm32-customizer/tmp.v"

                  
                   

`line 2215 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_d =    (branch_taken_m ==  1'b1) 
      
                   

`line 2220 "/tmp/lm32-customizer/tmp.v"

  
`line 2221 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1)     
 
`line 2223 "/tmp/lm32-customizer/tmp.v"
                
                  
                   

`line 2226 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_x =    (branch_flushX_m ==  1'b1) 
                  
                   

`line 2231 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_m =     1'b0
                  
                   

`line 2236 "/tmp/lm32-customizer/tmp.v"

                ;                
assign kill_w =     1'b0
                  
                   

`line 2241 "/tmp/lm32-customizer/tmp.v"
                
                ;



  
              
				         
				     
				     
				 
 
                                 

                              

`line 2256 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2260 "/tmp/lm32-customizer/tmp.v"


  
        
                                             
                                         
     

`line 2267 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2271 "/tmp/lm32-customizer/tmp.v"


assign system_call_exception = (   (scall_x ==  1'b1)
  
                                   

`line 2276 "/tmp/lm32-customizer/tmp.v"

			       );

  
      
                            
                         

     
 
                               

 
                               
                               

 
                               

 
                                  
 
                                   
                            
 
 				   
				   

                               

                            

         

`line 2309 "/tmp/lm32-customizer/tmp.v"

assign exception_x =           (system_call_exception ==  1'b1)
  
                               
                               

`line 2314 "/tmp/lm32-customizer/tmp.v"

  
                               

`line 2317 "/tmp/lm32-customizer/tmp.v"

  
`line 2318 "/tmp/lm32-customizer/tmp.v"

                            || (   (interrupt_exception ==  1'b1)
  
                                   

`line 2322 "/tmp/lm32-customizer/tmp.v"
                            
  
 				   
				   

`line 2326 "/tmp/lm32-customizer/tmp.v"

                               )
 
`line 2328 "/tmp/lm32-customizer/tmp.v"

                            ;
 
`line 2330 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
  
 
       
          
    
     
 
            
          
    

            
          
    

`line 2349 "/tmp/lm32-customizer/tmp.v"

  
            
          
    
            
          
    

`line 2357 "/tmp/lm32-customizer/tmp.v"

  
            
          
     

`line 2362 "/tmp/lm32-customizer/tmp.v"

  
            
          
    

`line 2367 "/tmp/lm32-customizer/tmp.v"

  
`line 2368 "/tmp/lm32-customizer/tmp.v"

         if (   (interrupt_exception ==  1'b1)
  
                

`line 2372 "/tmp/lm32-customizer/tmp.v"
                            
            )
        eid_x =  3'h6;
    else
 
`line 2376 "/tmp/lm32-customizer/tmp.v"

        eid_x =  3'h7;
end



assign stall_a = (stall_f ==  1'b1);
                
assign stall_f = (stall_d ==  1'b1);
                
assign stall_d =   (stall_x ==  1'b1) 
                || (   (interlock ==  1'b1)
                    && (kill_d ==  1'b0)
                   ) 
		|| (   (   (eret_d ==  1'b1)
			|| (scall_d ==  1'b1)
  
			   

`line 2394 "/tmp/lm32-customizer/tmp.v"

		       )
		    && (   (load_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
  
		         
			   
		       
		          
			   
			   
			   
			   
		       
                       
		   

`line 2416 "/tmp/lm32-customizer/tmp.v"
                   
                || (   (csr_write_enable_d ==  1'b1)
                    && (load_q_x ==  1'b1)
                   )                      
                ;
                
assign stall_x =    (stall_m ==  1'b1)
  
                       
                        
                     

`line 2427 "/tmp/lm32-customizer/tmp.v"

  
                 
                 
                       
		           
			    
			
		    

`line 2436 "/tmp/lm32-customizer/tmp.v"

                 ;

assign stall_m =    (stall_wb_load ==  1'b1)
  
                    

`line 2442 "/tmp/lm32-customizer/tmp.v"

                 || (   (D_CYC_O ==  1'b1)
                     && (   (store_m ==  1'b1)
		         
          
          

		  
	 
	

          
           
          
       

  
`line 2458 "/tmp/lm32-customizer/tmp.v"

		         || ((store_x ==  1'b1) && (interrupt_exception ==  1'b1))
 
`line 2460 "/tmp/lm32-customizer/tmp.v"

                         || (load_m ==  1'b1)
                         || (load_x ==  1'b1)
                        ) 
                    ) 
 
`line 2465 "/tmp/lm32-customizer/tmp.v"
                 
  
                         

`line 2468 "/tmp/lm32-customizer/tmp.v"
                                    
  
`line 2469 "/tmp/lm32-customizer/tmp.v"

                 || (icache_stall_request ==  1'b1)     
                 || ((I_CYC_O ==  1'b1) && ((branch_m ==  1'b1) || (exception_m ==  1'b1))) 
 
 
                                


`line 2476 "/tmp/lm32-customizer/tmp.v"
                               
  
                                  
                        
                    

`line 2481 "/tmp/lm32-customizer/tmp.v"

                 ;      


  
         

`line 2487 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2491 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2494 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2498 "/tmp/lm32-customizer/tmp.v"

assign q_x = (valid_x ==  1'b1) && (kill_x ==  1'b0);
assign csr_write_enable_q_x = (csr_write_enable_x ==  1'b1) && (q_x ==  1'b1);
assign eret_q_x = (eret_x ==  1'b1) && (q_x ==  1'b1);
  
         

`line 2504 "/tmp/lm32-customizer/tmp.v"

assign load_q_x = (load_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2509 "/tmp/lm32-customizer/tmp.v"

                  ;
assign store_q_x = (store_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2515 "/tmp/lm32-customizer/tmp.v"

                  ;
  
         

`line 2519 "/tmp/lm32-customizer/tmp.v"
                              
assign q_m = (valid_m ==  1'b1) && (kill_m ==  1'b0) && (exception_m ==  1'b0);
assign load_q_m = (load_m ==  1'b1) && (q_m ==  1'b1);
assign store_q_m = (store_m ==  1'b1) && (q_m ==  1'b1);
  
         
                 

`line 2526 "/tmp/lm32-customizer/tmp.v"

assign exception_q_w = ((exception_w ==  1'b1) && (valid_w ==  1'b1));        
 
`line 2528 "/tmp/lm32-customizer/tmp.v"


assign write_enable_q_x = (write_enable_x ==  1'b1) && (valid_x ==  1'b1) && (branch_flushX_m ==  1'b0);
assign write_enable_q_m = (write_enable_m ==  1'b1) && (valid_m ==  1'b1);
assign write_enable_q_w = (write_enable_w ==  1'b1) && (valid_w ==  1'b1);

assign reg_write_enable_q_w = (write_enable_w ==  1'b1) && (kill_w ==  1'b0) && (valid_w ==  1'b1);


assign cfg = {
               6'h02,
              watchpoints[3:0],
              breakpoints[3:0],
              interrupts[5:0],
  
              

`line 2544 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2546 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2549 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2551 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2554 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2556 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2559 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2561 "/tmp/lm32-customizer/tmp.v"

  
`line 2562 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2566 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2569 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2571 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2574 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2576 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2579 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2581 "/tmp/lm32-customizer/tmp.v"

  
`line 2582 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2586 "/tmp/lm32-customizer/tmp.v"

  
`line 2587 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2591 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2594 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2596 "/tmp/lm32-customizer/tmp.v"

  
`line 2597 "/tmp/lm32-customizer/tmp.v"
 
               1'b1
 
              

`line 2601 "/tmp/lm32-customizer/tmp.v"

              };

assign cfg2 = {
		     30'b0,
  
		     

`line 2608 "/tmp/lm32-customizer/tmp.v"

		      1'b0,
 
`line 2610 "/tmp/lm32-customizer/tmp.v"

  
		     

`line 2613 "/tmp/lm32-customizer/tmp.v"

		      1'b0
 
`line 2615 "/tmp/lm32-customizer/tmp.v"

		     };
   

  
`line 2619 "/tmp/lm32-customizer/tmp.v"

assign iflush = (   (csr_write_enable_d ==  1'b1) 
                 && (csr_d ==  3'h3)
                 && (stall_d ==  1'b0)
                 && (kill_d ==  1'b0)
                 && (valid_d ==  1'b1))

  
             
                     
		    

`line 2630 "/tmp/lm32-customizer/tmp.v"

		 ;
 
`line 2632 "/tmp/lm32-customizer/tmp.v"
 
  
         
                      

 
               
                       
		      

		   

`line 2643 "/tmp/lm32-customizer/tmp.v"
 


assign csr_d = read_idx_0_d[ (3-1):0];


always @(*)
begin
    case (csr_x)
  
`line 2652 "/tmp/lm32-customizer/tmp.v"

     3'h0,
     3'h1,
     3'h2:   csr_read_data_x = interrupt_csr_read_data_x;  
 
`line 2656 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2659 "/tmp/lm32-customizer/tmp.v"

     3'h6:  csr_read_data_x = cfg;
     3'h7:  csr_read_data_x = {eba, 8'h00};
  
        

`line 2664 "/tmp/lm32-customizer/tmp.v"

  
          
        

`line 2668 "/tmp/lm32-customizer/tmp.v"

     3'ha: csr_read_data_x = cfg2;
      
    default:        csr_read_data_x = { 32{1'bx}};
    endcase
end






always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        eba <= eba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  3'h7) && (stall_x ==  1'b0))
            eba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
               
              

`line 2691 "/tmp/lm32-customizer/tmp.v"

    end
end

  

   

       
          
    
    
                   
              
 
               
              

    


`line 2711 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
            


`line 2722 "/tmp/lm32-customizer/tmp.v"


  

   

       
          
    
    
        
               
              
        
               
              
    


`line 2740 "/tmp/lm32-customizer/tmp.v"

 


  
`line 2744 "/tmp/lm32-customizer/tmp.v"

  
 

           
           
       
          
            
                 
             
          
     
            
 

`line 2759 "/tmp/lm32-customizer/tmp.v"

always @(*)
begin
    if (icache_refill_request ==  1'b1) 
        valid_a =  1'b0;
    else if (icache_restart_request ==  1'b1) 
        valid_a =  1'b1;
    else 
        valid_a = !icache_refilling;
end 
 
`line 2769 "/tmp/lm32-customizer/tmp.v"

 
 
 

        
          
         
          
     
          
 


`line 2782 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        valid_f <=  1'b0;
        valid_d <=  1'b0;
        valid_x <=  1'b0;
        valid_m <=  1'b0;
        valid_w <=  1'b0;
    end
    else
    begin    
        if ((kill_f ==  1'b1) || (stall_a ==  1'b0))
  
`line 2797 "/tmp/lm32-customizer/tmp.v"

            valid_f <= valid_a;    
 
              

`line 2801 "/tmp/lm32-customizer/tmp.v"
            
        else if (stall_f ==  1'b0)
            valid_f <=  1'b0;            

        if (kill_d ==  1'b1)
            valid_d <=  1'b0;
        else if (stall_f ==  1'b0)
            valid_d <= valid_f & !kill_f;
        else if (stall_d ==  1'b0)
            valid_d <=  1'b0;
       
        if (stall_d ==  1'b0)
            valid_x <= valid_d & !kill_d;
        else if (kill_x ==  1'b1)
            valid_x <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_x <=  1'b0;

        if (kill_m ==  1'b1)
            valid_m <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_m <= valid_x & !kill_x;
        else if (stall_m ==  1'b0)
            valid_m <=  1'b0;

        if (stall_m ==  1'b0)
            valid_w <= valid_m & !kill_m;
        else 
            valid_w <=  1'b0;        
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
  
                 

`line 2840 "/tmp/lm32-customizer/tmp.v"
        
        operand_0_x <= { 32{1'b0}};
        operand_1_x <= { 32{1'b0}};
        store_operand_x <= { 32{1'b0}};
        branch_target_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};        
        x_result_sel_csr_x <=  1'b0;
  
          

`line 2848 "/tmp/lm32-customizer/tmp.v"

      
          

`line 2851 "/tmp/lm32-customizer/tmp.v"

  
`line 2852 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_sext_x <=  1'b0;
 
`line 2854 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_logic_x <=  1'b0;
  
          

`line 2858 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_add_x <=  1'b0;
        m_result_sel_compare_x <=  1'b0;
  
`line 2861 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_x <=  1'b0;
 
`line 2863 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_x <=  1'b0;
  
`line 2865 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_x <=  1'b0;
 
`line 2867 "/tmp/lm32-customizer/tmp.v"

        x_bypass_enable_x <=  1'b0;
        m_bypass_enable_x <=  1'b0;
        write_enable_x <=  1'b0;
        write_idx_x <= { 5{1'b0}};
        csr_x <= { 3{1'b0}};
        load_x <=  1'b0;
        store_x <=  1'b0;
        size_x <= { 2{1'b0}};
        sign_extend_x <=  1'b0;
        adder_op_x <=  1'b0;
        adder_op_x_n <=  1'b0;
        logic_op_x <= 4'h0;
  
`line 2880 "/tmp/lm32-customizer/tmp.v"

        direction_x <=  1'b0;
 
`line 2882 "/tmp/lm32-customizer/tmp.v"

  
          


`line 2886 "/tmp/lm32-customizer/tmp.v"

        branch_x <=  1'b0;
        branch_predict_x <=  1'b0;
        branch_predict_taken_x <=  1'b0;
        condition_x <=  3'b000;
  
          

`line 2893 "/tmp/lm32-customizer/tmp.v"

        scall_x <=  1'b0;
        eret_x <=  1'b0;
  
          

`line 2898 "/tmp/lm32-customizer/tmp.v"

  
          
          

`line 2902 "/tmp/lm32-customizer/tmp.v"

        csr_write_enable_x <=  1'b0;
        operand_m <= { 32{1'b0}};
        branch_target_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        m_result_sel_compare_m <=  1'b0;
  
`line 2907 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_m <=  1'b0;
 
`line 2909 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_m <=  1'b0;
  
`line 2911 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_m <=  1'b0;
 
`line 2913 "/tmp/lm32-customizer/tmp.v"

        m_bypass_enable_m <=  1'b0;
        branch_m <=  1'b0;
        branch_predict_m <=  1'b0;
	branch_predict_taken_m <=  1'b0;
        exception_m <=  1'b0;
        load_m <=  1'b0;
        store_m <=  1'b0;
  
`line 2921 "/tmp/lm32-customizer/tmp.v"

        direction_m <=  1'b0;
 
`line 2923 "/tmp/lm32-customizer/tmp.v"

        write_enable_m <=  1'b0;            
        write_idx_m <= { 5{1'b0}};
        condition_met_m <=  1'b0;
  
          

`line 2929 "/tmp/lm32-customizer/tmp.v"

  
          
                  

`line 2933 "/tmp/lm32-customizer/tmp.v"

        operand_w <= { 32{1'b0}};        
        w_result_sel_load_w <=  1'b0;
  
`line 2936 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <=  1'b0;
 
`line 2938 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= { 5{1'b0}};        
        write_enable_w <=  1'b0;
  
          
                  

`line 2944 "/tmp/lm32-customizer/tmp.v"

        exception_w <=  1'b0;
 
`line 2946 "/tmp/lm32-customizer/tmp.v"

  
          

`line 2949 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        
       
        if (stall_x ==  1'b0)
        begin
  
                     

`line 2959 "/tmp/lm32-customizer/tmp.v"
        
            operand_0_x <= d_result_0;
            operand_1_x <= d_result_1;
            store_operand_x <= bypass_data_1;
            branch_target_x <= branch_reg_d ==  1'b1 ? bypass_data_0[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] : branch_target_d;            
            x_result_sel_csr_x <= x_result_sel_csr_d;
  
              

`line 2967 "/tmp/lm32-customizer/tmp.v"

      
              

`line 2970 "/tmp/lm32-customizer/tmp.v"

  
`line 2971 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_sext_x <= x_result_sel_sext_d;
 
`line 2973 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_logic_x <= x_result_sel_logic_d;
  
              

`line 2977 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_add_x <= x_result_sel_add_d;
            m_result_sel_compare_x <= m_result_sel_compare_d;
  
`line 2980 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_x <= m_result_sel_shift_d;
 
`line 2982 "/tmp/lm32-customizer/tmp.v"
    
            w_result_sel_load_x <= w_result_sel_load_d;
  
`line 2984 "/tmp/lm32-customizer/tmp.v"

            w_result_sel_mul_x <= w_result_sel_mul_d;
 
`line 2986 "/tmp/lm32-customizer/tmp.v"

            x_bypass_enable_x <= x_bypass_enable_d;
            m_bypass_enable_x <= m_bypass_enable_d;
            load_x <= load_d;
            store_x <= store_d;
            branch_x <= branch_d;
	    branch_predict_x <= branch_predict_d;
	    branch_predict_taken_x <= branch_predict_taken_d;
	    write_idx_x <= write_idx_d;
            csr_x <= csr_d;
            size_x <= size_d;
            sign_extend_x <= sign_extend_d;
            adder_op_x <= adder_op_d;
            adder_op_x_n <= ~adder_op_d;
            logic_op_x <= logic_op_d;
  
`line 3001 "/tmp/lm32-customizer/tmp.v"

            direction_x <= direction_d;
 
`line 3003 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3006 "/tmp/lm32-customizer/tmp.v"

            condition_x <= condition_d;
            csr_write_enable_x <= csr_write_enable_d;
  
              

`line 3011 "/tmp/lm32-customizer/tmp.v"

            scall_x <= scall_d;
  
              

`line 3015 "/tmp/lm32-customizer/tmp.v"

            eret_x <= eret_d;
  
               

`line 3019 "/tmp/lm32-customizer/tmp.v"

            write_enable_x <= write_enable_d;
        end
        
        

        if (stall_m ==  1'b0)
        begin
            operand_m <= x_result;
            m_result_sel_compare_m <= m_result_sel_compare_x;
  
`line 3029 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_m <= m_result_sel_shift_x;
 
`line 3031 "/tmp/lm32-customizer/tmp.v"
    
            if (exception_x ==  1'b1)
            begin
                w_result_sel_load_m <=  1'b0;
  
`line 3035 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <=  1'b0;
 
`line 3037 "/tmp/lm32-customizer/tmp.v"

            end
            else
            begin
                w_result_sel_load_m <= w_result_sel_load_x;
  
`line 3042 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <= w_result_sel_mul_x;
 
`line 3044 "/tmp/lm32-customizer/tmp.v"

            end
            m_bypass_enable_m <= m_bypass_enable_x;
  
`line 3047 "/tmp/lm32-customizer/tmp.v"

            direction_m <= direction_x;
 
`line 3049 "/tmp/lm32-customizer/tmp.v"

            load_m <= load_x;
            store_m <= store_x;
      
                

`line 3054 "/tmp/lm32-customizer/tmp.v"

            branch_m <= branch_x;
	    branch_predict_m <= branch_predict_x;
	    branch_predict_taken_m <= branch_predict_taken_x;
 
`line 3058 "/tmp/lm32-customizer/tmp.v"

  
	   
	   
	   
	   
	   
                
                  
                
                  
             
                  

`line 3071 "/tmp/lm32-customizer/tmp.v"

            if (exception_x ==  1'b1)
                write_idx_m <=  5'd30;
            else 
                write_idx_m <= write_idx_x;
 
`line 3076 "/tmp/lm32-customizer/tmp.v"

            condition_met_m <= condition_met_x;
  
	      
	        
		     
		        
	           
	     
	           
	   
	       

`line 3088 "/tmp/lm32-customizer/tmp.v"

            branch_target_m <= exception_x ==  1'b1 ? {eba, eid_x, {3{1'b0}}} : branch_target_x;
 
`line 3090 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3093 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3096 "/tmp/lm32-customizer/tmp.v"

            eret_m <= eret_q_x;
  
               

`line 3100 "/tmp/lm32-customizer/tmp.v"

            write_enable_m <= exception_x ==  1'b1 ?  1'b1 : write_enable_x;            
  
              
                      

`line 3105 "/tmp/lm32-customizer/tmp.v"

        end
        
        
        if (stall_m ==  1'b0)
        begin
            if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
                exception_m <=  1'b1;
            else 
                exception_m <=  1'b0;
  
	           
 
					    

					 

`line 3121 "/tmp/lm32-customizer/tmp.v"

	end
                
        
  
                      

`line 3127 "/tmp/lm32-customizer/tmp.v"

        operand_w <= exception_m ==  1'b1 ? {pc_m, 2'b00} : m_result;
 
`line 3129 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_load_w <= w_result_sel_load_m;
  
`line 3131 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <= w_result_sel_mul_m;
 
`line 3133 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= write_idx_m;
  
          
          
 
           


`line 3141 "/tmp/lm32-customizer/tmp.v"

        write_enable_w <= write_enable_m;
  
          
          

`line 3146 "/tmp/lm32-customizer/tmp.v"

        exception_w <= exception_m;
 
`line 3148 "/tmp/lm32-customizer/tmp.v"

  
              
                   
                   
               
	   
            

`line 3156 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 3160 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        use_buf <=  1'b0;
        reg_data_buf_0 <= { 32{1'b0}};
        reg_data_buf_1 <= { 32{1'b0}};
    end
    else
    begin
        if (stall_d ==  1'b0)
            use_buf <=  1'b0;
        else if (use_buf ==  1'b0)
        begin        
            reg_data_buf_0 <= reg_data_live_0;
            reg_data_buf_1 <= reg_data_live_1;
            use_buf <=  1'b1;
        end        
        if (reg_write_enable_q_w ==  1'b1)
        begin
            if (write_idx_w == read_idx_0_d)
                reg_data_buf_0 <= w_result;
            if (write_idx_w == read_idx_1_d)
                reg_data_buf_1 <= w_result;
        end
    end
end
 
`line 3190 "/tmp/lm32-customizer/tmp.v"


  
`line 3192 "/tmp/lm32-customizer/tmp.v"

 

   

        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
        
     
           
            
        


`line 3236 "/tmp/lm32-customizer/tmp.v"


  

   

       
    
          
          
          
          
          
 
          

          
    
    
    
          
        
 
               

           

                
              
              
              
              
        
        
              
        
             
        
            
                 
            
                
                  
                  
            
            
              
            
              
 
              

        
        
        
              
 
              

        
    


`line 3298 "/tmp/lm32-customizer/tmp.v"

      







initial
begin
  
`line 3309 "/tmp/lm32-customizer/tmp.v"

    reg_0.ram[0] = { 32{1'b0}};
    reg_1.ram[0] = { 32{1'b0}};
 
      

`line 3314 "/tmp/lm32-customizer/tmp.v"

end


        
endmodule 









































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_load_store_unit_medium_icache (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_x,
    stall_m,
    kill_x,
    kill_m,
    exception_m,
    store_operand_x,
    load_store_address_x,
    load_store_address_m,
    load_store_address_w,
    load_x,
    store_x,
    load_q_x,
    store_q_x,
    load_q_m,
    store_q_m,
    sign_extend_x,
    size_x,
  
    

`line 3392 "/tmp/lm32-customizer/tmp.v"

  
    

`line 3395 "/tmp/lm32-customizer/tmp.v"

    
    d_dat_i,
    d_ack_i,
    d_err_i,
    d_rty_i,
    
    
  
    
    
    
    

`line 3408 "/tmp/lm32-customizer/tmp.v"
    
  
    
    
    
    

`line 3414 "/tmp/lm32-customizer/tmp.v"
			     
    load_data_w,
    stall_wb_load,
    
    d_dat_o,
    d_adr_o,
    d_cyc_o,
    d_sel_o,
    d_stb_o,
    d_we_o,
    d_cti_o,
    d_lock_o,
    d_bte_o
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          
input kill_x;                                           
input kill_m;                                           
input exception_m;                                      

input [ (32-1):0] store_operand_x;                 
input [ (32-1):0] load_store_address_x;            
input [ (32-1):0] load_store_address_m;            
input [1:0] load_store_address_w;                       
input load_x;                                           
input store_x;                                          
input load_q_x;                                         
input store_q_x;                                        
input load_q_m;                                         
input store_q_m;                                        
input sign_extend_x;                                    
input [ 1:0] size_x;                          

  
                                            

`line 3473 "/tmp/lm32-customizer/tmp.v"


     
                       

`line 3477 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] d_dat_i;                         
input d_ack_i;                                          
input d_err_i;                                          
input d_rty_i;                                          





  
                            
   
                           
   
                             
   
 
   

`line 3497 "/tmp/lm32-customizer/tmp.v"


     
                                
    
                  
    
                                       
   
                             
                               

`line 3508 "/tmp/lm32-customizer/tmp.v"

   
output [ (32-1):0] load_data_w;                    
reg    [ (32-1):0] load_data_w;
output stall_wb_load;                                   
reg    stall_wb_load;

output [ (32-1):0] d_dat_o;                        
reg    [ (32-1):0] d_dat_o;
output [ (32-1):0] d_adr_o;                        
reg    [ (32-1):0] d_adr_o;
output d_cyc_o;                                         
reg    d_cyc_o;
output [ (4-1):0] d_sel_o;                 
reg    [ (4-1):0] d_sel_o;
output d_stb_o;                                         
reg    d_stb_o; 
output d_we_o;                                          
reg    d_we_o;
output [ (3-1):0] d_cti_o;                       
reg    [ (3-1):0] d_cti_o;
output d_lock_o;                                        
reg    d_lock_o;
output [ (2-1):0] d_bte_o;                       
wire   [ (2-1):0] d_bte_o;






reg [ 1:0] size_m;
reg [ 1:0] size_w;
reg sign_extend_m;
reg sign_extend_w;
reg [ (32-1):0] store_data_x;       
reg [ (32-1):0] store_data_m;       
reg [ (4-1):0] byte_enable_x;
reg [ (4-1):0] byte_enable_m;
wire [ (32-1):0] data_m;
reg [ (32-1):0] data_w;

  
                                    
 
                      
              
                                 
                  
                   
                                          
                      

`line 3560 "/tmp/lm32-customizer/tmp.v"

  
                                      
 
                                      
                    
                      
                        
                  

`line 3569 "/tmp/lm32-customizer/tmp.v"

wire wb_select_x;                                       
  
                                      
  

`line 3574 "/tmp/lm32-customizer/tmp.v"

reg wb_select_m;
reg [ (32-1):0] wb_data_m;                         
reg wb_load_complete;                                   





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






  
   
    
     
       
                    

       
       
       
       
       
       
	
              
              
              
              
              
              

                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	    
	                   
	                   
	                        
	                           
	    
	                         
	                         
	    
   
   
               
              
              
    
      
        
       
	    
	    
       
     
       
	     
	      
	  
	         
                 
	         
	            
	             
		 
	         
	     
	      
	  
	          
		   
	       
	        
       
   
          

`line 3671 "/tmp/lm32-customizer/tmp.v"


  

 
              
                       
             
               
                      
       
    
                      
                            
                    
                    
                    
                  
                  
                     
                    
                 
            
               
                
                     
    
              
            
             
             
                  
                  
    

`line 3705 "/tmp/lm32-customizer/tmp.v"







  
            
                             

`line 3715 "/tmp/lm32-customizer/tmp.v"


  
            
                             

`line 3720 "/tmp/lm32-customizer/tmp.v"

   
  
            
                               
 
                               

 
                               

                     

`line 3732 "/tmp/lm32-customizer/tmp.v"

	  
   assign wb_select_x =     1'b1
  
                          

`line 3737 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3740 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3743 "/tmp/lm32-customizer/tmp.v"

                     ;


always @(*)
begin
    case (size_x)
     2'b00:  store_data_x = {4{store_operand_x[7:0]}};
     2'b11: store_data_x = {2{store_operand_x[15:0]}};
     2'b10:  store_data_x = store_operand_x;    
    default:          store_data_x = { 32{1'bx}};
    endcase
end


always @(*)
begin
    casez ({size_x, load_store_address_x[1:0]})
    { 2'b00, 2'b11}:  byte_enable_x = 4'b0001;
    { 2'b00, 2'b10}:  byte_enable_x = 4'b0010;
    { 2'b00, 2'b01}:  byte_enable_x = 4'b0100;
    { 2'b00, 2'b00}:  byte_enable_x = 4'b1000;
    { 2'b11, 2'b1?}: byte_enable_x = 4'b0011;
    { 2'b11, 2'b0?}: byte_enable_x = 4'b1100;
    { 2'b10, 2'b??}:  byte_enable_x = 4'b1111;
    default:                   byte_enable_x = 4'bxxxx;
    endcase
end

  

       
       
       
       

`line 3778 "/tmp/lm32-customizer/tmp.v"


  

       
       
       
       

`line 3786 "/tmp/lm32-customizer/tmp.v"


  
   
   
   
   
            
	                     
	                     
   
   
           
	                  
   
   
   
   
   
           
	                            

`line 3807 "/tmp/lm32-customizer/tmp.v"

   
  
  
   
   
         
                    
                       
                      
                        
                         
                        
  
   
         
                    
                       
                      
                      
  
 
   
   
         
                    
                       
                      
                      
  
   
         
                     
                    
  
 

`line 3843 "/tmp/lm32-customizer/tmp.v"

   
   
   
         
                     
                      
                      
                      
  
   
         
                     
                    
  
 
`line 3858 "/tmp/lm32-customizer/tmp.v"

    
   
         
                     
                    
  
`line 3864 "/tmp/lm32-customizer/tmp.v"

   
   assign data_m = wb_data_m;
   
`line 3867 "/tmp/lm32-customizer/tmp.v"

  
`line 3868 "/tmp/lm32-customizer/tmp.v"

 
`line 3869 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    casez ({size_w, load_store_address_w[1:0]})
    { 2'b00, 2'b11}:  load_data_w = {{24{sign_extend_w & data_w[7]}}, data_w[7:0]};
    { 2'b00, 2'b10}:  load_data_w = {{24{sign_extend_w & data_w[15]}}, data_w[15:8]};
    { 2'b00, 2'b01}:  load_data_w = {{24{sign_extend_w & data_w[23]}}, data_w[23:16]};
    { 2'b00, 2'b00}:  load_data_w = {{24{sign_extend_w & data_w[31]}}, data_w[31:24]};
    { 2'b11, 2'b1?}: load_data_w = {{16{sign_extend_w & data_w[15]}}, data_w[15:0]};
    { 2'b11, 2'b0?}: load_data_w = {{16{sign_extend_w & data_w[31]}}, data_w[31:16]};
    { 2'b10, 2'b??}:  load_data_w = data_w;
    default:                   load_data_w = { 32{1'bx}};
    endcase
end


assign d_bte_o =  2'b00;

                  

 
     
    
    
   
   
   
    
    
    
    
   
   
     
     
    
    
    
   
         
     
     
    
    


`line 3916 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        d_cyc_o <=  1'b0;
        d_stb_o <=  1'b0;
        d_dat_o <= { 32{1'b0}};
        d_adr_o <= { 32{1'b0}};
        d_sel_o <= { 4{ 1'b0}};
        d_we_o <=  1'b0;
        d_cti_o <=  3'b111;
        d_lock_o <=  1'b0;
        wb_data_m <= { 32{1'b0}};
        wb_load_complete <=  1'b0;
        stall_wb_load <=  1'b0;
                  
          

`line 3940 "/tmp/lm32-customizer/tmp.v"
                
    end
    else
    begin
   
        
          

`line 3947 "/tmp/lm32-customizer/tmp.v"
                
        
        if (d_cyc_o ==  1'b1)
        begin
            
            if ((d_ack_i ==  1'b1) || (d_err_i ==  1'b1))
            begin
                  
                     
                
                    
                        
                
                

`line 3961 "/tmp/lm32-customizer/tmp.v"
                
                begin
                    
                    d_cyc_o <=  1'b0;
                    d_stb_o <=  1'b0;
                    d_lock_o <=  1'b0;
                end
      
                  
                
                  

`line 3972 "/tmp/lm32-customizer/tmp.v"

                
                wb_data_m <= d_dat_i;
                
                wb_load_complete <= !d_we_o;
            end
            
            if (d_err_i ==  1'b1)
                $display ("Data bus error. Address: %x", d_adr_o);
            
        end
        else
        begin
                  
               
            
                
                  
                  
                  
                                  
                  
                  
                
            
             

`line 3998 "/tmp/lm32-customizer/tmp.v"
            
                 if (   (store_q_m ==  1'b1)
                     && (stall_m ==  1'b0)
  
                        

`line 4003 "/tmp/lm32-customizer/tmp.v"

  
		        

`line 4006 "/tmp/lm32-customizer/tmp.v"
			
                    )
            begin
                
                d_dat_o <= store_data_m;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b1;
                d_cti_o <=  3'b111;
            end        
            else if (   (load_q_m ==  1'b1) 
                     && (wb_select_m ==  1'b1) 
                     && (wb_load_complete ==  1'b0)
                     
                    )
            begin
                
                stall_wb_load <=  1'b0;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b0;
                d_cti_o <=  3'b111;
            end
        end
        
        if (stall_m ==  1'b0)
            wb_load_complete <=  1'b0;
        
        if ((load_q_x ==  1'b1) && (wb_select_x ==  1'b1) && (stall_x ==  1'b0))
            stall_wb_load <=  1'b1;
        
        if ((kill_m ==  1'b1) || (exception_m ==  1'b1))
            stall_wb_load <=  1'b0;
    end
end




always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        sign_extend_m <=  1'b0;
        size_m <= 2'b00;
        byte_enable_m <=  1'b0;
        store_data_m <= { 32{1'b0}};
  
          

`line 4059 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4062 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4065 "/tmp/lm32-customizer/tmp.v"

        wb_select_m <=  1'b0;        
    end
    else
    begin
        if (stall_m ==  1'b0)
        begin
            sign_extend_m <= sign_extend_x;
            size_m <= size_x;
            byte_enable_m <= byte_enable_x;    
            store_data_m <= store_data_x;
  
              

`line 4078 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4081 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4084 "/tmp/lm32-customizer/tmp.v"

            wb_select_m <= wb_select_x;
        end
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        size_w <= 2'b00;
        data_w <= { 32{1'b0}};
        sign_extend_w <=  1'b0;
    end
    else
    begin
        size_w <= size_m;
        data_w <= data_m;
        sign_extend_w <= sign_extend_m;
    end
end








always @(posedge clk_i)
begin
    if (((load_q_m ==  1'b1) || (store_q_m ==  1'b1)) && (stall_m ==  1'b0)) 
    begin
        if ((size_m ===  2'b11) && (load_store_address_m[0] !== 1'b0))
            $display ("Warning: Non-aligned halfword access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
        if ((size_m ===  2'b10) && (load_store_address_m[1:0] !== 2'b00))
            $display ("Warning: Non-aligned word access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
    end
end



endmodule


































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"



  
`line 4165 "/tmp/lm32-customizer/tmp.v"

  
`line 4166 "/tmp/lm32-customizer/tmp.v"



  
`line 4169 "/tmp/lm32-customizer/tmp.v"

  
`line 4170 "/tmp/lm32-customizer/tmp.v"

  
`line 4171 "/tmp/lm32-customizer/tmp.v"

  
`line 4172 "/tmp/lm32-customizer/tmp.v"

  
`line 4173 "/tmp/lm32-customizer/tmp.v"

  
`line 4174 "/tmp/lm32-customizer/tmp.v"

  
`line 4175 "/tmp/lm32-customizer/tmp.v"

  
`line 4176 "/tmp/lm32-customizer/tmp.v"

  
`line 4177 "/tmp/lm32-customizer/tmp.v"

  
`line 4178 "/tmp/lm32-customizer/tmp.v"

  
`line 4179 "/tmp/lm32-customizer/tmp.v"

  
`line 4180 "/tmp/lm32-customizer/tmp.v"

  
`line 4181 "/tmp/lm32-customizer/tmp.v"

  
`line 4182 "/tmp/lm32-customizer/tmp.v"

  
`line 4183 "/tmp/lm32-customizer/tmp.v"

  
`line 4184 "/tmp/lm32-customizer/tmp.v"

  
`line 4185 "/tmp/lm32-customizer/tmp.v"

  
`line 4186 "/tmp/lm32-customizer/tmp.v"

  
`line 4187 "/tmp/lm32-customizer/tmp.v"

  
`line 4188 "/tmp/lm32-customizer/tmp.v"

  
`line 4189 "/tmp/lm32-customizer/tmp.v"

  
`line 4190 "/tmp/lm32-customizer/tmp.v"

  
`line 4191 "/tmp/lm32-customizer/tmp.v"

  
`line 4192 "/tmp/lm32-customizer/tmp.v"

  
`line 4193 "/tmp/lm32-customizer/tmp.v"

  
`line 4194 "/tmp/lm32-customizer/tmp.v"

  
`line 4195 "/tmp/lm32-customizer/tmp.v"

  
`line 4196 "/tmp/lm32-customizer/tmp.v"

  
`line 4197 "/tmp/lm32-customizer/tmp.v"

  
`line 4198 "/tmp/lm32-customizer/tmp.v"

  
`line 4199 "/tmp/lm32-customizer/tmp.v"

  
`line 4200 "/tmp/lm32-customizer/tmp.v"

  
`line 4201 "/tmp/lm32-customizer/tmp.v"

  
`line 4202 "/tmp/lm32-customizer/tmp.v"

  
`line 4203 "/tmp/lm32-customizer/tmp.v"

  
`line 4204 "/tmp/lm32-customizer/tmp.v"

  
`line 4205 "/tmp/lm32-customizer/tmp.v"

  
`line 4206 "/tmp/lm32-customizer/tmp.v"

  
`line 4207 "/tmp/lm32-customizer/tmp.v"

  
`line 4208 "/tmp/lm32-customizer/tmp.v"

  
`line 4209 "/tmp/lm32-customizer/tmp.v"

  
`line 4210 "/tmp/lm32-customizer/tmp.v"

  
`line 4211 "/tmp/lm32-customizer/tmp.v"

  
`line 4212 "/tmp/lm32-customizer/tmp.v"

  
`line 4213 "/tmp/lm32-customizer/tmp.v"






module lm32_decoder_medium_icache (
    
    instruction,
    
    d_result_sel_0,
    d_result_sel_1,        
    x_result_sel_csr,
  
    

`line 4228 "/tmp/lm32-customizer/tmp.v"
    
      
    

`line 4231 "/tmp/lm32-customizer/tmp.v"

  
`line 4232 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext,
 
`line 4234 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_logic,
  
    

`line 4238 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add,
    m_result_sel_compare,
  
`line 4241 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift,  
 
`line 4243 "/tmp/lm32-customizer/tmp.v"
    
    w_result_sel_load,
  
`line 4245 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul,
 
`line 4247 "/tmp/lm32-customizer/tmp.v"

    x_bypass_enable,
    m_bypass_enable,
    read_enable_0,
    read_idx_0,
    read_enable_1,
    read_idx_1,
    write_enable,
    write_idx,
    immediate,
    branch_offset,
    load,
    store,
    size,
    sign_extend,
    adder_op,
    logic_op,
  
`line 4264 "/tmp/lm32-customizer/tmp.v"

    direction,
 
`line 4266 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4270 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4273 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4277 "/tmp/lm32-customizer/tmp.v"

    branch,
    branch_reg,
    condition,
    bi_conditional,
    bi_unconditional,
  
    

`line 4285 "/tmp/lm32-customizer/tmp.v"

    scall,
    eret,
  
    

`line 4290 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4293 "/tmp/lm32-customizer/tmp.v"

    csr_write_enable
    );





input [ (32-1):0] instruction;       





output [ 0:0] d_result_sel_0;
reg    [ 0:0] d_result_sel_0;
output [ 1:0] d_result_sel_1;
reg    [ 1:0] d_result_sel_1;
output x_result_sel_csr;
reg    x_result_sel_csr;
  
 
    

`line 4316 "/tmp/lm32-customizer/tmp.v"

      
 
    

`line 4320 "/tmp/lm32-customizer/tmp.v"

  
`line 4321 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_sext;
reg    x_result_sel_sext;
 
`line 4324 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_logic;
reg    x_result_sel_logic;
  
 
    

`line 4330 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_add;
reg    x_result_sel_add;
output m_result_sel_compare;
reg    m_result_sel_compare;
  
`line 4335 "/tmp/lm32-customizer/tmp.v"

output m_result_sel_shift;
reg    m_result_sel_shift;
 
`line 4338 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_load;
reg    w_result_sel_load;
  
`line 4341 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_mul;
reg    w_result_sel_mul;
 
`line 4344 "/tmp/lm32-customizer/tmp.v"

output x_bypass_enable;
wire   x_bypass_enable;
output m_bypass_enable;
wire   m_bypass_enable;
output read_enable_0;
wire   read_enable_0;
output [ (5-1):0] read_idx_0;
wire   [ (5-1):0] read_idx_0;
output read_enable_1;
wire   read_enable_1;
output [ (5-1):0] read_idx_1;
wire   [ (5-1):0] read_idx_1;
output write_enable;
wire   write_enable;
output [ (5-1):0] write_idx;
wire   [ (5-1):0] write_idx;
output [ (32-1):0] immediate;
wire   [ (32-1):0] immediate;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
wire   [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
output load;
wire   load;
output store;
wire   store;
output [ 1:0] size;
wire   [ 1:0] size;
output sign_extend;
wire   sign_extend;
output adder_op;
wire   adder_op;
output [ 3:0] logic_op;
wire   [ 3:0] logic_op;
  
`line 4377 "/tmp/lm32-customizer/tmp.v"

output direction;
wire   direction;
 
`line 4380 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4386 "/tmp/lm32-customizer/tmp.v"

  
 
   

`line 4390 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4396 "/tmp/lm32-customizer/tmp.v"

output branch;
wire   branch;
output branch_reg;
wire   branch_reg;
output [ (3-1):0] condition;
wire   [ (3-1):0] condition;
output bi_conditional;
wire bi_conditional;
output bi_unconditional;
wire bi_unconditional;
  
 
   

`line 4410 "/tmp/lm32-customizer/tmp.v"

output scall;
wire   scall;
output eret;
wire   eret;
  
 
   

`line 4418 "/tmp/lm32-customizer/tmp.v"

  
  
    

`line 4422 "/tmp/lm32-customizer/tmp.v"

output csr_write_enable;
wire   csr_write_enable;





wire [ (32-1):0] extended_immediate;       
wire [ (32-1):0] high_immediate;           
wire [ (32-1):0] call_immediate;           
wire [ (32-1):0] branch_immediate;         
wire sign_extend_immediate;                     
wire select_high_immediate;                     
wire select_call_immediate;                     





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







assign op_add    = instruction[ 30:26] ==  5'b01101;
assign op_and    = instruction[ 30:26] ==  5'b01000;
assign op_andhi  = instruction[ 31:26] ==  6'b011000;
assign op_b      = instruction[ 31:26] ==  6'b110000;
assign op_bi     = instruction[ 31:26] ==  6'b111000;
assign op_be     = instruction[ 31:26] ==  6'b010001;
assign op_bg     = instruction[ 31:26] ==  6'b010010;
assign op_bge    = instruction[ 31:26] ==  6'b010011;
assign op_bgeu   = instruction[ 31:26] ==  6'b010100;
assign op_bgu    = instruction[ 31:26] ==  6'b010101;
assign op_bne    = instruction[ 31:26] ==  6'b010111;
assign op_call   = instruction[ 31:26] ==  6'b110110;
assign op_calli  = instruction[ 31:26] ==  6'b111110;
assign op_cmpe   = instruction[ 30:26] ==  5'b11001;
assign op_cmpg   = instruction[ 30:26] ==  5'b11010;
assign op_cmpge  = instruction[ 30:26] ==  5'b11011;
assign op_cmpgeu = instruction[ 30:26] ==  5'b11100;
assign op_cmpgu  = instruction[ 30:26] ==  5'b11101;
assign op_cmpne  = instruction[ 30:26] ==  5'b11111;
  
       

`line 4470 "/tmp/lm32-customizer/tmp.v"

assign op_lb     = instruction[ 31:26] ==  6'b000100;
assign op_lbu    = instruction[ 31:26] ==  6'b010000;
assign op_lh     = instruction[ 31:26] ==  6'b000111;
assign op_lhu    = instruction[ 31:26] ==  6'b001011;
assign op_lw     = instruction[ 31:26] ==  6'b001010;
  
       

`line 4478 "/tmp/lm32-customizer/tmp.v"

  
`line 4479 "/tmp/lm32-customizer/tmp.v"

assign op_mul    = instruction[ 30:26] ==  5'b00010;
 
`line 4481 "/tmp/lm32-customizer/tmp.v"

assign op_nor    = instruction[ 30:26] ==  5'b00001;
assign op_or     = instruction[ 30:26] ==  5'b01110;
assign op_orhi   = instruction[ 31:26] ==  6'b011110;
assign op_raise  = instruction[ 31:26] ==  6'b101011;
assign op_rcsr   = instruction[ 31:26] ==  6'b100100;
assign op_sb     = instruction[ 31:26] ==  6'b001100;
  
`line 4488 "/tmp/lm32-customizer/tmp.v"

assign op_sextb  = instruction[ 31:26] ==  6'b101100;
assign op_sexth  = instruction[ 31:26] ==  6'b110111;
 
`line 4491 "/tmp/lm32-customizer/tmp.v"

assign op_sh     = instruction[ 31:26] ==  6'b000011;
  
`line 4493 "/tmp/lm32-customizer/tmp.v"

assign op_sl     = instruction[ 30:26] ==  5'b01111;      
 
`line 4495 "/tmp/lm32-customizer/tmp.v"

assign op_sr     = instruction[ 30:26] ==  5'b00101;
assign op_sru    = instruction[ 30:26] ==  5'b00000;
assign op_sub    = instruction[ 31:26] ==  6'b110010;
assign op_sw     = instruction[ 31:26] ==  6'b010110;
assign op_user   = instruction[ 31:26] ==  6'b110011;
assign op_wcsr   = instruction[ 31:26] ==  6'b110100;
assign op_xnor   = instruction[ 30:26] ==  5'b01001;
assign op_xor    = instruction[ 30:26] ==  5'b00110;


assign arith = op_add | op_sub;
assign logical = op_and | op_andhi | op_nor | op_or | op_orhi | op_xor | op_xnor;
assign cmp = op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne;
assign bi_conditional = op_be | op_bg | op_bge | op_bgeu  | op_bgu | op_bne;
assign bi_unconditional = op_bi;
assign bra = op_b | bi_unconditional | bi_conditional;
assign call = op_call | op_calli;
  
`line 4513 "/tmp/lm32-customizer/tmp.v"

assign shift = op_sl | op_sr | op_sru;
 
`line 4515 "/tmp/lm32-customizer/tmp.v"

  
     

`line 4518 "/tmp/lm32-customizer/tmp.v"

  
   
     

`line 4522 "/tmp/lm32-customizer/tmp.v"

  
`line 4523 "/tmp/lm32-customizer/tmp.v"

assign sext = op_sextb | op_sexth;
 
`line 4525 "/tmp/lm32-customizer/tmp.v"

  
`line 4526 "/tmp/lm32-customizer/tmp.v"

assign multiply = op_mul;
 
`line 4528 "/tmp/lm32-customizer/tmp.v"

  
    
   

`line 4532 "/tmp/lm32-customizer/tmp.v"

assign load = op_lb | op_lbu | op_lh | op_lhu | op_lw;
assign store = op_sb | op_sh | op_sw;


always @(*)
begin
    
    if (call) 
        d_result_sel_0 =  1'b1;
    else 
        d_result_sel_0 =  1'b0;
    if (call) 
        d_result_sel_1 =  2'b00;         
    else if ((instruction[31] == 1'b0) && !bra) 
        d_result_sel_1 =  2'b10;
    else
        d_result_sel_1 =  2'b01; 
    
    x_result_sel_csr =  1'b0;
  
      

`line 4554 "/tmp/lm32-customizer/tmp.v"

  
      

`line 4557 "/tmp/lm32-customizer/tmp.v"

  
`line 4558 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext =  1'b0;
 
`line 4560 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_logic =  1'b0;
          
      

`line 4564 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add =  1'b0;
    if (op_rcsr)
        x_result_sel_csr =  1'b1;
      
 
         
          

 
        
                  

 
      
                      


`line 4581 "/tmp/lm32-customizer/tmp.v"

  
      
                  

`line 4585 "/tmp/lm32-customizer/tmp.v"

  
`line 4586 "/tmp/lm32-customizer/tmp.v"

    else if (sext)
        x_result_sel_sext =  1'b1;
 
`line 4589 "/tmp/lm32-customizer/tmp.v"
        
    else if (logical) 
        x_result_sel_logic =  1'b1;
          
      
          

`line 4595 "/tmp/lm32-customizer/tmp.v"

    else 
        x_result_sel_add =  1'b1;        
    
    

    m_result_sel_compare = cmp;
  
`line 4602 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift = shift;
 
`line 4604 "/tmp/lm32-customizer/tmp.v"


    
    w_result_sel_load = load;
  
`line 4608 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul = op_mul; 
 
`line 4610 "/tmp/lm32-customizer/tmp.v"

end


assign x_bypass_enable =  arith 
                        | logical
  
                         
                         

`line 4619 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4622 "/tmp/lm32-customizer/tmp.v"

  
                         
                         

`line 4626 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 4629 "/tmp/lm32-customizer/tmp.v"
                  
  
`line 4630 "/tmp/lm32-customizer/tmp.v"

                        | sext 
 
`line 4632 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4635 "/tmp/lm32-customizer/tmp.v"

                        | op_rcsr
                        ;

assign m_bypass_enable = x_bypass_enable 
  
`line 4640 "/tmp/lm32-customizer/tmp.v"

                        | shift
 
`line 4642 "/tmp/lm32-customizer/tmp.v"

                        | cmp
                        ;

assign read_enable_0 = ~(op_bi | op_calli);
assign read_idx_0 = instruction[25:21];

assign read_enable_1 = ~(op_bi | op_calli | load);
assign read_idx_1 = instruction[20:16];

assign write_enable = ~(bra | op_raise | store | op_wcsr);
assign write_idx = call
                    ? 5'd29
                    : instruction[31] == 1'b0 
                        ? instruction[20:16] 
                        : instruction[15:11];
                        

assign size = instruction[27:26];

assign sign_extend = instruction[28];                      

assign adder_op = op_sub | op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne | bra;

assign logic_op = instruction[29:26];
  
`line 4667 "/tmp/lm32-customizer/tmp.v"


assign direction = instruction[29];
 
`line 4670 "/tmp/lm32-customizer/tmp.v"


assign branch = bra | call;
assign branch_reg = op_call | op_b;
assign condition = instruction[28:26];      
  
     

`line 4677 "/tmp/lm32-customizer/tmp.v"

assign scall = op_raise & instruction[2];
assign eret = op_b & (instruction[25:21] == 5'd30);
  
       

`line 4682 "/tmp/lm32-customizer/tmp.v"

  

   

`line 4686 "/tmp/lm32-customizer/tmp.v"


assign csr_write_enable = op_wcsr;



assign sign_extend_immediate = ~(op_and | op_cmpgeu | op_cmpgu | op_nor | op_or | op_xnor | op_xor);
assign select_high_immediate = op_andhi | op_orhi;
assign select_call_immediate = instruction[31];

assign high_immediate = {instruction[15:0], 16'h0000};
assign extended_immediate = {{16{sign_extend_immediate & instruction[15]}}, instruction[15:0]};
assign call_immediate = {{6{instruction[25]}}, instruction[25:0]};
assign branch_immediate = {{16{instruction[15]}}, instruction[15:0]};

assign immediate = select_high_immediate ==  1'b1 
                        ? high_immediate 
                        : extended_immediate;
   
assign branch_offset = select_call_immediate ==  1'b1   
                        ? call_immediate
                        : branch_immediate;
    
endmodule 



































					  
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 4748 "/tmp/lm32-customizer/tmp.v"


  
`line 4750 "/tmp/lm32-customizer/tmp.v"

  
`line 4751 "/tmp/lm32-customizer/tmp.v"

  
`line 4752 "/tmp/lm32-customizer/tmp.v"

  
`line 4753 "/tmp/lm32-customizer/tmp.v"


  
`line 4755 "/tmp/lm32-customizer/tmp.v"

  
`line 4756 "/tmp/lm32-customizer/tmp.v"

  
`line 4757 "/tmp/lm32-customizer/tmp.v"

  
`line 4758 "/tmp/lm32-customizer/tmp.v"


  
`line 4760 "/tmp/lm32-customizer/tmp.v"

  
`line 4761 "/tmp/lm32-customizer/tmp.v"

  
`line 4762 "/tmp/lm32-customizer/tmp.v"

  
`line 4763 "/tmp/lm32-customizer/tmp.v"


  
`line 4765 "/tmp/lm32-customizer/tmp.v"

  
`line 4766 "/tmp/lm32-customizer/tmp.v"

  
`line 4767 "/tmp/lm32-customizer/tmp.v"

  
`line 4768 "/tmp/lm32-customizer/tmp.v"

  
`line 4769 "/tmp/lm32-customizer/tmp.v"






module lm32_icache_medium_icache ( 
    
    clk_i,
    rst_i,    
    stall_a,
    stall_f,
    address_a,
    address_f,
    read_enable_f,
    refill_ready,
    refill_data,
    iflush,
  
    

`line 4789 "/tmp/lm32-customizer/tmp.v"

    valid_d,
    branch_predict_taken_d,
    
    stall_request,
    restart_request,
    refill_request,
    refill_address,
    refilling,
    inst
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    

localparam addr_offset_width = clogb2(bytes_per_line)-1-2;
localparam addr_set_width = clogb2(sets)-1;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);
localparam addr_set_lsb = (addr_offset_msb+1);
localparam addr_set_msb = (addr_set_lsb+addr_set_width-1);
localparam addr_tag_lsb = (addr_set_msb+1);
localparam addr_tag_msb = clogb2( 32'h7fffffff- 32'h0)-1;
localparam addr_tag_width = (addr_tag_msb-addr_tag_lsb+1);





input clk_i;                                        
input rst_i;                                        

input stall_a;                                      
input stall_f;                                      

input valid_d;                                      
input branch_predict_taken_d;                       
   
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_a;                     
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_f;                     
input read_enable_f;                                

input refill_ready;                                 
input [ (32-1):0] refill_data;          

input iflush;                                       
  
                                      

`line 4844 "/tmp/lm32-customizer/tmp.v"

   




output stall_request;                               
wire   stall_request;
output restart_request;                             
reg    restart_request;
output refill_request;                              
wire   refill_request;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
output refilling;                                   
reg    refilling;
output [ (32-1):0] inst;                
wire   [ (32-1):0] inst;





wire enable;
wire [0:associativity-1] way_mem_we;
wire [ (32-1):0] way_data[0:associativity-1];
wire [ ((addr_tag_width+1)-1):1] way_tag[0:associativity-1];
wire [0:associativity-1] way_valid;
wire [0:associativity-1] way_match;
wire miss;

wire [ (addr_set_width-1):0] tmem_read_address;
wire [ (addr_set_width-1):0] tmem_write_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_read_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_write_address;
wire [ ((addr_tag_width+1)-1):0] tmem_write_data;

reg [ 3:0] state;
wire flushing;
wire check;
wire refill;

reg [associativity-1:0] refill_way_select;
reg [ addr_offset_msb:addr_offset_lsb] refill_offset;
wire last_refill;
reg [ (addr_set_width-1):0] flush_set;

genvar i;





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






   generate
      for (i = 0; i < associativity; i = i + 1)
	begin : memories
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 (32),
	       .address_width              ( (addr_offset_width+addr_set_width))

) 
	   way_0_data_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (dmem_read_address),
	      .enable_read                (enable),
	      .write_address              (dmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i]),
	      .write_data                 (refill_data),    
	      
	      .read_data                  (way_data[i])
	      );
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 ( (addr_tag_width+1)),
	       .address_width              ( addr_set_width)

	       ) 
	   way_0_tag_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (tmem_read_address),
	      .enable_read                (enable),
	      .write_address              (tmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i] | flushing),
	      .write_data                 (tmem_write_data),
	      
	      .read_data                  ({way_tag[i], way_valid[i]})
	      );
	   
	end
endgenerate






generate
    for (i = 0; i < associativity; i = i + 1)
    begin : match
assign way_match[i] = ({way_tag[i], way_valid[i]} == {address_f[ addr_tag_msb:addr_tag_lsb],  1'b1});
    end
endgenerate


generate
    if (associativity == 1)
    begin : inst_1
assign inst = way_match[0] ? way_data[0] : 32'b0;
    end
    else if (associativity == 2)
	 begin : inst_2
assign inst = way_match[0] ? way_data[0] : (way_match[1] ? way_data[1] : 32'b0);
    end
endgenerate


generate 
    if (bytes_per_line > 4)
assign dmem_write_address = {refill_address[ addr_set_msb:addr_set_lsb], refill_offset};
    else
assign dmem_write_address = refill_address[ addr_set_msb:addr_set_lsb];
endgenerate
    
assign dmem_read_address = address_a[ addr_set_msb:addr_offset_lsb];


assign tmem_read_address = address_a[ addr_set_msb:addr_set_lsb];
assign tmem_write_address = flushing 
                                ? flush_set
                                : refill_address[ addr_set_msb:addr_set_lsb];


generate 
    if (bytes_per_line > 4)                            
assign last_refill = refill_offset == {addr_offset_width{1'b1}};
    else
assign last_refill =  1'b1;
endgenerate


assign enable = (stall_a ==  1'b0);


generate
    if (associativity == 1) 
    begin : we_1     
assign way_mem_we[0] = (refill_ready ==  1'b1);
    end
    else
    begin : we_2
assign way_mem_we[0] = (refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1);
assign way_mem_we[1] = (refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1);
    end
endgenerate                     


assign tmem_write_data[ 0] = last_refill & !flushing;
assign tmem_write_data[ ((addr_tag_width+1)-1):1] = refill_address[ addr_tag_msb:addr_tag_lsb];


assign flushing = |state[1:0];
assign check = state[2];
assign refill = state[3];

assign miss = (~(|way_match)) && (read_enable_f ==  1'b1) && (stall_f ==  1'b0) && !(valid_d && branch_predict_taken_d);
assign stall_request = (check ==  1'b0);
assign refill_request = (refill ==  1'b1);
                      





generate
    if (associativity >= 2) 
    begin : way_select      
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_way_select <= {{associativity-1{1'b0}}, 1'b1};
    else
    begin        
        if (miss ==  1'b1)
            refill_way_select <= {refill_way_select[0], refill_way_select[1]};
    end
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refilling <=  1'b0;
    else
        refilling <= refill;
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'b0001;
        flush_set <= { addr_set_width{1'b1}};
        refill_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        restart_request <=  1'b0;
    end
    else 
    begin
        case (state)

        
         4'b0001:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
                state <=  4'b0100;
            flush_set <= flush_set - 1'b1;
        end

        
         4'b0010:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
  
	       
                  
	      

`line 5093 "/tmp/lm32-customizer/tmp.v"

		state <=  4'b0100;
	   
            flush_set <= flush_set - 1'b1;
        end
        
        
         4'b0100:
        begin            
            if (stall_a ==  1'b0)
                restart_request <=  1'b0;
            if (iflush ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b0010;
            end
            else if (miss ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b1000;
            end
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
            begin
                if (last_refill ==  1'b1)
                begin
                    restart_request <=  1'b1;
                    state <=  4'b0100;
                end
            end
        end

        endcase        
    end
end

generate 
    if (bytes_per_line > 4)
    begin

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_offset <= {addr_offset_width{1'b0}};
    else 
    begin
        case (state)
        
        
         4'b0100:
        begin            
            if (iflush ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
            else if (miss ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
                refill_offset <= refill_offset + 1'b1;
        end

        endcase        
    end
end
    end
endgenerate
   
endmodule

 
`line 5169 "/tmp/lm32-customizer/tmp.v"































								 
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

           
              
              
              

           
             
           
             

                
                  
              
            

                 
               
               
              





   
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    





                               
                                      
                             
                                
                                       

   
   
   
   
   
   
   
   
   





                                             
                                             

                                           
                                           
                                           

                         
                         
                                          
                                         
                        
          

                                      
                       

                                            





                                    
   
                                  
    
                                   
    
                   
     
                                        
    
                        
    





                                   
                                  
                     
                     
        
  
                       
                       
                                               

          
         
          
         
                 
                     

                           
                                           
                                              
                                             

                                        
                
             
                                        
                   

  





 





   
                     
	  
	   
              
               
		 
		  
		    
		     
		     

		      
		    
		     
		      
		      
		      
		      
		      
		      
		      
		      
		          
		     
		      
		         
             
           
             
		               
		    
		      
		       
			 
			  
			  

			   
			 
			  
			   
			   
			   
			   
			   
			   
			   
			       
			       
			  
			   
			  
		  
             
	   
	   
	    
	     
	       
	        
	        

	         
	       
		
		 
		 
		 
		 
		 
		 
		 
		 
		 
		
		  
		
	
      
   







               
      
       
    




           
	   
   
    
        
	   
        
    



       
    

 

       
          
    
    
              
              
              
              
    

    
    
    

 

       
          
    
          

    



 
        
      
                              
                             
    
      
                             
                             

   

     
                             
                             
   


 
                                   
     
    
   



     
       


         



        
           
             
         
     
     
      
                 
                 
             
             
    



             
   


   
   
   

           
     
                      






        
            
   

       
           
    
            
           
               
    

     
   


   

       
          
     
          



   

       
    
          
          
          
          
          
    
     
    
         

        
        
        
               
                  
                
        
        
        
        
        
               
                  
               
            
                  
                  
                  
            
                
                  
        

        
        
        
              
               
            
                   
                
                      
                      
                
            
        
        
                
    



       
    

   

       
          
     
    
         
        
        
        
        
               
                  
        

        
        
        
               
                    
        
        
                
    

    





`line 5675 "/tmp/lm32-customizer/tmp.v"

































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  


                  
                 
         
     
     
              





  
    
     
    
    
    
    
    
    
    
    
 
    
    
    

 
    
    
    
    
    
 
    


    
 
    

    
    
    
    
    




                         
                         





                                     
                                     

                        
                                    
                                   
      
                        
            
                      
 
                     
       
                   

 
                                  
                                  
                                   
                               
                                       
 
                     







 
                                    
    

                                    
    
                                 
           
                                 
   





                                        



         
                       
                

     
         
                

                     
       
                   

 

             







 







               
      
         
    

 
 
        
       
    
     

        
   
    
   

    
               

 
               
      
             
                   


        
                   
    
   

                
                 

         
         
         

   
   
   








               
      
   

       
    
          
          
    
    
    
                 
        
              
              
        
    
    
    




               
      
   

       
    
          
          
    
    
    
           
        
               
                  
                 
                  
        
      

    



   

       
          
    
    
               
              
    
    

 

   

       
    
          
          
    
    
    
               
        
              
                
                  
             
                  
        
         
        
        
            
                     
                       
                    
                   
               
                   
        
        
        
            
                   
                  
        
        
        
            
 
               
                  
             

                            
            
                  
                  
            
        
        
        
            
 
               
                  
             

                  
        
        
    






`line 6024 "/tmp/lm32-customizer/tmp.v"















































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_instruction_unit_medium_icache (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_f,
    stall_d,
    stall_x,
    stall_m,
    valid_f,
    valid_d,
    kill_f,
    branch_predict_taken_d,
    branch_predict_address_d,
      
    
    

`line 6095 "/tmp/lm32-customizer/tmp.v"

    exception_m,
    branch_taken_m,
    branch_mispredict_taken_m,
    branch_target_m,
  
`line 6100 "/tmp/lm32-customizer/tmp.v"

    iflush,
 
`line 6102 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 6107 "/tmp/lm32-customizer/tmp.v"
        
  
    
    
    

`line 6112 "/tmp/lm32-customizer/tmp.v"

  
`line 6113 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_i,
    i_ack_i,
    i_err_i,
    i_rty_i,
 
`line 6119 "/tmp/lm32-customizer/tmp.v"

  
    
    
    
    

`line 6125 "/tmp/lm32-customizer/tmp.v"

    
    
    pc_f,
    pc_d,
    pc_x,
    pc_m,
    pc_w,
  
`line 6133 "/tmp/lm32-customizer/tmp.v"

    icache_stall_request,
    icache_restart_request,
    icache_refill_request,
    icache_refilling,
 
`line 6138 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6141 "/tmp/lm32-customizer/tmp.v"

  
`line 6142 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_o,
    i_adr_o,
    i_cyc_o,
    i_sel_o,
    i_stb_o,
    i_we_o,
    i_cti_o,
    i_lock_o,
    i_bte_o,
 
`line 6153 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 6157 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6160 "/tmp/lm32-customizer/tmp.v"

  
`line 6161 "/tmp/lm32-customizer/tmp.v"

    instruction_f,
 
`line 6163 "/tmp/lm32-customizer/tmp.v"
    
    instruction_d
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_f;                                          
input stall_d;                                          
input stall_x;                                          
input stall_m;                                          
input valid_f;                                          
input valid_d;                                          
input kill_f;                                           

input branch_predict_taken_d;                           
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;          
   
      
                                    
                     

`line 6204 "/tmp/lm32-customizer/tmp.v"

input exception_m;
input branch_taken_m;                                   
input branch_mispredict_taken_m;                        
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;                   

  
`line 6210 "/tmp/lm32-customizer/tmp.v"

input iflush;                                           
 
`line 6212 "/tmp/lm32-customizer/tmp.v"

  
                            
                             
 

`line 6217 "/tmp/lm32-customizer/tmp.v"
        

  
                 
                   
                                        

`line 6223 "/tmp/lm32-customizer/tmp.v"


  
`line 6225 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] i_dat_i;                         
input i_ack_i;                                          
input i_err_i;                                          
input i_rty_i;                                          
 
`line 6230 "/tmp/lm32-customizer/tmp.v"


  
                                  
                                 
                   
                      

`line 6237 "/tmp/lm32-customizer/tmp.v"





        
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;

  
`line 6254 "/tmp/lm32-customizer/tmp.v"

output icache_stall_request;                            
wire   icache_stall_request;
output icache_restart_request;                          
wire   icache_restart_request;
output icache_refill_request;                           
wire   icache_refill_request;
output icache_refilling;                                
wire   icache_refilling;
 
`line 6263 "/tmp/lm32-customizer/tmp.v"


  
                      
                          

`line 6268 "/tmp/lm32-customizer/tmp.v"
   

  
`line 6270 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_dat_o;                        
  
     

`line 6274 "/tmp/lm32-customizer/tmp.v"

wire   [ (32-1):0] i_dat_o;
 
`line 6276 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_adr_o;                        
reg    [ (32-1):0] i_adr_o;
output i_cyc_o;                                         
reg    i_cyc_o; 
output [ (4-1):0] i_sel_o;                 
  
     

`line 6284 "/tmp/lm32-customizer/tmp.v"

wire   [ (4-1):0] i_sel_o;
 
`line 6286 "/tmp/lm32-customizer/tmp.v"

output i_stb_o;                                         
reg    i_stb_o;
output i_we_o;                                          
  
    

`line 6292 "/tmp/lm32-customizer/tmp.v"

wire   i_we_o;
 
`line 6294 "/tmp/lm32-customizer/tmp.v"

output [ (3-1):0] i_cti_o;                       
reg    [ (3-1):0] i_cti_o;
output i_lock_o;                                        
reg    i_lock_o;
output [ (2-1):0] i_bte_o;                       
wire   [ (2-1):0] i_bte_o;
 
`line 6301 "/tmp/lm32-customizer/tmp.v"


  
                   
     
                             
   

`line 6308 "/tmp/lm32-customizer/tmp.v"


  
                                      
    

`line 6313 "/tmp/lm32-customizer/tmp.v"

  
`line 6314 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_f;           
wire   [ (32-1):0] instruction_f;
 
`line 6317 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_d;           
reg    [ (32-1):0] instruction_d;





reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_a;                                

  
`line 6327 "/tmp/lm32-customizer/tmp.v"

reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] restart_address;                     
 
`line 6329 "/tmp/lm32-customizer/tmp.v"


  
`line 6331 "/tmp/lm32-customizer/tmp.v"

wire icache_read_enable_f;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] icache_refill_address;              
reg icache_refill_ready;                                
reg [ (32-1):0] icache_refill_data;         
wire [ (32-1):0] icache_data_f;             
wire [ (3-1):0] first_cycle_type;                
wire [ (3-1):0] next_cycle_type;                 
wire last_word;                                         
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] first_address;                      
 
 
                    


`line 6345 "/tmp/lm32-customizer/tmp.v"

  
                                      
                                       
                 

`line 6350 "/tmp/lm32-customizer/tmp.v"

  
`line 6351 "/tmp/lm32-customizer/tmp.v"

 
               

`line 6354 "/tmp/lm32-customizer/tmp.v"

  
                                         

`line 6357 "/tmp/lm32-customizer/tmp.v"


  
                                         

`line 6361 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







    
    
     
       
                    
	 
       
       
       
       
       
       
	 
              
              
              
              
              
              
	 
                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	                   
	                     
	                        
	                         
	    
	                         
	                         
	    

`line 6420 "/tmp/lm32-customizer/tmp.v"
    
 
  
`line 6422 "/tmp/lm32-customizer/tmp.v"


lm32_icache_medium_icache #(
    .associativity          (associativity),
    .sets                   (sets),
    .bytes_per_line         (bytes_per_line),
    .base_address           (base_address),
    .limit                  (limit)
    ) icache ( 
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),      
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .valid_d                (valid_d),
    .address_a              (pc_a),
    .address_f              (pc_f),
    .read_enable_f          (icache_read_enable_f),
    .refill_ready           (icache_refill_ready),
    .refill_data            (icache_refill_data),
    .iflush                 (iflush),
    
    .stall_request          (icache_stall_request),
    .restart_request        (icache_restart_request),
    .refill_request         (icache_refill_request),
    .refill_address         (icache_refill_address),
    .refilling              (icache_refilling),
    .inst                   (icache_data_f)
    );
 
`line 6452 "/tmp/lm32-customizer/tmp.v"






  
`line 6458 "/tmp/lm32-customizer/tmp.v"


assign icache_read_enable_f =    (valid_f ==  1'b1)
                              && (kill_f ==  1'b0)
  
                                 

`line 6464 "/tmp/lm32-customizer/tmp.v"
                         
   
                                 

`line 6467 "/tmp/lm32-customizer/tmp.v"
       
                              ;
 
`line 6469 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    
  
       
          
     

`line 6479 "/tmp/lm32-customizer/tmp.v"
    
      if (branch_taken_m ==  1'b1)
	if ((branch_mispredict_taken_m ==  1'b1) && (exception_m ==  1'b0))
	  pc_a = pc_x;
	else
          pc_a = branch_target_m;
      
          
          

`line 6488 "/tmp/lm32-customizer/tmp.v"

      else
	if ( (valid_d ==  1'b1) && (branch_predict_taken_d ==  1'b1) )
	  pc_a = branch_predict_address_d;
	else
  
`line 6493 "/tmp/lm32-customizer/tmp.v"

          if (icache_restart_request ==  1'b1)
            pc_a = restart_address;
	  else 
 
`line 6497 "/tmp/lm32-customizer/tmp.v"
        
            pc_a = pc_f + 1'b1;
end


  
           

`line 6504 "/tmp/lm32-customizer/tmp.v"

                     

  
`line 6507 "/tmp/lm32-customizer/tmp.v"

  
         

`line 6510 "/tmp/lm32-customizer/tmp.v"

assign instruction_f = icache_data_f;
 
`line 6512 "/tmp/lm32-customizer/tmp.v"

 
 
 
         

   


   


`line 6523 "/tmp/lm32-customizer/tmp.v"



  
`line 6526 "/tmp/lm32-customizer/tmp.v"

  

`line 6528 "/tmp/lm32-customizer/tmp.v"

assign i_dat_o = 32'd0;
assign i_we_o =  1'b0;
assign i_sel_o = 4'b1111;
 
`line 6532 "/tmp/lm32-customizer/tmp.v"

assign i_bte_o =  2'b00;
 
`line 6534 "/tmp/lm32-customizer/tmp.v"


  
`line 6536 "/tmp/lm32-customizer/tmp.v"


generate
    case (bytes_per_line)
    4:
    begin
assign first_cycle_type =  3'b111;
assign next_cycle_type =  3'b111;
assign last_word =  1'b1;
assign first_address = icache_refill_address;
    end
    8:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type =  3'b111;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 1'b1;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    16:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type = i_adr_o[addr_offset_msb] == 1'b1 ?  3'b111 :  3'b010;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 2'b11;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    endcase
endgenerate
 
`line 6563 "/tmp/lm32-customizer/tmp.v"

                     





always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        pc_f <= ( 32'h00000000-4)/4;
        pc_d <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_w <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    end
    else
    begin
        if (stall_f ==  1'b0)
            pc_f <= pc_a;
        if (stall_d ==  1'b0)
            pc_d <= pc_f;
        if (stall_x ==  1'b0)
            pc_x <= pc_d;
        if (stall_m ==  1'b0)
            pc_m <= pc_x;
        pc_w <= pc_m;
    end
end

  
`line 6594 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        restart_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    else
    begin
  
         
            
               
                  
                    
                  

               
                  


`line 6613 "/tmp/lm32-customizer/tmp.v"

  
`line 6614 "/tmp/lm32-customizer/tmp.v"
        
            if (icache_refill_request ==  1'b1)
                restart_address <= icache_refill_address;
 
`line 6617 "/tmp/lm32-customizer/tmp.v"

 
`line 6618 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 6621 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
    
           
              
    


`line 6635 "/tmp/lm32-customizer/tmp.v"


  
                 
 

     
       
       
       
       
     


`line 6648 "/tmp/lm32-customizer/tmp.v"


  
`line 6650 "/tmp/lm32-customizer/tmp.v"


  
`line 6652 "/tmp/lm32-customizer/tmp.v"
                
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        i_cyc_o <=  1'b0;
        i_stb_o <=  1'b0;
        i_adr_o <= { 32{1'b0}};
        i_cti_o <=  3'b111;
        i_lock_o <=  1'b0;
        icache_refill_data <= { 32{1'b0}};
        icache_refill_ready <=  1'b0;
  
          

`line 6666 "/tmp/lm32-customizer/tmp.v"

  
          
          
          

`line 6671 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin   
        icache_refill_ready <=  1'b0;
        
        if (i_cyc_o ==  1'b1)
        begin
            
            if ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1))
            begin
  
                   
                
                      
                             
                        
                          
                
                

`line 6691 "/tmp/lm32-customizer/tmp.v"

                begin
                    if (last_word ==  1'b1)
                    begin
                        
                        i_cyc_o <=  1'b0;
                        i_stb_o <=  1'b0;
                        i_lock_o <=  1'b0;
                    end
                    
                    i_adr_o[addr_offset_msb:addr_offset_lsb] <= i_adr_o[addr_offset_msb:addr_offset_lsb] + 1'b1;
                    i_cti_o <= next_cycle_type;
                    
                    icache_refill_ready <=  1'b1;
                    icache_refill_data <= i_dat_i;
                end
            end
  
               
            
                  
                  
            

`line 6714 "/tmp/lm32-customizer/tmp.v"

        end
        else
        begin
            if ((icache_refill_request ==  1'b1) && (icache_refill_ready ==  1'b0))
            begin
                
       
                  

`line 6723 "/tmp/lm32-customizer/tmp.v"

                i_adr_o <= {first_address, 2'b00};
                i_cyc_o <=  1'b1;
                i_stb_o <=  1'b1;                
                i_cti_o <= first_cycle_type;
                
  
                  

`line 6731 "/tmp/lm32-customizer/tmp.v"

            end
  
            
            
                       
                
                     
                       
                       
                       
                       
                    
                      
                      
                      
                      
                      
                      
                      
                
             

`line 6753 "/tmp/lm32-customizer/tmp.v"
                    
  
            
            
     
               
                  

               
                  

`line 6763 "/tmp/lm32-customizer/tmp.v"

        end
    end
end
 
   

       
    
          
          
          
          
          
          
 
          

    
    
       
        
           
        
            
                  
            
                
                  
                  
                
                  
            
 
               
            
                  
                  
            

        
        
        
            
                   
  
                   
       
               
            
                
      
                  

                   
                  
                  
 
                  

            
	    
	    
	               
  
		       
       
	           
		
 
		      

		
	    
        
    


`line 6840 "/tmp/lm32-customizer/tmp.v"

 
`line 6841 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        instruction_d <= { 32{1'b0}};
  
          

`line 6851 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        if (stall_d ==  1'b0)
        begin
            instruction_d <= instruction_f;
  
              

`line 6860 "/tmp/lm32-customizer/tmp.v"

        end
    end
end  
  
endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

                              
                              
                              


                          
                  
                 
              
             
                    
                        
                        


                  
         
          
          
          
          
          
      
      
         





  
    
    
    
     
    
    
    
 
    
    
    
    

 
    
    

 
    

    
 
    
    

 
    
    
    
    
    
    
    

 
    
    

    
    
    





                                             
                                             

                                          
                                       
                        
                              

 
                                
                                  
                    
                                           

 
                    
                              

 
                                     





       
 
                
    
                
    

 
                            
    
              
    
                          
    
                                 
    
                                
    
                  
            
                     
    

 
                                       
    
                                       
    

  
     
  
    
             




                           
                         
                       
                     



     
  

                  
        
                       
        
                       


               
 
         
  
  
  
  
                          


         





 
      
   
      
   

                 

                  
             

   

 
   

   


                  
     
     
         
                 




   
   



   

       
    
          
          
          
          
    
    
    
          
          
          
          
    



   

       
    
          
          
          
 
          
          
          
          

 
          
          

                  
          
          
          
          

    
    
    
                  
               
        
             
            
            
                
                  
                  
            
            
            
                
                  
            
            
        

 
        
           
        
              
              
        

         
        
        
            
                 
            
                                  
                 
 
                
                
                     
 
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                    
      
                              
                                   

                          
                    
                    
                    
      
                              
                                   

                          
                    
                                                   
                

                  
                
                
                      
                      
                                    
                
                
                      
                      
                

                
                    
                                
            
        
 
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                   
                      
                 
                      
            
        
        
        
                 
            
                  
                  
            
        
        
        
             
            
            
            
                  
                  
                  
            
            
            
            
                  
                  
                  
            
            
            
                  
                  
                  
            
            
        
        
        
               
                      
                  
                  
                    
                  
                  
            
            
        
        
              
              
              
            

        
    

  



`line 7334 "/tmp/lm32-customizer/tmp.v"





























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_interrupt_medium_icache (
    
    clk_i, 
    rst_i,
    
    interrupt,
    
    stall_x,
  
    
    

`line 7380 "/tmp/lm32-customizer/tmp.v"

    exception,
 
`line 7382 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
  
    

`line 7386 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_data,
    csr_write_enable,
    
    interrupt_exception,
    
    csr_read_data
    );





parameter interrupts =  32;         





input clk_i;                                    
input rst_i;                                    

input [interrupts-1:0] interrupt;               

input stall_x;                                  

  
                       
                           

`line 7416 "/tmp/lm32-customizer/tmp.v"

input exception;                                
 
`line 7418 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
  
                                  

`line 7422 "/tmp/lm32-customizer/tmp.v"


input [ (3-1):0] csr;                      
input [ (32-1):0] csr_write_data;          
input csr_write_enable;                         





output interrupt_exception;                     
wire   interrupt_exception;

output [ (32-1):0] csr_read_data;          
reg    [ (32-1):0] csr_read_data;





wire [interrupts-1:0] asserted;                 

wire [interrupts-1:0] interrupt_n_exception;



reg ie;                                         
reg eie;                                        
  
                                         

`line 7452 "/tmp/lm32-customizer/tmp.v"

reg [interrupts-1:0] ip;                        
reg [interrupts-1:0] im;                        






assign interrupt_n_exception = ip & im;


assign interrupt_exception = (|interrupt_n_exception) & ie;


assign asserted = ip | interrupt;
       
assign ie_csr_read_data = {{ 32-3{1'b0}}, 
  
                           

`line 7472 "/tmp/lm32-customizer/tmp.v"

                           1'b0,
 
`line 7474 "/tmp/lm32-customizer/tmp.v"
                             
                           eie, 
                           ie
                          };
assign ip_csr_read_data = ip;
assign im_csr_read_data = im;
generate
    if (interrupts > 1) 
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                    

`line 7490 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                     
 
`line 7492 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
     3'h1:  csr_read_data = im;
    default:       csr_read_data = { 32{1'bx}};
    endcase
end
    end
    else
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                     

`line 7511 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                    
 
`line 7513 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
    default:       csr_read_data = { 32{1'bx}};
      endcase
end
    end
endgenerate
    




  
`line 7528 "/tmp/lm32-customizer/tmp.v"

   reg [ 10:0] eie_delay  = 0;

   
generate

   
    if (interrupts > 1)
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie                   <=  1'b0;
        eie                  <=  1'b0;
  
                           

`line 7546 "/tmp/lm32-customizer/tmp.v"

        im                   <= {interrupts{1'b0}};
        ip                   <= {interrupts{1'b0}};
       eie_delay             <= 0;
       
    end
    else
    begin
        
        ip                   <= asserted;
  
           
        
            
                           
                            
        
            
        
            
                           
                            
        

`line 7569 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie              <= ie;
            ie               <=  1'b0;
        end
 
`line 7576 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
        begin

           if(eie_delay[0])
             ie              <= eie;
           
           eie_delay         <= {1'b0, eie_delay[ 10:1]};

            if (eret_q_x ==  1'b1) begin
                
               eie_delay[ 10] <=  1'b1;
               eie_delay[ 10-1:0] <= 0;
            end
           
                      
           
  
                
                
                       

`line 7597 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7607 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h1)
                    im  <= csr_write_data[interrupts-1:0];
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
else
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie              <=  1'b0;
        eie             <=  1'b0;
  
                      

`line 7629 "/tmp/lm32-customizer/tmp.v"

        ip              <= {interrupts{1'b0}};
       eie_delay        <= 0;
    end
    else
    begin
        
        ip              <= asserted;
  
           
        
            
                      
                       
        
            
        
            
                      
                       
        

`line 7650 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie         <= ie;
            ie          <=  1'b0;
        end
 
`line 7657 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
          begin

             if(eie_delay[0])
               ie              <= eie;
           
             eie_delay         <= {1'b0, eie_delay[ 10:1]};

             if (eret_q_x ==  1'b1) begin
                
                eie_delay[ 10] <=  1'b1;
                eie_delay[ 10-1:0] <= 0;
             end
           
  
                
                
                       

`line 7676 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7686 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
endgenerate

endmodule



`line 1 "/tmp/lm32-customizer/tmp.v"




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  

`line 33 "src/lm32_include.v"

  
`line 34 "src/lm32_include.v"



  
`line 1 "/tmp/lm32-customizer/system_conf.v"

`line 1 "/tmp/lm32-customizer/system_conf.v"
  
`line 1 "/tmp/lm32-customizer/system_conf.v"

  
`line 2 "/tmp/lm32-customizer/system_conf.v"

  
`line 3 "/tmp/lm32-customizer/system_conf.v"

  
`line 4 "/tmp/lm32-customizer/system_conf.v"

  
`line 5 "/tmp/lm32-customizer/system_conf.v"

  
`line 6 "/tmp/lm32-customizer/system_conf.v"

  
`line 7 "/tmp/lm32-customizer/system_conf.v"

  
`line 8 "/tmp/lm32-customizer/system_conf.v"

  
`line 9 "/tmp/lm32-customizer/system_conf.v"

	  
`line 10 "/tmp/lm32-customizer/system_conf.v"

	  
`line 11 "/tmp/lm32-customizer/system_conf.v"

	  
`line 12 "/tmp/lm32-customizer/system_conf.v"

	  
`line 13 "/tmp/lm32-customizer/system_conf.v"

	  
`line 14 "/tmp/lm32-customizer/system_conf.v"

	  
`line 15 "/tmp/lm32-customizer/system_conf.v"

	  
`line 16 "/tmp/lm32-customizer/system_conf.v"

	  
`line 17 "/tmp/lm32-customizer/system_conf.v"

	  
`line 18 "/tmp/lm32-customizer/system_conf.v"

	  
`line 19 "/tmp/lm32-customizer/system_conf.v"

	  
`line 20 "/tmp/lm32-customizer/system_conf.v"

	  
`line 21 "/tmp/lm32-customizer/system_conf.v"

	  
`line 22 "/tmp/lm32-customizer/system_conf.v"

	  
`line 23 "/tmp/lm32-customizer/system_conf.v"

	  
`line 24 "/tmp/lm32-customizer/system_conf.v"

	  
`line 25 "/tmp/lm32-customizer/system_conf.v"

	  
`line 26 "/tmp/lm32-customizer/system_conf.v"

	  
`line 27 "/tmp/lm32-customizer/system_conf.v"

	  
`line 28 "/tmp/lm32-customizer/system_conf.v"

	 
`line 29 "/tmp/lm32-customizer/system_conf.v"

 
`line 30 "/tmp/lm32-customizer/system_conf.v"


`line 31 "src/lm32_include.v"


  

`line 40 "src/lm32_include.v"

  
`line 41 "src/lm32_include.v"

  
`line 42 "src/lm32_include.v"

  
`line 43 "src/lm32_include.v"

  
`line 44 "src/lm32_include.v"

 
`line 45 "src/lm32_include.v"



  
`line 48 "src/lm32_include.v"

  
`line 49 "src/lm32_include.v"



  
`line 52 "src/lm32_include.v"

  
`line 53 "src/lm32_include.v"

  
`line 54 "src/lm32_include.v"

  
`line 55 "src/lm32_include.v"

  
`line 56 "src/lm32_include.v"

  
`line 57 "src/lm32_include.v"



  
`line 60 "src/lm32_include.v"

  
`line 61 "src/lm32_include.v"

  
`line 62 "src/lm32_include.v"



  
`line 65 "src/lm32_include.v"

  
`line 66 "src/lm32_include.v"

  
`line 67 "src/lm32_include.v"



  
`line 70 "src/lm32_include.v"

  
`line 71 "src/lm32_include.v"

 
 
                    

                    


`line 78 "src/lm32_include.v"

  
`line 79 "src/lm32_include.v"



  
`line 82 "src/lm32_include.v"

  
`line 83 "src/lm32_include.v"



  
`line 86 "src/lm32_include.v"

  
`line 87 "src/lm32_include.v"



  
`line 90 "src/lm32_include.v"

  
`line 91 "src/lm32_include.v"



  
 

`line 96 "src/lm32_include.v"

  
`line 97 "src/lm32_include.v"

  
`line 98 "src/lm32_include.v"

 
`line 99 "src/lm32_include.v"

 
`line 100 "src/lm32_include.v"



  
`line 103 "src/lm32_include.v"

  
`line 104 "src/lm32_include.v"

 
 
 



`line 110 "src/lm32_include.v"



  
`line 113 "src/lm32_include.v"

  
`line 114 "src/lm32_include.v"

  
 
 

 


`line 121 "src/lm32_include.v"
 


  
`line 124 "src/lm32_include.v"

  
`line 125 "src/lm32_include.v"

 
 
 


`line 130 "src/lm32_include.v"



  
 

`line 135 "src/lm32_include.v"

  
 

`line 138 "src/lm32_include.v"

  
 

`line 141 "src/lm32_include.v"



  
`line 144 "src/lm32_include.v"

  
`line 145 "src/lm32_include.v"

 
`line 146 "src/lm32_include.v"

  
 

`line 149 "src/lm32_include.v"



  
`line 152 "src/lm32_include.v"



  
`line 155 "src/lm32_include.v"



  
`line 158 "src/lm32_include.v"

  
`line 159 "src/lm32_include.v"

  
`line 160 "src/lm32_include.v"

  
`line 161 "src/lm32_include.v"

  
`line 162 "src/lm32_include.v"

  
`line 163 "src/lm32_include.v"

  
`line 164 "src/lm32_include.v"

  
`line 165 "src/lm32_include.v"

  
`line 166 "src/lm32_include.v"

  
`line 167 "src/lm32_include.v"



  
`line 170 "src/lm32_include.v"

  
`line 171 "src/lm32_include.v"

  
`line 172 "src/lm32_include.v"

  
`line 173 "src/lm32_include.v"

  
`line 174 "src/lm32_include.v"

  
`line 175 "src/lm32_include.v"



  
`line 178 "src/lm32_include.v"

  
`line 179 "src/lm32_include.v"

  
`line 180 "src/lm32_include.v"

 
 
                   
                     

                   
                     


`line 189 "src/lm32_include.v"



  
`line 192 "src/lm32_include.v"

  
`line 193 "src/lm32_include.v"

  
`line 194 "src/lm32_include.v"

  
`line 195 "src/lm32_include.v"

  
`line 196 "src/lm32_include.v"

  
`line 197 "src/lm32_include.v"

  
`line 198 "src/lm32_include.v"

  
`line 199 "src/lm32_include.v"

  
`line 200 "src/lm32_include.v"

  
`line 201 "src/lm32_include.v"

  
`line 202 "src/lm32_include.v"

 
`line 203 "src/lm32_include.v"

  
`line 204 "src/lm32_include.v"

  
`line 205 "src/lm32_include.v"

  
`line 206 "src/lm32_include.v"

  
`line 207 "src/lm32_include.v"

 
`line 208 "src/lm32_include.v"

  
`line 209 "src/lm32_include.v"

  
`line 210 "src/lm32_include.v"

  
`line 211 "src/lm32_include.v"

  
`line 212 "src/lm32_include.v"

  
`line 213 "src/lm32_include.v"

  
`line 214 "src/lm32_include.v"

  
`line 215 "src/lm32_include.v"

  
`line 216 "src/lm32_include.v"

  
`line 217 "src/lm32_include.v"

 
`line 218 "src/lm32_include.v"
 


  
`line 221 "src/lm32_include.v"

  
`line 222 "src/lm32_include.v"

  
`line 223 "src/lm32_include.v"

  
`line 224 "src/lm32_include.v"

  
`line 225 "src/lm32_include.v"



  
`line 228 "src/lm32_include.v"

  
`line 229 "src/lm32_include.v"

  
`line 230 "src/lm32_include.v"

  
`line 231 "src/lm32_include.v"

  
`line 232 "src/lm32_include.v"

  
`line 233 "src/lm32_include.v"

  
`line 234 "src/lm32_include.v"

  
`line 235 "src/lm32_include.v"

  
`line 236 "src/lm32_include.v"

  
`line 237 "src/lm32_include.v"




  
`line 241 "src/lm32_include.v"

  
`line 242 "src/lm32_include.v"

  
`line 243 "src/lm32_include.v"


  
`line 245 "src/lm32_include.v"

  
`line 246 "src/lm32_include.v"

  
`line 247 "src/lm32_include.v"

  
`line 248 "src/lm32_include.v"


  
`line 250 "src/lm32_include.v"

  
`line 251 "src/lm32_include.v"



  
`line 254 "src/lm32_include.v"

  
`line 255 "src/lm32_include.v"

 
 
 


`line 260 "src/lm32_include.v"







  
`line 267 "src/lm32_include.v"

  
`line 268 "src/lm32_include.v"

  
`line 269 "src/lm32_include.v"







  
`line 276 "src/lm32_include.v"

  
`line 277 "src/lm32_include.v"

  
`line 278 "src/lm32_include.v"

  
`line 279 "src/lm32_include.v"



  
`line 282 "src/lm32_include.v"

  
`line 283 "src/lm32_include.v"

  
`line 284 "src/lm32_include.v"

  
`line 285 "src/lm32_include.v"



  
`line 288 "src/lm32_include.v"

  
`line 289 "src/lm32_include.v"



  
`line 292 "src/lm32_include.v"







  
`line 299 "src/lm32_include.v"

  
`line 300 "src/lm32_include.v"

  
`line 301 "src/lm32_include.v"

  
`line 302 "src/lm32_include.v"

  
`line 303 "src/lm32_include.v"

  
`line 304 "src/lm32_include.v"



  
`line 307 "src/lm32_include.v"

  
`line 308 "src/lm32_include.v"

  
`line 309 "src/lm32_include.v"

  
`line 310 "src/lm32_include.v"

  
`line 311 "src/lm32_include.v"

  
`line 312 "src/lm32_include.v"


 
`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"

           
  
`line 31 "/tmp/lm32-customizer/tmp.v"

  
`line 32 "/tmp/lm32-customizer/tmp.v"

  
`line 33 "/tmp/lm32-customizer/tmp.v"

  
`line 34 "/tmp/lm32-customizer/tmp.v"

  
`line 35 "/tmp/lm32-customizer/tmp.v"

  
`line 36 "/tmp/lm32-customizer/tmp.v"

  
`line 37 "/tmp/lm32-customizer/tmp.v"






module lm32_mc_arithmetic_medium_icache_debug (
    
    clk_i,
    rst_i,
    stall_d,
    kill_x,
  
    
    

`line 52 "/tmp/lm32-customizer/tmp.v"

  
    

`line 55 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 60 "/tmp/lm32-customizer/tmp.v"

    operand_0_d,
    operand_1_d,
    
    result_x,
  
    

`line 67 "/tmp/lm32-customizer/tmp.v"

    stall_request_x
    );





input clk_i;                                    
input rst_i;                                    
input stall_d;                                  
input kill_x;                                   
  
                                  
                                 

`line 82 "/tmp/lm32-customizer/tmp.v"

  
                                

`line 85 "/tmp/lm32-customizer/tmp.v"

  
                              
                             
                             

`line 90 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] operand_0_d;
input [ (32-1):0] operand_1_d;





output [ (32-1):0] result_x;               
reg    [ (32-1):0] result_x;
  
                         
    

`line 103 "/tmp/lm32-customizer/tmp.v"

output stall_request_x;                         
wire   stall_request_x;





reg [ (32-1):0] p;                         
reg [ (32-1):0] a;
reg [ (32-1):0] b;
  
  

`line 116 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;                 
reg [5:0] cycles;                               

  
                               
                                 

`line 124 "/tmp/lm32-customizer/tmp.v"







assign stall_request_x = state !=  3'b000;

  

      

`line 136 "/tmp/lm32-customizer/tmp.v"


  

       

`line 141 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        cycles <= {6{1'b0}};
        p <= { 32{1'b0}};
        a <= { 32{1'b0}};
        b <= { 32{1'b0}};
  
          

`line 158 "/tmp/lm32-customizer/tmp.v"

  
          

`line 161 "/tmp/lm32-customizer/tmp.v"

        result_x <= { 32{1'b0}};
        state <=  3'b000;
    end
    else
    begin
  
          

`line 169 "/tmp/lm32-customizer/tmp.v"

        case (state)
         3'b000:
        begin
            if (stall_d ==  1'b0)                 
            begin          
                cycles <=  32;
                p <= 32'b0;
                a <= operand_0_d;
                b <= operand_1_d;                    
  
                   
                      
                   
                      

`line 184 "/tmp/lm32-customizer/tmp.v"
                    
  
                   
                      

`line 188 "/tmp/lm32-customizer/tmp.v"

  
                   
                
                      
                      
                      
                      
                      
                
                   
                
                      
                      
                      
                      
                      
                

`line 206 "/tmp/lm32-customizer/tmp.v"

            end            
        end
  
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        

`line 252 "/tmp/lm32-customizer/tmp.v"
        
  
        
        
               
                    
               
               
              
                   
                  
                
        

`line 265 "/tmp/lm32-customizer/tmp.v"
     
  
        
               
               
              
                   
                  
                
        
        
               
               
              
                   
                  
                
        

`line 283 "/tmp/lm32-customizer/tmp.v"
   
        endcase
    end
end 

endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_top_medium_icache_debug (
    
    clk_i,
    rst_i,
    

    interrupt,

    
  
    
    

`line 335 "/tmp/lm32-customizer/tmp.v"
     
  
`line 336 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 342 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
      
    
    
    
    

`line 354 "/tmp/lm32-customizer/tmp.v"
    
  
`line 355 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 366 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





input clk_i;                                    
input rst_i;                                    


input [ (32-1):0] interrupt;          


  
               
                             

`line 393 "/tmp/lm32-customizer/tmp.v"
    

  
`line 395 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 400 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                               
   
       
     
           
    
           
    

`line 420 "/tmp/lm32-customizer/tmp.v"


  
`line 422 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 441 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;
  



 
  
`line 466 "/tmp/lm32-customizer/tmp.v"


wire [ 7:0] jtag_reg_d;
wire [ 7:0] jtag_reg_q;
wire jtag_update;
wire [2:0] jtag_reg_addr_d;
wire [2:0] jtag_reg_addr_q;
wire jtck;
wire jrstn;
 
`line 475 "/tmp/lm32-customizer/tmp.v"



  

                     
                             
                            
                   
                                 
 
                                 


`line 488 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"




   

lm32_cpu_medium_icache_debug cpu (
    
    .clk_i                 (clk_i),
  
                   

`line 505 "/tmp/lm32-customizer/tmp.v"

    .rst_i                 (rst_i),
    
  
`line 508 "/tmp/lm32-customizer/tmp.v"

    .interrupt             (interrupt),
 
`line 510 "/tmp/lm32-customizer/tmp.v"

    
  
               
             

`line 515 "/tmp/lm32-customizer/tmp.v"
     
  
`line 516 "/tmp/lm32-customizer/tmp.v"

    
    .jtag_clk              (jtck),
    .jtag_update           (jtag_update),
    .jtag_reg_q            (jtag_reg_q),
    .jtag_reg_addr_q       (jtag_reg_addr_q),
 
`line 522 "/tmp/lm32-customizer/tmp.v"

  
`line 523 "/tmp/lm32-customizer/tmp.v"

     
    .I_DAT_I               (I_DAT_I),
    .I_ACK_I               (I_ACK_I),
    .I_ERR_I               (I_ERR_I),
    .I_RTY_I               (I_RTY_I),
 
`line 529 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_I               (D_DAT_I),
    .D_ACK_I               (D_ACK_I),
    .D_ERR_I               (D_ERR_I),
    .D_RTY_I               (D_RTY_I),
    
  
                  
            
           
                 
                
 
                


`line 545 "/tmp/lm32-customizer/tmp.v"

  
`line 546 "/tmp/lm32-customizer/tmp.v"

    .jtag_reg_d            (jtag_reg_d),
    .jtag_reg_addr_d       (jtag_reg_addr_d),
 
`line 549 "/tmp/lm32-customizer/tmp.v"

      
                
               
            
            

`line 555 "/tmp/lm32-customizer/tmp.v"
    
  
`line 556 "/tmp/lm32-customizer/tmp.v"

    
    .I_DAT_O               (I_DAT_O),
    .I_ADR_O               (I_ADR_O),
    .I_CYC_O               (I_CYC_O),
    .I_SEL_O               (I_SEL_O),
    .I_STB_O               (I_STB_O),
    .I_WE_O                (I_WE_O),
    .I_CTI_O               (I_CTI_O),
    .I_LOCK_O              (I_LOCK_O),
    .I_BTE_O               (I_BTE_O),
     
`line 567 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_O               (D_DAT_O),
    .D_ADR_O               (D_ADR_O),
    .D_CYC_O               (D_CYC_O),
    .D_SEL_O               (D_SEL_O),
    .D_STB_O               (D_STB_O),
    .D_WE_O                (D_WE_O),
    .D_CTI_O               (D_CTI_O),
    .D_LOCK_O              (D_LOCK_O),
    .D_BTE_O               (D_BTE_O)
    );
   
  
`line 580 "/tmp/lm32-customizer/tmp.v"
		   

jtag_cores jtag_cores (
    
    .reg_d                 (jtag_reg_d),
    .reg_addr_d            (jtag_reg_addr_d),
    
    .reg_update            (jtag_update),
    .reg_q                 (jtag_reg_q),
    .reg_addr_q            (jtag_reg_addr_q),
    .jtck                  (jtck),
    .jrstn                 (jrstn)
    );
 
`line 593 "/tmp/lm32-customizer/tmp.v"
        
   
endmodule
































































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_cpu_medium_icache_debug (
    
    clk_i,
  
    

`line 671 "/tmp/lm32-customizer/tmp.v"
    
    rst_i,
    
  
`line 674 "/tmp/lm32-customizer/tmp.v"

    interrupt,
 
`line 676 "/tmp/lm32-customizer/tmp.v"

    
  
    
    

`line 681 "/tmp/lm32-customizer/tmp.v"
     
  
`line 682 "/tmp/lm32-customizer/tmp.v"

    
    jtag_clk,
    jtag_update, 
    jtag_reg_q,
    jtag_reg_addr_q,
 
`line 688 "/tmp/lm32-customizer/tmp.v"

  
`line 689 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 695 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
  
    
    
    
    
    
 
    


`line 711 "/tmp/lm32-customizer/tmp.v"

  
`line 712 "/tmp/lm32-customizer/tmp.v"

    jtag_reg_d,
    jtag_reg_addr_d,
 
`line 715 "/tmp/lm32-customizer/tmp.v"

      
    
    
    
    

`line 721 "/tmp/lm32-customizer/tmp.v"
    
  
`line 722 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 733 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





parameter eba_reset =  32'h00000000;                           
  
`line 751 "/tmp/lm32-customizer/tmp.v"

parameter deba_reset =  32'h10000000;                         
 
`line 753 "/tmp/lm32-customizer/tmp.v"


  
`line 755 "/tmp/lm32-customizer/tmp.v"

parameter icache_associativity =  1;     
parameter icache_sets =  256;                       
parameter icache_bytes_per_line =  16;   
parameter icache_base_address =  32'h0;       
parameter icache_limit =  32'h7fffffff;                     
 
       
                         
     
         
                       

`line 767 "/tmp/lm32-customizer/tmp.v"


  
        
                          
      
          
                        

`line 775 "/tmp/lm32-customizer/tmp.v"

parameter dcache_associativity = 1;    
parameter dcache_sets = 512;                      
parameter dcache_bytes_per_line = 16;  
parameter dcache_base_address = 0;      
parameter dcache_limit = 0;                    
 
`line 781 "/tmp/lm32-customizer/tmp.v"


  
`line 783 "/tmp/lm32-customizer/tmp.v"

parameter watchpoints =  32'h4;                       
 
   

`line 787 "/tmp/lm32-customizer/tmp.v"

  
                          

`line 790 "/tmp/lm32-customizer/tmp.v"

parameter breakpoints = 0;
 
`line 792 "/tmp/lm32-customizer/tmp.v"


  
`line 794 "/tmp/lm32-customizer/tmp.v"

parameter interrupts =  32;                         
 
   

`line 798 "/tmp/lm32-customizer/tmp.v"






input clk_i;                                    
  
                                   

`line 807 "/tmp/lm32-customizer/tmp.v"
    
input rst_i;                                    

  
`line 810 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] interrupt;          
 
`line 812 "/tmp/lm32-customizer/tmp.v"


  
               
                             

`line 817 "/tmp/lm32-customizer/tmp.v"
    

  
`line 819 "/tmp/lm32-customizer/tmp.v"

input jtag_clk;                                 
input jtag_update;                              
input [ 7:0] jtag_reg_q;              
input [2:0] jtag_reg_addr_q;
 
`line 824 "/tmp/lm32-customizer/tmp.v"


  
`line 826 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 831 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                   
     
                           
    
                          
    
                 
     
                               
    
 
                               
    


`line 857 "/tmp/lm32-customizer/tmp.v"


  
`line 859 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_reg_d;
wire   [ 7:0] jtag_reg_d;
output [2:0] jtag_reg_addr_d;
wire   [2:0] jtag_reg_addr_d;
 
`line 864 "/tmp/lm32-customizer/tmp.v"


  
                               
   
       
     
           
    
           
    

`line 875 "/tmp/lm32-customizer/tmp.v"


  
`line 877 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 896 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;







  
`line 923 "/tmp/lm32-customizer/tmp.v"

reg valid_a;                                    
 
`line 925 "/tmp/lm32-customizer/tmp.v"

reg valid_f;                                    
reg valid_d;                                    
reg valid_x;                                    
reg valid_m;                                    
reg valid_w;                                    
   
wire q_x;
wire [ (32-1):0] immediate_d;              
wire load_d;                                    
reg load_x;                                     
reg load_m;
wire load_q_x;
wire store_q_x;
wire store_d;                                   
reg store_x;
reg store_m;
wire [ 1:0] size_d;                   
reg [ 1:0] size_x;
wire branch_d;                                  
wire branch_predict_d;                          
wire branch_predict_taken_d;                    
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;   
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_d;
wire bi_unconditional;
wire bi_conditional;
reg branch_x;                                   
reg branch_predict_x;
reg branch_predict_taken_x;
reg branch_m;
reg branch_predict_m;
reg branch_predict_taken_m;
wire branch_mispredict_taken_m;                 
wire branch_flushX_m;                           
wire branch_reg_d;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset_d;            
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_x;             
reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;
wire [ 0:0] d_result_sel_0_d; 
wire [ 1:0] d_result_sel_1_d; 

wire x_result_sel_csr_d;                        
reg x_result_sel_csr_x;
  
                    
 

`line 971 "/tmp/lm32-customizer/tmp.v"

      
                       
 

`line 975 "/tmp/lm32-customizer/tmp.v"

  
`line 976 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_sext_d;                       
reg x_result_sel_sext_x;
 
`line 979 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_logic_d;                      
reg x_result_sel_logic_x;
  
                        
 

`line 985 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_add_d;                        
reg x_result_sel_add_x;
wire m_result_sel_compare_d;                    
reg m_result_sel_compare_x;
reg m_result_sel_compare_m;
  
`line 991 "/tmp/lm32-customizer/tmp.v"

wire m_result_sel_shift_d;                      
reg m_result_sel_shift_x;
reg m_result_sel_shift_m;
 
`line 995 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_load_d;                       
reg w_result_sel_load_x;
reg w_result_sel_load_m;
reg w_result_sel_load_w;
  
`line 1000 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_mul_d;                        
reg w_result_sel_mul_x;
reg w_result_sel_mul_m;
reg w_result_sel_mul_w;
 
`line 1005 "/tmp/lm32-customizer/tmp.v"

wire x_bypass_enable_d;                         
reg x_bypass_enable_x;                          
wire m_bypass_enable_d;                         
reg m_bypass_enable_x;                          
reg m_bypass_enable_m;
wire sign_extend_d;                             
reg sign_extend_x;
wire write_enable_d;                            
reg write_enable_x;
wire write_enable_q_x;
reg write_enable_m;
wire write_enable_q_m;
reg write_enable_w;
wire write_enable_q_w;
wire read_enable_0_d;                           
wire [ (5-1):0] read_idx_0_d;          
wire read_enable_1_d;                           
wire [ (5-1):0] read_idx_1_d;          
wire [ (5-1):0] write_idx_d;           
reg [ (5-1):0] write_idx_x;            
reg [ (5-1):0] write_idx_m;
reg [ (5-1):0] write_idx_w;
wire [ (5-1):0] csr_d;                     
reg  [ (5-1):0] csr_x;                  
wire [ (3-1):0] condition_d;         
reg [ (3-1):0] condition_x;          
  
`line 1032 "/tmp/lm32-customizer/tmp.v"

wire break_d;                                   
reg break_x;                                    
 
`line 1035 "/tmp/lm32-customizer/tmp.v"

wire scall_d;                                   
reg scall_x;    
wire eret_d;                                    
reg eret_x;
wire eret_q_x;
reg eret_m;
  
 

`line 1044 "/tmp/lm32-customizer/tmp.v"

  
`line 1045 "/tmp/lm32-customizer/tmp.v"

wire bret_d;                                    
reg bret_x;
wire bret_q_x;
reg bret_m;
  
 

`line 1052 "/tmp/lm32-customizer/tmp.v"

 
`line 1053 "/tmp/lm32-customizer/tmp.v"

wire csr_write_enable_d;                        
reg csr_write_enable_x;
wire csr_write_enable_q_x;
  
       

`line 1059 "/tmp/lm32-customizer/tmp.v"


  
                                
 
 
  

`line 1066 "/tmp/lm32-customizer/tmp.v"


reg [ (32-1):0] d_result_0;                
reg [ (32-1):0] d_result_1;                
reg [ (32-1):0] x_result;                  
reg [ (32-1):0] m_result;                  
reg [ (32-1):0] w_result;                  

reg [ (32-1):0] operand_0_x;               
reg [ (32-1):0] operand_1_x;               
reg [ (32-1):0] store_operand_x;           
reg [ (32-1):0] operand_m;                 
reg [ (32-1):0] operand_w;                 


  
`line 1081 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] reg_data_live_0;          
reg [ (32-1):0] reg_data_live_1;  
reg use_buf;                                    
reg [ (32-1):0] reg_data_buf_0;
reg [ (32-1):0] reg_data_buf_1;
 
`line 1087 "/tmp/lm32-customizer/tmp.v"

  
`line 1088 "/tmp/lm32-customizer/tmp.v"

 
     

`line 1091 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] reg_data_0;               
wire [ (32-1):0] reg_data_1;               
reg [ (32-1):0] bypass_data_0;             
reg [ (32-1):0] bypass_data_1;             
wire reg_write_enable_q_w;

reg interlock;                                  

wire stall_a;                                   
wire stall_f;                                   
wire stall_d;                                   
wire stall_x;                                   
wire stall_m;                                   


wire adder_op_d;                                
reg adder_op_x;                                 
reg adder_op_x_n;                               
wire [ (32-1):0] adder_result_x;           
wire adder_overflow_x;                          
wire adder_carry_n_x;                           


wire [ 3:0] logic_op_d;           
reg [ 3:0] logic_op_x;            
wire [ (32-1):0] logic_result_x;           

  
`line 1119 "/tmp/lm32-customizer/tmp.v"


wire [ (32-1):0] sextb_result_x;           
wire [ (32-1):0] sexth_result_x;           
wire [ (32-1):0] sext_result_x;            
 
`line 1124 "/tmp/lm32-customizer/tmp.v"



  
`line 1127 "/tmp/lm32-customizer/tmp.v"

  
                                   
                                     

`line 1131 "/tmp/lm32-customizer/tmp.v"

wire direction_d;                               
reg direction_x;                                        
reg direction_m;
wire [ (32-1):0] shifter_result_m;         
 
`line 1136 "/tmp/lm32-customizer/tmp.v"

  
                               
 
                              
 

`line 1142 "/tmp/lm32-customizer/tmp.v"

  
           

`line 1145 "/tmp/lm32-customizer/tmp.v"



  
`line 1148 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] multiplier_result_w;      
 
`line 1150 "/tmp/lm32-customizer/tmp.v"

  
                                 
 

`line 1154 "/tmp/lm32-customizer/tmp.v"



  
                                   
 
 
 
                           

`line 1163 "/tmp/lm32-customizer/tmp.v"



  
                         
  

`line 1169 "/tmp/lm32-customizer/tmp.v"



  
`line 1172 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] interrupt_csr_read_data_x;
 
`line 1174 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] cfg;                      
wire [ (32-1):0] cfg2;                     
  
                          

`line 1179 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] csr_read_data_x;           


wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                       
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                       
  
                          

`line 1190 "/tmp/lm32-customizer/tmp.v"

  
`line 1191 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] instruction_f;     
 
`line 1193 "/tmp/lm32-customizer/tmp.v"



wire [ (32-1):0] instruction_d;     
  
`line 1197 "/tmp/lm32-customizer/tmp.v"

wire iflush;                                    
wire icache_stall_request;                      
wire icache_restart_request;                    
wire icache_refill_request;                     
wire icache_refilling;                          
 
`line 1203 "/tmp/lm32-customizer/tmp.v"

  
          
            
                
                                 
                       

`line 1210 "/tmp/lm32-customizer/tmp.v"



  
                                   
                                     
                       
                     
                      
                           

`line 1220 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] load_data_w;              
wire stall_wb_load;                             


  
`line 1225 "/tmp/lm32-customizer/tmp.v"

  
`line 1226 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] jtx_csr_read_data;        
wire [ (32-1):0] jrx_csr_read_data;        
 
`line 1229 "/tmp/lm32-customizer/tmp.v"

  
`line 1230 "/tmp/lm32-customizer/tmp.v"

wire jtag_csr_write_enable;                     
wire [ (32-1):0] jtag_csr_write_data;      
wire [ (5-1):0] jtag_csr;                  
wire jtag_read_enable;                          
wire [ 7:0] jtag_read_data;
wire jtag_write_enable;
wire [ 7:0] jtag_write_data;
wire [ (32-1):0] jtag_address;
wire jtag_access_complete;
 
`line 1240 "/tmp/lm32-customizer/tmp.v"

  
`line 1241 "/tmp/lm32-customizer/tmp.v"

wire jtag_break;                                
 
`line 1243 "/tmp/lm32-customizer/tmp.v"

 
`line 1244 "/tmp/lm32-customizer/tmp.v"



wire raw_x_0;                                   
wire raw_x_1;                                   
wire raw_m_0;                                   
wire raw_m_1;                                   
wire raw_w_0;                                   
wire raw_w_1;                                   


wire cmp_zero;                                  
wire cmp_negative;                              
wire cmp_overflow;                              
wire cmp_carry_n;                               
reg condition_met_x;                            
reg condition_met_m;
      
                             

`line 1263 "/tmp/lm32-customizer/tmp.v"

wire branch_taken_m;                            

wire kill_f;                                    
wire kill_d;                                    
wire kill_x;                                    
wire kill_m;                                    
wire kill_w;                                    

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] eba;                 
  
`line 1273 "/tmp/lm32-customizer/tmp.v"

reg [ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8] deba;                
 
`line 1275 "/tmp/lm32-customizer/tmp.v"

reg [ (3-1):0] eid_x;                      
  
                        
                        

`line 1280 "/tmp/lm32-customizer/tmp.v"


  
`line 1282 "/tmp/lm32-customizer/tmp.v"

  
`line 1283 "/tmp/lm32-customizer/tmp.v"

wire dc_ss;                                     
 
`line 1285 "/tmp/lm32-customizer/tmp.v"

wire dc_re;                                     
wire exception_x;                               
reg exception_m;                                
wire debug_exception_x;                         
reg debug_exception_m;
reg debug_exception_w;
wire debug_exception_q_w;
wire non_debug_exception_x;                     
reg non_debug_exception_m;
reg non_debug_exception_w;
wire non_debug_exception_q_w;
 
                                
 
 
 

`line 1302 "/tmp/lm32-customizer/tmp.v"


  
`line 1304 "/tmp/lm32-customizer/tmp.v"

  
`line 1305 "/tmp/lm32-customizer/tmp.v"

wire reset_exception;                           
 
`line 1307 "/tmp/lm32-customizer/tmp.v"

 
`line 1308 "/tmp/lm32-customizer/tmp.v"

  
`line 1309 "/tmp/lm32-customizer/tmp.v"

wire interrupt_exception;                       
 
`line 1311 "/tmp/lm32-customizer/tmp.v"

  
`line 1312 "/tmp/lm32-customizer/tmp.v"

wire breakpoint_exception;                      
wire watchpoint_exception;                      
 
`line 1315 "/tmp/lm32-customizer/tmp.v"

  
            
                   

`line 1319 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1322 "/tmp/lm32-customizer/tmp.v"

wire system_call_exception;                     

  
                         

`line 1327 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







lm32_instruction_unit_medium_icache_debug #(
    .associativity          (icache_associativity),
    .sets                   (icache_sets),
    .bytes_per_line         (icache_bytes_per_line),
    .base_address           (icache_base_address),
    .limit                  (icache_limit)
  ) instruction_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .stall_d                (stall_d),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .valid_f                (valid_f),
    .valid_d                (valid_d),
    .kill_f                 (kill_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .branch_predict_address_d (branch_predict_address_d),
      
             
            

`line 1364 "/tmp/lm32-customizer/tmp.v"

    .exception_m            (exception_m),
    .branch_taken_m         (branch_taken_m),
    .branch_mispredict_taken_m (branch_mispredict_taken_m),
    .branch_target_m        (branch_target_m),
  
`line 1369 "/tmp/lm32-customizer/tmp.v"

    .iflush                 (iflush),
 
`line 1371 "/tmp/lm32-customizer/tmp.v"

  
          
            
                 

`line 1376 "/tmp/lm32-customizer/tmp.v"

  
     
      
           

`line 1381 "/tmp/lm32-customizer/tmp.v"
        
  
`line 1382 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_i                (I_DAT_I),
    .i_ack_i                (I_ACK_I),
    .i_err_i                (I_ERR_I),
    .i_rty_i                (I_RTY_I),
 
`line 1388 "/tmp/lm32-customizer/tmp.v"

  
`line 1389 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_enable       (jtag_read_enable),
    .jtag_write_enable      (jtag_write_enable),
    .jtag_write_data        (jtag_write_data),
    .jtag_address           (jtag_address),
 
`line 1394 "/tmp/lm32-customizer/tmp.v"

    
    
    .pc_f                   (pc_f),
    .pc_d                   (pc_d),
    .pc_x                   (pc_x),
    .pc_m                   (pc_m),
    .pc_w                   (pc_w),
  
`line 1402 "/tmp/lm32-customizer/tmp.v"

    .icache_stall_request   (icache_stall_request),
    .icache_restart_request (icache_restart_request),
    .icache_refill_request  (icache_refill_request),
    .icache_refilling       (icache_refilling),
 
`line 1407 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1410 "/tmp/lm32-customizer/tmp.v"

  
`line 1411 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_o                (I_DAT_O),
    .i_adr_o                (I_ADR_O),
    .i_cyc_o                (I_CYC_O),
    .i_sel_o                (I_SEL_O),
    .i_stb_o                (I_STB_O),
    .i_we_o                 (I_WE_O),
    .i_cti_o                (I_CTI_O),
    .i_lock_o               (I_LOCK_O),
    .i_bte_o                (I_BTE_O),
 
`line 1422 "/tmp/lm32-customizer/tmp.v"

  
`line 1423 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_data         (jtag_read_data),
    .jtag_access_complete   (jtag_access_complete),
 
`line 1426 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1429 "/tmp/lm32-customizer/tmp.v"

  
`line 1430 "/tmp/lm32-customizer/tmp.v"

    .instruction_f          (instruction_f),
 
`line 1432 "/tmp/lm32-customizer/tmp.v"

    .instruction_d          (instruction_d)
    );


lm32_decoder_medium_icache_debug decoder (
    
    .instruction            (instruction_d),
    
    .d_result_sel_0         (d_result_sel_0_d),
    .d_result_sel_1         (d_result_sel_1_d),
    .x_result_sel_csr       (x_result_sel_csr_d),
  
      

`line 1446 "/tmp/lm32-customizer/tmp.v"

      
         

`line 1449 "/tmp/lm32-customizer/tmp.v"

  
`line 1450 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_sext      (x_result_sel_sext_d),
 
`line 1452 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_logic     (x_result_sel_logic_d),
  
          

`line 1456 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_add       (x_result_sel_add_d),
    .m_result_sel_compare   (m_result_sel_compare_d),
  
`line 1459 "/tmp/lm32-customizer/tmp.v"

    .m_result_sel_shift     (m_result_sel_shift_d),  
 
`line 1461 "/tmp/lm32-customizer/tmp.v"
    
    .w_result_sel_load      (w_result_sel_load_d),
  
`line 1463 "/tmp/lm32-customizer/tmp.v"

    .w_result_sel_mul       (w_result_sel_mul_d),
 
`line 1465 "/tmp/lm32-customizer/tmp.v"

    .x_bypass_enable        (x_bypass_enable_d),
    .m_bypass_enable        (m_bypass_enable_d),
    .read_enable_0          (read_enable_0_d),
    .read_idx_0             (read_idx_0_d),
    .read_enable_1          (read_enable_1_d),
    .read_idx_1             (read_idx_1_d),
    .write_enable           (write_enable_d),
    .write_idx              (write_idx_d),
    .immediate              (immediate_d),
    .branch_offset          (branch_offset_d),
    .load                   (load_d),
    .store                  (store_d),
    .size                   (size_d),
    .sign_extend            (sign_extend_d),
    .adder_op               (adder_op_d),
    .logic_op               (logic_op_d),
  
`line 1482 "/tmp/lm32-customizer/tmp.v"

    .direction              (direction_d),
 
`line 1484 "/tmp/lm32-customizer/tmp.v"

  
                 
                

`line 1488 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1491 "/tmp/lm32-customizer/tmp.v"

  
                     
                    

`line 1495 "/tmp/lm32-customizer/tmp.v"

    .branch                 (branch_d),
    .bi_unconditional       (bi_unconditional),
    .bi_conditional         (bi_conditional),
    .branch_reg             (branch_reg_d),
    .condition              (condition_d),
  
`line 1501 "/tmp/lm32-customizer/tmp.v"

    .break_opcode           (break_d),
 
`line 1503 "/tmp/lm32-customizer/tmp.v"

    .scall                  (scall_d),
    .eret                   (eret_d),
  
`line 1506 "/tmp/lm32-customizer/tmp.v"

    .bret                   (bret_d),
 
`line 1508 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1511 "/tmp/lm32-customizer/tmp.v"

    .csr_write_enable       (csr_write_enable_d)
    ); 


lm32_load_store_unit_medium_icache_debug #(
    .associativity          (dcache_associativity),
    .sets                   (dcache_sets),
    .bytes_per_line         (dcache_bytes_per_line),
    .base_address           (dcache_base_address),
    .limit                  (dcache_limit)
  ) load_store_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .kill_x                 (kill_x),
    .kill_m                 (kill_m),
    .exception_m            (exception_m),
    .store_operand_x        (store_operand_x),
    .load_store_address_x   (adder_result_x),
    .load_store_address_m   (operand_m),
    .load_store_address_w   (operand_w[1:0]),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_q_x               (load_q_x),
    .store_q_x              (store_q_x),
    .load_q_m               (load_q_m),
    .store_q_m              (store_q_m),
    .sign_extend_x          (sign_extend_x),
    .size_x                 (size_x),
  
                     

`line 1547 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1550 "/tmp/lm32-customizer/tmp.v"

    
    .d_dat_i                (D_DAT_I),
    .d_ack_i                (D_ACK_I),
    .d_err_i                (D_ERR_I),
    .d_rty_i                (D_RTY_I),
    
    
  
      
     
       
           

`line 1563 "/tmp/lm32-customizer/tmp.v"
    
  
          
            
                 
       

`line 1569 "/tmp/lm32-customizer/tmp.v"

    .load_data_w            (load_data_w),
    .stall_wb_load          (stall_wb_load),
    
    .d_dat_o                (D_DAT_O),
    .d_adr_o                (D_ADR_O),
    .d_cyc_o                (D_CYC_O),
    .d_sel_o                (D_SEL_O),
    .d_stb_o                (D_STB_O),
    .d_we_o                 (D_WE_O),
    .d_cti_o                (D_CTI_O),
    .d_lock_o               (D_LOCK_O),
    .d_bte_o                (D_BTE_O)
    );      
       

lm32_adder adder (
    
    .adder_op_x             (adder_op_x),
    .adder_op_x_n           (adder_op_x_n),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .adder_result_x         (adder_result_x),
    .adder_carry_n_x        (adder_carry_n_x),
    .adder_overflow_x       (adder_overflow_x)
    );


lm32_logic_op logic_op (
    
    .logic_op_x             (logic_op_x),
    .operand_0_x            (operand_0_x),

    .operand_1_x            (operand_1_x),
    
    .logic_result_x         (logic_result_x)
    );
              
  
`line 1608 "/tmp/lm32-customizer/tmp.v"


lm32_shifter shifter (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .direction_x            (direction_x),
    .sign_extend_x          (sign_extend_x),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .shifter_result_m       (shifter_result_m)
    );
 
`line 1622 "/tmp/lm32-customizer/tmp.v"


  
`line 1624 "/tmp/lm32-customizer/tmp.v"


lm32_multiplier multiplier (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .operand_0              (d_result_0),
    .operand_1              (d_result_1),
    
    .result                 (multiplier_result_w)    
    );
 
`line 1637 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
                    
                     
                   
                   
                  

         
                 

 
               
              
              
    
                
                
    
                   
                   
           

            
    

`line 1668 "/tmp/lm32-customizer/tmp.v"

              
  
`line 1670 "/tmp/lm32-customizer/tmp.v"


lm32_interrupt_medium_icache_debug interrupt_unit (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    
    .interrupt              (interrupt),
    
    .stall_x                (stall_x),
  
`line 1680 "/tmp/lm32-customizer/tmp.v"

    .non_debug_exception    (non_debug_exception_q_w), 
    .debug_exception        (debug_exception_q_w),
 
                   

`line 1685 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
  
`line 1687 "/tmp/lm32-customizer/tmp.v"

    .bret_q_x               (bret_q_x),
 
`line 1689 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    
    .interrupt_exception    (interrupt_exception),
    
    .csr_read_data          (interrupt_csr_read_data_x)
    );
 
`line 1698 "/tmp/lm32-customizer/tmp.v"


  
`line 1700 "/tmp/lm32-customizer/tmp.v"


lm32_jtag_medium_icache_debug jtag (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .jtag_clk               (jtag_clk),
    .jtag_update            (jtag_update),
    .jtag_reg_q             (jtag_reg_q),
    .jtag_reg_addr_q        (jtag_reg_addr_q),
    
  
`line 1712 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    .stall_x                (stall_x),
 
`line 1717 "/tmp/lm32-customizer/tmp.v"

  
`line 1718 "/tmp/lm32-customizer/tmp.v"

    .jtag_read_data         (jtag_read_data),
    .jtag_access_complete   (jtag_access_complete),
 
`line 1721 "/tmp/lm32-customizer/tmp.v"

  
`line 1722 "/tmp/lm32-customizer/tmp.v"

    .exception_q_w          (debug_exception_q_w || non_debug_exception_q_w),
 
`line 1724 "/tmp/lm32-customizer/tmp.v"
    
    
    
  
`line 1727 "/tmp/lm32-customizer/tmp.v"

    .jtx_csr_read_data      (jtx_csr_read_data),
    .jrx_csr_read_data      (jrx_csr_read_data),
 
`line 1730 "/tmp/lm32-customizer/tmp.v"

  
`line 1731 "/tmp/lm32-customizer/tmp.v"

    .jtag_csr_write_enable  (jtag_csr_write_enable),
    .jtag_csr_write_data    (jtag_csr_write_data),
    .jtag_csr               (jtag_csr),
    .jtag_read_enable       (jtag_read_enable),
    .jtag_write_enable      (jtag_write_enable),
    .jtag_write_data        (jtag_write_data),
    .jtag_address           (jtag_address),
 
`line 1739 "/tmp/lm32-customizer/tmp.v"

  
`line 1740 "/tmp/lm32-customizer/tmp.v"

    .jtag_break             (jtag_break),
    .jtag_reset             (reset_exception),
 
`line 1743 "/tmp/lm32-customizer/tmp.v"

    
    .jtag_reg_d             (jtag_reg_d),
    .jtag_reg_addr_d        (jtag_reg_addr_d)
    );
 
`line 1748 "/tmp/lm32-customizer/tmp.v"


  
`line 1750 "/tmp/lm32-customizer/tmp.v"


lm32_debug_medium_icache_debug #(
    .breakpoints            (breakpoints),
    .watchpoints            (watchpoints)
  ) hw_debug (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    .pc_x                   (pc_x),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_store_address_x   (adder_result_x),
    .csr_write_enable_x     (csr_write_enable_q_x),
    .csr_write_data         (operand_1_x),
    .csr_x                  (csr_x),
  
`line 1766 "/tmp/lm32-customizer/tmp.v"

    .jtag_csr_write_enable  (jtag_csr_write_enable),
    .jtag_csr_write_data    (jtag_csr_write_data),
    .jtag_csr               (jtag_csr),
 
`line 1770 "/tmp/lm32-customizer/tmp.v"

  
`line 1771 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
    .bret_q_x               (bret_q_x),
    .stall_x                (stall_x),
    .exception_x            (exception_x),
    .q_x                    (q_x),
  
      

`line 1779 "/tmp/lm32-customizer/tmp.v"

 
`line 1780 "/tmp/lm32-customizer/tmp.v"

    
  
`line 1782 "/tmp/lm32-customizer/tmp.v"

    .dc_ss                  (dc_ss),
 
`line 1784 "/tmp/lm32-customizer/tmp.v"

    .dc_re                  (dc_re),
    .bp_match               (bp_match),
    .wp_match               (wp_match)
    );
 
`line 1789 "/tmp/lm32-customizer/tmp.v"




  
`line 1793 "/tmp/lm32-customizer/tmp.v"

   
           
            
          
            


             
              
    

   wire [31:0] regfile_data_0, regfile_data_1;
   reg [31:0]  w_result_d;
   reg 	       regfile_raw_0, regfile_raw_0_nxt;
   reg 	       regfile_raw_1, regfile_raw_1_nxt;
   
   
             
          

   always @(reg_write_enable_q_w or write_idx_w or instruction_f)
     begin
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[25:21]))
	  regfile_raw_0_nxt = 1'b1;
	else
	  regfile_raw_0_nxt = 1'b0;
	
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[20:16]))
	  regfile_raw_1_nxt = 1'b1;
	else
	  regfile_raw_1_nxt = 1'b0;
     end
   
   
           
           
       

   always @(regfile_raw_0 or w_result_d or regfile_data_0)
     if (regfile_raw_0)
       reg_data_live_0 = w_result_d;
     else
       reg_data_live_0 = regfile_data_0;
   
   
           
           
       

   always @(regfile_raw_1 or w_result_d or regfile_data_1)
     if (regfile_raw_1)
       reg_data_live_1 = w_result_d;
     else
       reg_data_live_1 = regfile_data_1;
   
   
     

   always @(posedge clk_i  )
     if (rst_i ==  1'b1)
       begin
	  regfile_raw_0 <= 1'b0;
	  regfile_raw_1 <= 1'b0;
	  w_result_d <= 32'b0;
       end
     else
       begin
	  regfile_raw_0 <= regfile_raw_0_nxt;
	  regfile_raw_1 <= regfile_raw_1_nxt;
	  w_result_d <= w_result;
       end
   
   
      

   
   lm32_dp_ram
     #(
       
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_0
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[25:21]),
      
      .rdata_o	(regfile_data_0)
      );

   lm32_dp_ram
     #(
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_1
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[20:16]),
      
      .rdata_o	(regfile_data_1)
      );
 
`line 1910 "/tmp/lm32-customizer/tmp.v"


  
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      
   
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      

`line 1978 "/tmp/lm32-customizer/tmp.v"







  
`line 1985 "/tmp/lm32-customizer/tmp.v"


assign reg_data_0 = use_buf ? reg_data_buf_0 : reg_data_live_0;
assign reg_data_1 = use_buf ? reg_data_buf_1 : reg_data_live_1;
 
`line 1989 "/tmp/lm32-customizer/tmp.v"

  
`line 1990 "/tmp/lm32-customizer/tmp.v"

 

   
   

`line 1995 "/tmp/lm32-customizer/tmp.v"



assign raw_x_0 = (write_idx_x == read_idx_0_d) && (write_enable_q_x ==  1'b1);
assign raw_m_0 = (write_idx_m == read_idx_0_d) && (write_enable_q_m ==  1'b1);
assign raw_w_0 = (write_idx_w == read_idx_0_d) && (write_enable_q_w ==  1'b1);
assign raw_x_1 = (write_idx_x == read_idx_1_d) && (write_enable_q_x ==  1'b1);
assign raw_m_1 = (write_idx_m == read_idx_1_d) && (write_enable_q_m ==  1'b1);
assign raw_w_1 = (write_idx_w == read_idx_1_d) && (write_enable_q_w ==  1'b1);


always @(*)
begin
    if (   (   (x_bypass_enable_x ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_x_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_x_1 ==  1'b1))
               )
           )
        || (   (m_bypass_enable_m ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_m_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_m_1 ==  1'b1))
               )
           )
       )
        interlock =  1'b1;
    else
        interlock =  1'b0;
end


always @(*)
begin
    if (raw_x_0 ==  1'b1)        
        bypass_data_0 = x_result;
    else if (raw_m_0 ==  1'b1)
        bypass_data_0 = m_result;
    else if (raw_w_0 ==  1'b1)
        bypass_data_0 = w_result;
    else
        bypass_data_0 = reg_data_0;
end


always @(*)
begin
    if (raw_x_1 ==  1'b1)
        bypass_data_1 = x_result;
    else if (raw_m_1 ==  1'b1)
        bypass_data_1 = m_result;
    else if (raw_w_1 ==  1'b1)
        bypass_data_1 = w_result;
    else
        bypass_data_1 = reg_data_1;
end

   
          
       
       
     

   assign branch_predict_d = bi_unconditional | bi_conditional;
   assign branch_predict_taken_d = bi_unconditional ? 1'b1 : (bi_conditional ? instruction_d[15] : 1'b0);
   
   
   assign branch_target_d = pc_d + branch_offset_d;

   
   
   
   assign branch_predict_address_d = branch_predict_taken_d ? branch_target_d : pc_f;


always @(*)
begin
    d_result_0 = d_result_sel_0_d[0] ? {pc_f, 2'b00} : bypass_data_0; 
    case (d_result_sel_1_d)
     2'b00:      d_result_1 = { 32{1'b0}};
     2'b01:     d_result_1 = bypass_data_1;
     2'b10: d_result_1 = immediate_d;
    default:                        d_result_1 = { 32{1'bx}};
    endcase
end

      

   
   

`line 2083 "/tmp/lm32-customizer/tmp.v"


  
`line 2085 "/tmp/lm32-customizer/tmp.v"


assign sextb_result_x = {{24{operand_0_x[7]}}, operand_0_x[7:0]};
assign sexth_result_x = {{16{operand_0_x[15]}}, operand_0_x[15:0]};
assign sext_result_x = size_x ==  2'b00 ? sextb_result_x : sexth_result_x;
 
`line 2090 "/tmp/lm32-customizer/tmp.v"


  

      

`line 2095 "/tmp/lm32-customizer/tmp.v"



assign cmp_zero = operand_0_x == operand_1_x;
assign cmp_negative = adder_result_x[ 32-1];
assign cmp_overflow = adder_overflow_x;
assign cmp_carry_n = adder_carry_n_x;
always @(*)
begin
    case (condition_x)
     3'b000:   condition_met_x =  1'b1;
     3'b110:   condition_met_x =  1'b1;
     3'b001:    condition_met_x = cmp_zero;
     3'b111:   condition_met_x = !cmp_zero;
     3'b010:    condition_met_x = !cmp_zero && (cmp_negative == cmp_overflow);
     3'b101:   condition_met_x = cmp_carry_n && !cmp_zero;
     3'b011:   condition_met_x = cmp_negative == cmp_overflow;
     3'b100:  condition_met_x = cmp_carry_n;
    default:              condition_met_x = 1'bx;
    endcase 
end


always @(*)
begin
    x_result =   x_result_sel_add_x ? adder_result_x 
               : x_result_sel_csr_x ? csr_read_data_x
  
`line 2122 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_sext_x ? sext_result_x
 
`line 2124 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2127 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2130 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2133 "/tmp/lm32-customizer/tmp.v"

               : logic_result_x;
end


always @(*)
begin
    m_result =   m_result_sel_compare_m ? {{ 32-1{1'b0}}, condition_met_m}
  
`line 2141 "/tmp/lm32-customizer/tmp.v"

               : m_result_sel_shift_m ? shifter_result_m
 
`line 2143 "/tmp/lm32-customizer/tmp.v"

               : operand_m; 
end


always @(*)
begin
    w_result =    w_result_sel_load_w ? load_data_w
  
`line 2151 "/tmp/lm32-customizer/tmp.v"

                : w_result_sel_mul_w ? multiplier_result_w
 
`line 2153 "/tmp/lm32-customizer/tmp.v"

                : operand_w;
end

      

          
                                
                                     
                                 
                                 
                              

`line 2165 "/tmp/lm32-customizer/tmp.v"



assign branch_taken_m =      (stall_m ==  1'b0) 
                          && (   (   (branch_m ==  1'b1) 
                                  && (valid_m ==  1'b1)
                                  && (   (   (condition_met_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b0)
					 )
				      || (   (condition_met_m ==  1'b0)
					  && (branch_predict_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b1)
					 )
				     )
                                 ) 
                              || (exception_m ==  1'b1)
                             );


assign branch_mispredict_taken_m =    (condition_met_m ==  1'b0)
                                   && (branch_predict_m ==  1'b1)
	   			   && (branch_predict_taken_m ==  1'b1);
   

assign branch_flushX_m =    (stall_m ==  1'b0)
                         && (   (   (branch_m ==  1'b1) 
                                 && (valid_m ==  1'b1)
			         && (   (condition_met_m ==  1'b1)
				     || (   (condition_met_m ==  1'b0)
					 && (branch_predict_m ==  1'b1)
					 && (branch_predict_taken_m ==  1'b1)
					)
				    )
			        )
			     || (exception_m ==  1'b1)
			    );


assign kill_f =    (   (valid_d ==  1'b1)
                    && (branch_predict_taken_d ==  1'b1)
		   )
                || (branch_taken_m ==  1'b1) 
      
                   

`line 2209 "/tmp/lm32-customizer/tmp.v"

  
`line 2210 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1) 
 
`line 2212 "/tmp/lm32-customizer/tmp.v"

                  
                   

`line 2215 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_d =    (branch_taken_m ==  1'b1) 
      
                   

`line 2220 "/tmp/lm32-customizer/tmp.v"

  
`line 2221 "/tmp/lm32-customizer/tmp.v"

                || (icache_refill_request ==  1'b1)     
 
`line 2223 "/tmp/lm32-customizer/tmp.v"
                
                  
                   

`line 2226 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_x =    (branch_flushX_m ==  1'b1) 
                  
                   

`line 2231 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_m =     1'b0
                  
                   

`line 2236 "/tmp/lm32-customizer/tmp.v"

                ;                
assign kill_w =     1'b0
                  
                   

`line 2241 "/tmp/lm32-customizer/tmp.v"
                
                ;



  
`line 2246 "/tmp/lm32-customizer/tmp.v"

assign breakpoint_exception =    (   (   (break_x ==  1'b1)
				      || (bp_match ==  1'b1)
				     )
				  && (valid_x ==  1'b1)
				 )
  
`line 2252 "/tmp/lm32-customizer/tmp.v"

                              || (jtag_break ==  1'b1)
 
`line 2254 "/tmp/lm32-customizer/tmp.v"

                              ;
 
`line 2256 "/tmp/lm32-customizer/tmp.v"


  
`line 2258 "/tmp/lm32-customizer/tmp.v"

assign watchpoint_exception = wp_match ==  1'b1;
 
`line 2260 "/tmp/lm32-customizer/tmp.v"


  
        
                                             
                                         
     

`line 2267 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2271 "/tmp/lm32-customizer/tmp.v"


assign system_call_exception = (   (scall_x ==  1'b1)
  
                                   

`line 2276 "/tmp/lm32-customizer/tmp.v"

			       );

  
`line 2279 "/tmp/lm32-customizer/tmp.v"

assign debug_exception_x =  (breakpoint_exception ==  1'b1)
                         || (watchpoint_exception ==  1'b1)
                         ;

assign non_debug_exception_x = (system_call_exception ==  1'b1)
  
`line 2285 "/tmp/lm32-customizer/tmp.v"

                            || (reset_exception ==  1'b1)
 
`line 2287 "/tmp/lm32-customizer/tmp.v"

  
                               
                               

`line 2291 "/tmp/lm32-customizer/tmp.v"

  
                               

`line 2294 "/tmp/lm32-customizer/tmp.v"

  
`line 2295 "/tmp/lm32-customizer/tmp.v"

                            || (   (interrupt_exception ==  1'b1)
  
`line 2297 "/tmp/lm32-customizer/tmp.v"

                                && (dc_ss ==  1'b0)
 
`line 2299 "/tmp/lm32-customizer/tmp.v"
                            
  
 				   
				   

`line 2303 "/tmp/lm32-customizer/tmp.v"

                               )
 
`line 2305 "/tmp/lm32-customizer/tmp.v"

                            ;

assign exception_x = (debug_exception_x ==  1'b1) || (non_debug_exception_x ==  1'b1);
 
               
 
                               
                               

 
                               

 
                                  
 
                                   
                            
 
 				   
				   

                               

                            

`line 2330 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
  
`line 2335 "/tmp/lm32-customizer/tmp.v"

  
`line 2336 "/tmp/lm32-customizer/tmp.v"

    if (reset_exception ==  1'b1)
        eid_x =  3'h0;
    else
 
`line 2340 "/tmp/lm32-customizer/tmp.v"
     
  
            
          
    

`line 2345 "/tmp/lm32-customizer/tmp.v"

         if (breakpoint_exception ==  1'b1)
        eid_x =  3'd1;
    else
 
`line 2349 "/tmp/lm32-customizer/tmp.v"

  
            
          
    
            
          
    

`line 2357 "/tmp/lm32-customizer/tmp.v"

  
`line 2358 "/tmp/lm32-customizer/tmp.v"

         if (watchpoint_exception ==  1'b1)
        eid_x =  3'd3;
    else 
 
`line 2362 "/tmp/lm32-customizer/tmp.v"

  
            
          
    

`line 2367 "/tmp/lm32-customizer/tmp.v"

  
`line 2368 "/tmp/lm32-customizer/tmp.v"

         if (   (interrupt_exception ==  1'b1)
  
`line 2370 "/tmp/lm32-customizer/tmp.v"

             && (dc_ss ==  1'b0)
 
`line 2372 "/tmp/lm32-customizer/tmp.v"
                            
            )
        eid_x =  3'h6;
    else
 
`line 2376 "/tmp/lm32-customizer/tmp.v"

        eid_x =  3'h7;
end



assign stall_a = (stall_f ==  1'b1);
                
assign stall_f = (stall_d ==  1'b1);
                
assign stall_d =   (stall_x ==  1'b1) 
                || (   (interlock ==  1'b1)
                    && (kill_d ==  1'b0)
                   ) 
		|| (   (   (eret_d ==  1'b1)
			|| (scall_d ==  1'b1)
  
			   

`line 2394 "/tmp/lm32-customizer/tmp.v"

		       )
		    && (   (load_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
  
`line 2404 "/tmp/lm32-customizer/tmp.v"

		|| (   (   (break_d ==  1'b1)
			|| (bret_d ==  1'b1)
		       )
		    && (   (load_q_x ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
 
`line 2416 "/tmp/lm32-customizer/tmp.v"
                   
                || (   (csr_write_enable_d ==  1'b1)
                    && (load_q_x ==  1'b1)
                   )                      
                ;
                
assign stall_x =    (stall_m ==  1'b1)
  
                       
                        
                     

`line 2427 "/tmp/lm32-customizer/tmp.v"

  
                 
                 
                       
		           
			    
			
		    

`line 2436 "/tmp/lm32-customizer/tmp.v"

                 ;

assign stall_m =    (stall_wb_load ==  1'b1)
  
                    

`line 2442 "/tmp/lm32-customizer/tmp.v"

                 || (   (D_CYC_O ==  1'b1)
                     && (   (store_m ==  1'b1)
		         
          
          

		  
	 
	

          
           
          
       

  
`line 2458 "/tmp/lm32-customizer/tmp.v"

		         || ((store_x ==  1'b1) && (interrupt_exception ==  1'b1))
 
`line 2460 "/tmp/lm32-customizer/tmp.v"

                         || (load_m ==  1'b1)
                         || (load_x ==  1'b1)
                        ) 
                    ) 
 
`line 2465 "/tmp/lm32-customizer/tmp.v"
                 
  
                         

`line 2468 "/tmp/lm32-customizer/tmp.v"
                                    
  
`line 2469 "/tmp/lm32-customizer/tmp.v"

                 || (icache_stall_request ==  1'b1)     
                 || ((I_CYC_O ==  1'b1) && ((branch_m ==  1'b1) || (exception_m ==  1'b1))) 
 
 
                                


`line 2476 "/tmp/lm32-customizer/tmp.v"
                               
  
                                  
                        
                    

`line 2481 "/tmp/lm32-customizer/tmp.v"

                 ;      


  
         

`line 2487 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2491 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2494 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2498 "/tmp/lm32-customizer/tmp.v"

assign q_x = (valid_x ==  1'b1) && (kill_x ==  1'b0);
assign csr_write_enable_q_x = (csr_write_enable_x ==  1'b1) && (q_x ==  1'b1);
assign eret_q_x = (eret_x ==  1'b1) && (q_x ==  1'b1);
  
`line 2502 "/tmp/lm32-customizer/tmp.v"

assign bret_q_x = (bret_x ==  1'b1) && (q_x ==  1'b1);
 
`line 2504 "/tmp/lm32-customizer/tmp.v"

assign load_q_x = (load_x ==  1'b1) 
               && (q_x ==  1'b1)
  
`line 2507 "/tmp/lm32-customizer/tmp.v"

               && (bp_match ==  1'b0)
 
`line 2509 "/tmp/lm32-customizer/tmp.v"

                  ;
assign store_q_x = (store_x ==  1'b1) 
               && (q_x ==  1'b1)
  
`line 2513 "/tmp/lm32-customizer/tmp.v"

               && (bp_match ==  1'b0)
 
`line 2515 "/tmp/lm32-customizer/tmp.v"

                  ;
  
         

`line 2519 "/tmp/lm32-customizer/tmp.v"
                              
assign q_m = (valid_m ==  1'b1) && (kill_m ==  1'b0) && (exception_m ==  1'b0);
assign load_q_m = (load_m ==  1'b1) && (q_m ==  1'b1);
assign store_q_m = (store_m ==  1'b1) && (q_m ==  1'b1);
  
`line 2523 "/tmp/lm32-customizer/tmp.v"

assign debug_exception_q_w = ((debug_exception_w ==  1'b1) && (valid_w ==  1'b1));
assign non_debug_exception_q_w = ((non_debug_exception_w ==  1'b1) && (valid_w ==  1'b1));        
 
                 

`line 2528 "/tmp/lm32-customizer/tmp.v"


assign write_enable_q_x = (write_enable_x ==  1'b1) && (valid_x ==  1'b1) && (branch_flushX_m ==  1'b0);
assign write_enable_q_m = (write_enable_m ==  1'b1) && (valid_m ==  1'b1);
assign write_enable_q_w = (write_enable_w ==  1'b1) && (valid_w ==  1'b1);

assign reg_write_enable_q_w = (write_enable_w ==  1'b1) && (kill_w ==  1'b0) && (valid_w ==  1'b1);


assign cfg = {
               6'h02,
              watchpoints[3:0],
              breakpoints[3:0],
              interrupts[5:0],
  
`line 2542 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2546 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2549 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2551 "/tmp/lm32-customizer/tmp.v"

  
`line 2552 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2556 "/tmp/lm32-customizer/tmp.v"

  
`line 2557 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2561 "/tmp/lm32-customizer/tmp.v"

  
`line 2562 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2566 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2569 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2571 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2574 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2576 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2579 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2581 "/tmp/lm32-customizer/tmp.v"

  
`line 2582 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2586 "/tmp/lm32-customizer/tmp.v"

  
`line 2587 "/tmp/lm32-customizer/tmp.v"

               1'b1,
 
              

`line 2591 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2594 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2596 "/tmp/lm32-customizer/tmp.v"

  
`line 2597 "/tmp/lm32-customizer/tmp.v"
 
               1'b1
 
              

`line 2601 "/tmp/lm32-customizer/tmp.v"

              };

assign cfg2 = {
		     30'b0,
  
		     

`line 2608 "/tmp/lm32-customizer/tmp.v"

		      1'b0,
 
`line 2610 "/tmp/lm32-customizer/tmp.v"

  
		     

`line 2613 "/tmp/lm32-customizer/tmp.v"

		      1'b0
 
`line 2615 "/tmp/lm32-customizer/tmp.v"

		     };
   

  
`line 2619 "/tmp/lm32-customizer/tmp.v"

assign iflush = (   (csr_write_enable_d ==  1'b1) 
                 && (csr_d ==  5'h3)
                 && (stall_d ==  1'b0)
                 && (kill_d ==  1'b0)
                 && (valid_d ==  1'b1))

  
`line 2626 "/tmp/lm32-customizer/tmp.v"

             ||
                (   (jtag_csr_write_enable ==  1'b1)
		 && (jtag_csr ==  5'h3))
 
`line 2630 "/tmp/lm32-customizer/tmp.v"

		 ;
 
`line 2632 "/tmp/lm32-customizer/tmp.v"
 
  
         
                      

 
               
                       
		      

		   

`line 2643 "/tmp/lm32-customizer/tmp.v"
 


assign csr_d = read_idx_0_d[ (5-1):0];


always @(*)
begin
    case (csr_x)
  
`line 2652 "/tmp/lm32-customizer/tmp.v"

     5'h0,
     5'h1,
     5'h2:   csr_read_data_x = interrupt_csr_read_data_x;  
 
`line 2656 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2659 "/tmp/lm32-customizer/tmp.v"

     5'h6:  csr_read_data_x = cfg;
     5'h7:  csr_read_data_x = {eba, 8'h00};
  
`line 2662 "/tmp/lm32-customizer/tmp.v"

     5'h9: csr_read_data_x = {deba, 8'h00};
 
`line 2664 "/tmp/lm32-customizer/tmp.v"

  
`line 2665 "/tmp/lm32-customizer/tmp.v"

     5'he:  csr_read_data_x = jtx_csr_read_data;  
     5'hf:  csr_read_data_x = jrx_csr_read_data;
 
`line 2668 "/tmp/lm32-customizer/tmp.v"

     5'ha: csr_read_data_x = cfg2;
      
    default:        csr_read_data_x = { 32{1'bx}};
    endcase
end






always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        eba <= eba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  5'h7) && (stall_x ==  1'b0))
            eba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
`line 2688 "/tmp/lm32-customizer/tmp.v"

        if ((jtag_csr_write_enable ==  1'b1) && (jtag_csr ==  5'h7))
            eba <= jtag_csr_write_data[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
 
`line 2691 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 2695 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        deba <= deba_reset[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  5'h9) && (stall_x ==  1'b0))
            deba <= operand_1_x[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
  
`line 2705 "/tmp/lm32-customizer/tmp.v"

        if ((jtag_csr_write_enable ==  1'b1) && (jtag_csr ==  5'h9))
            deba <= jtag_csr_write_data[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:8];
 
`line 2708 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 2711 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
            


`line 2722 "/tmp/lm32-customizer/tmp.v"


  

   

       
          
    
    
        
               
              
        
               
              
    


`line 2740 "/tmp/lm32-customizer/tmp.v"

 


  
`line 2744 "/tmp/lm32-customizer/tmp.v"

  
 

           
           
       
          
            
                 
             
          
     
            
 

`line 2759 "/tmp/lm32-customizer/tmp.v"

always @(*)
begin
    if (icache_refill_request ==  1'b1) 
        valid_a =  1'b0;
    else if (icache_restart_request ==  1'b1) 
        valid_a =  1'b1;
    else 
        valid_a = !icache_refilling;
end 
 
`line 2769 "/tmp/lm32-customizer/tmp.v"

 
 
 

        
          
         
          
     
          
 


`line 2782 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        valid_f <=  1'b0;
        valid_d <=  1'b0;
        valid_x <=  1'b0;
        valid_m <=  1'b0;
        valid_w <=  1'b0;
    end
    else
    begin    
        if ((kill_f ==  1'b1) || (stall_a ==  1'b0))
  
`line 2797 "/tmp/lm32-customizer/tmp.v"

            valid_f <= valid_a;    
 
              

`line 2801 "/tmp/lm32-customizer/tmp.v"
            
        else if (stall_f ==  1'b0)
            valid_f <=  1'b0;            

        if (kill_d ==  1'b1)
            valid_d <=  1'b0;
        else if (stall_f ==  1'b0)
            valid_d <= valid_f & !kill_f;
        else if (stall_d ==  1'b0)
            valid_d <=  1'b0;
       
        if (stall_d ==  1'b0)
            valid_x <= valid_d & !kill_d;
        else if (kill_x ==  1'b1)
            valid_x <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_x <=  1'b0;

        if (kill_m ==  1'b1)
            valid_m <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_m <= valid_x & !kill_x;
        else if (stall_m ==  1'b0)
            valid_m <=  1'b0;

        if (stall_m ==  1'b0)
            valid_w <= valid_m & !kill_m;
        else 
            valid_w <=  1'b0;        
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
  
                 

`line 2840 "/tmp/lm32-customizer/tmp.v"
        
        operand_0_x <= { 32{1'b0}};
        operand_1_x <= { 32{1'b0}};
        store_operand_x <= { 32{1'b0}};
        branch_target_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};        
        x_result_sel_csr_x <=  1'b0;
  
          

`line 2848 "/tmp/lm32-customizer/tmp.v"

      
          

`line 2851 "/tmp/lm32-customizer/tmp.v"

  
`line 2852 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_sext_x <=  1'b0;
 
`line 2854 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_logic_x <=  1'b0;
  
          

`line 2858 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_add_x <=  1'b0;
        m_result_sel_compare_x <=  1'b0;
  
`line 2861 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_x <=  1'b0;
 
`line 2863 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_x <=  1'b0;
  
`line 2865 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_x <=  1'b0;
 
`line 2867 "/tmp/lm32-customizer/tmp.v"

        x_bypass_enable_x <=  1'b0;
        m_bypass_enable_x <=  1'b0;
        write_enable_x <=  1'b0;
        write_idx_x <= { 5{1'b0}};
        csr_x <= { 5{1'b0}};
        load_x <=  1'b0;
        store_x <=  1'b0;
        size_x <= { 2{1'b0}};
        sign_extend_x <=  1'b0;
        adder_op_x <=  1'b0;
        adder_op_x_n <=  1'b0;
        logic_op_x <= 4'h0;
  
`line 2880 "/tmp/lm32-customizer/tmp.v"

        direction_x <=  1'b0;
 
`line 2882 "/tmp/lm32-customizer/tmp.v"

  
          


`line 2886 "/tmp/lm32-customizer/tmp.v"

        branch_x <=  1'b0;
        branch_predict_x <=  1'b0;
        branch_predict_taken_x <=  1'b0;
        condition_x <=  3'b000;
  
`line 2891 "/tmp/lm32-customizer/tmp.v"

        break_x <=  1'b0;
 
`line 2893 "/tmp/lm32-customizer/tmp.v"

        scall_x <=  1'b0;
        eret_x <=  1'b0;
  
`line 2896 "/tmp/lm32-customizer/tmp.v"

        bret_x <=  1'b0;
 
`line 2898 "/tmp/lm32-customizer/tmp.v"

  
          
          

`line 2902 "/tmp/lm32-customizer/tmp.v"

        csr_write_enable_x <=  1'b0;
        operand_m <= { 32{1'b0}};
        branch_target_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        m_result_sel_compare_m <=  1'b0;
  
`line 2907 "/tmp/lm32-customizer/tmp.v"

        m_result_sel_shift_m <=  1'b0;
 
`line 2909 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_m <=  1'b0;
  
`line 2911 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_m <=  1'b0;
 
`line 2913 "/tmp/lm32-customizer/tmp.v"

        m_bypass_enable_m <=  1'b0;
        branch_m <=  1'b0;
        branch_predict_m <=  1'b0;
	branch_predict_taken_m <=  1'b0;
        exception_m <=  1'b0;
        load_m <=  1'b0;
        store_m <=  1'b0;
  
`line 2921 "/tmp/lm32-customizer/tmp.v"

        direction_m <=  1'b0;
 
`line 2923 "/tmp/lm32-customizer/tmp.v"

        write_enable_m <=  1'b0;            
        write_idx_m <= { 5{1'b0}};
        condition_met_m <=  1'b0;
  
          

`line 2929 "/tmp/lm32-customizer/tmp.v"

  
`line 2930 "/tmp/lm32-customizer/tmp.v"

        debug_exception_m <=  1'b0;
        non_debug_exception_m <=  1'b0;        
 
`line 2933 "/tmp/lm32-customizer/tmp.v"

        operand_w <= { 32{1'b0}};        
        w_result_sel_load_w <=  1'b0;
  
`line 2936 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <=  1'b0;
 
`line 2938 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= { 5{1'b0}};        
        write_enable_w <=  1'b0;
  
`line 2941 "/tmp/lm32-customizer/tmp.v"

        debug_exception_w <=  1'b0;
        non_debug_exception_w <=  1'b0;        
 
          

`line 2946 "/tmp/lm32-customizer/tmp.v"

  
          

`line 2949 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        
       
        if (stall_x ==  1'b0)
        begin
  
                     

`line 2959 "/tmp/lm32-customizer/tmp.v"
        
            operand_0_x <= d_result_0;
            operand_1_x <= d_result_1;
            store_operand_x <= bypass_data_1;
            branch_target_x <= branch_reg_d ==  1'b1 ? bypass_data_0[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] : branch_target_d;            
            x_result_sel_csr_x <= x_result_sel_csr_d;
  
              

`line 2967 "/tmp/lm32-customizer/tmp.v"

      
              

`line 2970 "/tmp/lm32-customizer/tmp.v"

  
`line 2971 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_sext_x <= x_result_sel_sext_d;
 
`line 2973 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_logic_x <= x_result_sel_logic_d;
  
              

`line 2977 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_add_x <= x_result_sel_add_d;
            m_result_sel_compare_x <= m_result_sel_compare_d;
  
`line 2980 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_x <= m_result_sel_shift_d;
 
`line 2982 "/tmp/lm32-customizer/tmp.v"
    
            w_result_sel_load_x <= w_result_sel_load_d;
  
`line 2984 "/tmp/lm32-customizer/tmp.v"

            w_result_sel_mul_x <= w_result_sel_mul_d;
 
`line 2986 "/tmp/lm32-customizer/tmp.v"

            x_bypass_enable_x <= x_bypass_enable_d;
            m_bypass_enable_x <= m_bypass_enable_d;
            load_x <= load_d;
            store_x <= store_d;
            branch_x <= branch_d;
	    branch_predict_x <= branch_predict_d;
	    branch_predict_taken_x <= branch_predict_taken_d;
	    write_idx_x <= write_idx_d;
            csr_x <= csr_d;
            size_x <= size_d;
            sign_extend_x <= sign_extend_d;
            adder_op_x <= adder_op_d;
            adder_op_x_n <= ~adder_op_d;
            logic_op_x <= logic_op_d;
  
`line 3001 "/tmp/lm32-customizer/tmp.v"

            direction_x <= direction_d;
 
`line 3003 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3006 "/tmp/lm32-customizer/tmp.v"

            condition_x <= condition_d;
            csr_write_enable_x <= csr_write_enable_d;
  
`line 3009 "/tmp/lm32-customizer/tmp.v"

            break_x <= break_d;
 
`line 3011 "/tmp/lm32-customizer/tmp.v"

            scall_x <= scall_d;
  
              

`line 3015 "/tmp/lm32-customizer/tmp.v"

            eret_x <= eret_d;
  
`line 3017 "/tmp/lm32-customizer/tmp.v"

            bret_x <= bret_d; 
 
`line 3019 "/tmp/lm32-customizer/tmp.v"

            write_enable_x <= write_enable_d;
        end
        
        

        if (stall_m ==  1'b0)
        begin
            operand_m <= x_result;
            m_result_sel_compare_m <= m_result_sel_compare_x;
  
`line 3029 "/tmp/lm32-customizer/tmp.v"

            m_result_sel_shift_m <= m_result_sel_shift_x;
 
`line 3031 "/tmp/lm32-customizer/tmp.v"
    
            if (exception_x ==  1'b1)
            begin
                w_result_sel_load_m <=  1'b0;
  
`line 3035 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <=  1'b0;
 
`line 3037 "/tmp/lm32-customizer/tmp.v"

            end
            else
            begin
                w_result_sel_load_m <= w_result_sel_load_x;
  
`line 3042 "/tmp/lm32-customizer/tmp.v"

                w_result_sel_mul_m <= w_result_sel_mul_x;
 
`line 3044 "/tmp/lm32-customizer/tmp.v"

            end
            m_bypass_enable_m <= m_bypass_enable_x;
  
`line 3047 "/tmp/lm32-customizer/tmp.v"

            direction_m <= direction_x;
 
`line 3049 "/tmp/lm32-customizer/tmp.v"

            load_m <= load_x;
            store_m <= store_x;
      
                

`line 3054 "/tmp/lm32-customizer/tmp.v"

            branch_m <= branch_x;
	    branch_predict_m <= branch_predict_x;
	    branch_predict_taken_m <= branch_predict_taken_x;
 
`line 3058 "/tmp/lm32-customizer/tmp.v"

  
`line 3059 "/tmp/lm32-customizer/tmp.v"

	   
	   
	   
	   
	   
            if (non_debug_exception_x ==  1'b1) 
                write_idx_m <=  5'd30;
            else if (debug_exception_x ==  1'b1)
                write_idx_m <=  5'd31;
            else 
                write_idx_m <= write_idx_x;
 
               
                  
             
                  

`line 3076 "/tmp/lm32-customizer/tmp.v"

            condition_met_m <= condition_met_x;
  
`line 3078 "/tmp/lm32-customizer/tmp.v"

	   if (exception_x ==  1'b1)
	     if ((dc_re ==  1'b1)
		 || ((debug_exception_x ==  1'b1) 
		     && (non_debug_exception_x ==  1'b0)))
	       branch_target_m <= {deba, eid_x, {3{1'b0}}};
	     else
	       branch_target_m <= {eba, eid_x, {3{1'b0}}};
	   else
	     branch_target_m <= branch_target_x;
 
                      

`line 3090 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3093 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3096 "/tmp/lm32-customizer/tmp.v"

            eret_m <= eret_q_x;
  
`line 3098 "/tmp/lm32-customizer/tmp.v"

            bret_m <= bret_q_x; 
 
`line 3100 "/tmp/lm32-customizer/tmp.v"

            write_enable_m <= exception_x ==  1'b1 ?  1'b1 : write_enable_x;            
  
`line 3102 "/tmp/lm32-customizer/tmp.v"

            debug_exception_m <= debug_exception_x;
            non_debug_exception_m <= non_debug_exception_x;        
 
`line 3105 "/tmp/lm32-customizer/tmp.v"

        end
        
        
        if (stall_m ==  1'b0)
        begin
            if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
                exception_m <=  1'b1;
            else 
                exception_m <=  1'b0;
  
	           
 
					    

					 

`line 3121 "/tmp/lm32-customizer/tmp.v"

	end
                
        
  
                      

`line 3127 "/tmp/lm32-customizer/tmp.v"

        operand_w <= exception_m ==  1'b1 ? {pc_m, 2'b00} : m_result;
 
`line 3129 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_load_w <= w_result_sel_load_m;
  
`line 3131 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_mul_w <= w_result_sel_mul_m;
 
`line 3133 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= write_idx_m;
  
          
          
 
           


`line 3141 "/tmp/lm32-customizer/tmp.v"

        write_enable_w <= write_enable_m;
  
`line 3143 "/tmp/lm32-customizer/tmp.v"

        debug_exception_w <= debug_exception_m;
        non_debug_exception_w <= non_debug_exception_m;
 
          

`line 3148 "/tmp/lm32-customizer/tmp.v"

  
              
                   
                   
               
	   
            

`line 3156 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 3160 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        use_buf <=  1'b0;
        reg_data_buf_0 <= { 32{1'b0}};
        reg_data_buf_1 <= { 32{1'b0}};
    end
    else
    begin
        if (stall_d ==  1'b0)
            use_buf <=  1'b0;
        else if (use_buf ==  1'b0)
        begin        
            reg_data_buf_0 <= reg_data_live_0;
            reg_data_buf_1 <= reg_data_live_1;
            use_buf <=  1'b1;
        end        
        if (reg_write_enable_q_w ==  1'b1)
        begin
            if (write_idx_w == read_idx_0_d)
                reg_data_buf_0 <= w_result;
            if (write_idx_w == read_idx_1_d)
                reg_data_buf_1 <= w_result;
        end
    end
end
 
`line 3190 "/tmp/lm32-customizer/tmp.v"


  
`line 3192 "/tmp/lm32-customizer/tmp.v"

 

   

        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
        
     
           
            
        


`line 3236 "/tmp/lm32-customizer/tmp.v"


  

   

       
    
          
          
          
          
          
 
          

          
    
    
    
          
        
 
               

           

                
              
              
              
              
        
        
              
        
             
        
            
                 
            
                
                  
                  
            
            
              
            
              
 
              

        
        
        
              
 
              

        
    


`line 3298 "/tmp/lm32-customizer/tmp.v"

      







initial
begin
  
`line 3309 "/tmp/lm32-customizer/tmp.v"

    reg_0.ram[0] = { 32{1'b0}};
    reg_1.ram[0] = { 32{1'b0}};
 
      

`line 3314 "/tmp/lm32-customizer/tmp.v"

end


        
endmodule 









































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_load_store_unit_medium_icache_debug (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_x,
    stall_m,
    kill_x,
    kill_m,
    exception_m,
    store_operand_x,
    load_store_address_x,
    load_store_address_m,
    load_store_address_w,
    load_x,
    store_x,
    load_q_x,
    store_q_x,
    load_q_m,
    store_q_m,
    sign_extend_x,
    size_x,
  
    

`line 3392 "/tmp/lm32-customizer/tmp.v"

  
    

`line 3395 "/tmp/lm32-customizer/tmp.v"

    
    d_dat_i,
    d_ack_i,
    d_err_i,
    d_rty_i,
    
    
  
    
    
    
    

`line 3408 "/tmp/lm32-customizer/tmp.v"
    
  
    
    
    
    

`line 3414 "/tmp/lm32-customizer/tmp.v"
			     
    load_data_w,
    stall_wb_load,
    
    d_dat_o,
    d_adr_o,
    d_cyc_o,
    d_sel_o,
    d_stb_o,
    d_we_o,
    d_cti_o,
    d_lock_o,
    d_bte_o
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          
input kill_x;                                           
input kill_m;                                           
input exception_m;                                      

input [ (32-1):0] store_operand_x;                 
input [ (32-1):0] load_store_address_x;            
input [ (32-1):0] load_store_address_m;            
input [1:0] load_store_address_w;                       
input load_x;                                           
input store_x;                                          
input load_q_x;                                         
input store_q_x;                                        
input load_q_m;                                         
input store_q_m;                                        
input sign_extend_x;                                    
input [ 1:0] size_x;                          

  
                                            

`line 3473 "/tmp/lm32-customizer/tmp.v"


     
                       

`line 3477 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] d_dat_i;                         
input d_ack_i;                                          
input d_err_i;                                          
input d_rty_i;                                          





  
                            
   
                           
   
                             
   
 
   

`line 3497 "/tmp/lm32-customizer/tmp.v"


     
                                
    
                  
    
                                       
   
                             
                               

`line 3508 "/tmp/lm32-customizer/tmp.v"

   
output [ (32-1):0] load_data_w;                    
reg    [ (32-1):0] load_data_w;
output stall_wb_load;                                   
reg    stall_wb_load;

output [ (32-1):0] d_dat_o;                        
reg    [ (32-1):0] d_dat_o;
output [ (32-1):0] d_adr_o;                        
reg    [ (32-1):0] d_adr_o;
output d_cyc_o;                                         
reg    d_cyc_o;
output [ (4-1):0] d_sel_o;                 
reg    [ (4-1):0] d_sel_o;
output d_stb_o;                                         
reg    d_stb_o; 
output d_we_o;                                          
reg    d_we_o;
output [ (3-1):0] d_cti_o;                       
reg    [ (3-1):0] d_cti_o;
output d_lock_o;                                        
reg    d_lock_o;
output [ (2-1):0] d_bte_o;                       
wire   [ (2-1):0] d_bte_o;






reg [ 1:0] size_m;
reg [ 1:0] size_w;
reg sign_extend_m;
reg sign_extend_w;
reg [ (32-1):0] store_data_x;       
reg [ (32-1):0] store_data_m;       
reg [ (4-1):0] byte_enable_x;
reg [ (4-1):0] byte_enable_m;
wire [ (32-1):0] data_m;
reg [ (32-1):0] data_w;

  
                                    
 
                      
              
                                 
                  
                   
                                          
                      

`line 3560 "/tmp/lm32-customizer/tmp.v"

  
                                      
 
                                      
                    
                      
                        
                  

`line 3569 "/tmp/lm32-customizer/tmp.v"

wire wb_select_x;                                       
  
                                      
  

`line 3574 "/tmp/lm32-customizer/tmp.v"

reg wb_select_m;
reg [ (32-1):0] wb_data_m;                         
reg wb_load_complete;                                   





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






  
   
    
     
       
                    

       
       
       
       
       
       
	
              
              
              
              
              
              

                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	    
	                   
	                   
	                        
	                           
	    
	                         
	                         
	    
   
   
               
              
              
    
      
        
       
	    
	    
       
     
       
	     
	      
	  
	         
                 
	         
	            
	             
		 
	         
	     
	      
	  
	          
		   
	       
	        
       
   
          

`line 3671 "/tmp/lm32-customizer/tmp.v"


  

 
              
                       
             
               
                      
       
    
                      
                            
                    
                    
                    
                  
                  
                     
                    
                 
            
               
                
                     
    
              
            
             
             
                  
                  
    

`line 3705 "/tmp/lm32-customizer/tmp.v"







  
            
                             

`line 3715 "/tmp/lm32-customizer/tmp.v"


  
            
                             

`line 3720 "/tmp/lm32-customizer/tmp.v"

   
  
            
                               
 
                               

 
                               

                     

`line 3732 "/tmp/lm32-customizer/tmp.v"

	  
   assign wb_select_x =     1'b1
  
                          

`line 3737 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3740 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3743 "/tmp/lm32-customizer/tmp.v"

                     ;


always @(*)
begin
    case (size_x)
     2'b00:  store_data_x = {4{store_operand_x[7:0]}};
     2'b11: store_data_x = {2{store_operand_x[15:0]}};
     2'b10:  store_data_x = store_operand_x;    
    default:          store_data_x = { 32{1'bx}};
    endcase
end


always @(*)
begin
    casez ({size_x, load_store_address_x[1:0]})
    { 2'b00, 2'b11}:  byte_enable_x = 4'b0001;
    { 2'b00, 2'b10}:  byte_enable_x = 4'b0010;
    { 2'b00, 2'b01}:  byte_enable_x = 4'b0100;
    { 2'b00, 2'b00}:  byte_enable_x = 4'b1000;
    { 2'b11, 2'b1?}: byte_enable_x = 4'b0011;
    { 2'b11, 2'b0?}: byte_enable_x = 4'b1100;
    { 2'b10, 2'b??}:  byte_enable_x = 4'b1111;
    default:                   byte_enable_x = 4'bxxxx;
    endcase
end

  

       
       
       
       

`line 3778 "/tmp/lm32-customizer/tmp.v"


  

       
       
       
       

`line 3786 "/tmp/lm32-customizer/tmp.v"


  
   
   
   
   
            
	                     
	                     
   
   
           
	                  
   
   
   
   
   
           
	                            

`line 3807 "/tmp/lm32-customizer/tmp.v"

   
  
  
   
   
         
                    
                       
                      
                        
                         
                        
  
   
         
                    
                       
                      
                      
  
 
   
   
         
                    
                       
                      
                      
  
   
         
                     
                    
  
 

`line 3843 "/tmp/lm32-customizer/tmp.v"

   
   
   
         
                     
                      
                      
                      
  
   
         
                     
                    
  
 
`line 3858 "/tmp/lm32-customizer/tmp.v"

    
   
         
                     
                    
  
`line 3864 "/tmp/lm32-customizer/tmp.v"

   
   assign data_m = wb_data_m;
   
`line 3867 "/tmp/lm32-customizer/tmp.v"

  
`line 3868 "/tmp/lm32-customizer/tmp.v"

 
`line 3869 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    casez ({size_w, load_store_address_w[1:0]})
    { 2'b00, 2'b11}:  load_data_w = {{24{sign_extend_w & data_w[7]}}, data_w[7:0]};
    { 2'b00, 2'b10}:  load_data_w = {{24{sign_extend_w & data_w[15]}}, data_w[15:8]};
    { 2'b00, 2'b01}:  load_data_w = {{24{sign_extend_w & data_w[23]}}, data_w[23:16]};
    { 2'b00, 2'b00}:  load_data_w = {{24{sign_extend_w & data_w[31]}}, data_w[31:24]};
    { 2'b11, 2'b1?}: load_data_w = {{16{sign_extend_w & data_w[15]}}, data_w[15:0]};
    { 2'b11, 2'b0?}: load_data_w = {{16{sign_extend_w & data_w[31]}}, data_w[31:16]};
    { 2'b10, 2'b??}:  load_data_w = data_w;
    default:                   load_data_w = { 32{1'bx}};
    endcase
end


assign d_bte_o =  2'b00;

                  

 
     
    
    
   
   
   
    
    
    
    
   
   
     
     
    
    
    
   
         
     
     
    
    


`line 3916 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        d_cyc_o <=  1'b0;
        d_stb_o <=  1'b0;
        d_dat_o <= { 32{1'b0}};
        d_adr_o <= { 32{1'b0}};
        d_sel_o <= { 4{ 1'b0}};
        d_we_o <=  1'b0;
        d_cti_o <=  3'b111;
        d_lock_o <=  1'b0;
        wb_data_m <= { 32{1'b0}};
        wb_load_complete <=  1'b0;
        stall_wb_load <=  1'b0;
                  
          

`line 3940 "/tmp/lm32-customizer/tmp.v"
                
    end
    else
    begin
   
        
          

`line 3947 "/tmp/lm32-customizer/tmp.v"
                
        
        if (d_cyc_o ==  1'b1)
        begin
            
            if ((d_ack_i ==  1'b1) || (d_err_i ==  1'b1))
            begin
                  
                     
                
                    
                        
                
                

`line 3961 "/tmp/lm32-customizer/tmp.v"
                
                begin
                    
                    d_cyc_o <=  1'b0;
                    d_stb_o <=  1'b0;
                    d_lock_o <=  1'b0;
                end
      
                  
                
                  

`line 3972 "/tmp/lm32-customizer/tmp.v"

                
                wb_data_m <= d_dat_i;
                
                wb_load_complete <= !d_we_o;
            end
            
            if (d_err_i ==  1'b1)
                $display ("Data bus error. Address: %x", d_adr_o);
            
        end
        else
        begin
                  
               
            
                
                  
                  
                  
                                  
                  
                  
                
            
             

`line 3998 "/tmp/lm32-customizer/tmp.v"
            
                 if (   (store_q_m ==  1'b1)
                     && (stall_m ==  1'b0)
  
                        

`line 4003 "/tmp/lm32-customizer/tmp.v"

  
		        

`line 4006 "/tmp/lm32-customizer/tmp.v"
			
                    )
            begin
                
                d_dat_o <= store_data_m;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b1;
                d_cti_o <=  3'b111;
            end        
            else if (   (load_q_m ==  1'b1) 
                     && (wb_select_m ==  1'b1) 
                     && (wb_load_complete ==  1'b0)
                     
                    )
            begin
                
                stall_wb_load <=  1'b0;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b0;
                d_cti_o <=  3'b111;
            end
        end
        
        if (stall_m ==  1'b0)
            wb_load_complete <=  1'b0;
        
        if ((load_q_x ==  1'b1) && (wb_select_x ==  1'b1) && (stall_x ==  1'b0))
            stall_wb_load <=  1'b1;
        
        if ((kill_m ==  1'b1) || (exception_m ==  1'b1))
            stall_wb_load <=  1'b0;
    end
end




always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        sign_extend_m <=  1'b0;
        size_m <= 2'b00;
        byte_enable_m <=  1'b0;
        store_data_m <= { 32{1'b0}};
  
          

`line 4059 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4062 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4065 "/tmp/lm32-customizer/tmp.v"

        wb_select_m <=  1'b0;        
    end
    else
    begin
        if (stall_m ==  1'b0)
        begin
            sign_extend_m <= sign_extend_x;
            size_m <= size_x;
            byte_enable_m <= byte_enable_x;    
            store_data_m <= store_data_x;
  
              

`line 4078 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4081 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4084 "/tmp/lm32-customizer/tmp.v"

            wb_select_m <= wb_select_x;
        end
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        size_w <= 2'b00;
        data_w <= { 32{1'b0}};
        sign_extend_w <=  1'b0;
    end
    else
    begin
        size_w <= size_m;
        data_w <= data_m;
        sign_extend_w <= sign_extend_m;
    end
end








always @(posedge clk_i)
begin
    if (((load_q_m ==  1'b1) || (store_q_m ==  1'b1)) && (stall_m ==  1'b0)) 
    begin
        if ((size_m ===  2'b11) && (load_store_address_m[0] !== 1'b0))
            $display ("Warning: Non-aligned halfword access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
        if ((size_m ===  2'b10) && (load_store_address_m[1:0] !== 2'b00))
            $display ("Warning: Non-aligned word access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
    end
end



endmodule


































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"



  
`line 4165 "/tmp/lm32-customizer/tmp.v"

  
`line 4166 "/tmp/lm32-customizer/tmp.v"



  
`line 4169 "/tmp/lm32-customizer/tmp.v"

  
`line 4170 "/tmp/lm32-customizer/tmp.v"

  
`line 4171 "/tmp/lm32-customizer/tmp.v"

  
`line 4172 "/tmp/lm32-customizer/tmp.v"

  
`line 4173 "/tmp/lm32-customizer/tmp.v"

  
`line 4174 "/tmp/lm32-customizer/tmp.v"

  
`line 4175 "/tmp/lm32-customizer/tmp.v"

  
`line 4176 "/tmp/lm32-customizer/tmp.v"

  
`line 4177 "/tmp/lm32-customizer/tmp.v"

  
`line 4178 "/tmp/lm32-customizer/tmp.v"

  
`line 4179 "/tmp/lm32-customizer/tmp.v"

  
`line 4180 "/tmp/lm32-customizer/tmp.v"

  
`line 4181 "/tmp/lm32-customizer/tmp.v"

  
`line 4182 "/tmp/lm32-customizer/tmp.v"

  
`line 4183 "/tmp/lm32-customizer/tmp.v"

  
`line 4184 "/tmp/lm32-customizer/tmp.v"

  
`line 4185 "/tmp/lm32-customizer/tmp.v"

  
`line 4186 "/tmp/lm32-customizer/tmp.v"

  
`line 4187 "/tmp/lm32-customizer/tmp.v"

  
`line 4188 "/tmp/lm32-customizer/tmp.v"

  
`line 4189 "/tmp/lm32-customizer/tmp.v"

  
`line 4190 "/tmp/lm32-customizer/tmp.v"

  
`line 4191 "/tmp/lm32-customizer/tmp.v"

  
`line 4192 "/tmp/lm32-customizer/tmp.v"

  
`line 4193 "/tmp/lm32-customizer/tmp.v"

  
`line 4194 "/tmp/lm32-customizer/tmp.v"

  
`line 4195 "/tmp/lm32-customizer/tmp.v"

  
`line 4196 "/tmp/lm32-customizer/tmp.v"

  
`line 4197 "/tmp/lm32-customizer/tmp.v"

  
`line 4198 "/tmp/lm32-customizer/tmp.v"

  
`line 4199 "/tmp/lm32-customizer/tmp.v"

  
`line 4200 "/tmp/lm32-customizer/tmp.v"

  
`line 4201 "/tmp/lm32-customizer/tmp.v"

  
`line 4202 "/tmp/lm32-customizer/tmp.v"

  
`line 4203 "/tmp/lm32-customizer/tmp.v"

  
`line 4204 "/tmp/lm32-customizer/tmp.v"

  
`line 4205 "/tmp/lm32-customizer/tmp.v"

  
`line 4206 "/tmp/lm32-customizer/tmp.v"

  
`line 4207 "/tmp/lm32-customizer/tmp.v"

  
`line 4208 "/tmp/lm32-customizer/tmp.v"

  
`line 4209 "/tmp/lm32-customizer/tmp.v"

  
`line 4210 "/tmp/lm32-customizer/tmp.v"

  
`line 4211 "/tmp/lm32-customizer/tmp.v"

  
`line 4212 "/tmp/lm32-customizer/tmp.v"

  
`line 4213 "/tmp/lm32-customizer/tmp.v"






module lm32_decoder_medium_icache_debug (
    
    instruction,
    
    d_result_sel_0,
    d_result_sel_1,        
    x_result_sel_csr,
  
    

`line 4228 "/tmp/lm32-customizer/tmp.v"
    
      
    

`line 4231 "/tmp/lm32-customizer/tmp.v"

  
`line 4232 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext,
 
`line 4234 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_logic,
  
    

`line 4238 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add,
    m_result_sel_compare,
  
`line 4241 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift,  
 
`line 4243 "/tmp/lm32-customizer/tmp.v"
    
    w_result_sel_load,
  
`line 4245 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul,
 
`line 4247 "/tmp/lm32-customizer/tmp.v"

    x_bypass_enable,
    m_bypass_enable,
    read_enable_0,
    read_idx_0,
    read_enable_1,
    read_idx_1,
    write_enable,
    write_idx,
    immediate,
    branch_offset,
    load,
    store,
    size,
    sign_extend,
    adder_op,
    logic_op,
  
`line 4264 "/tmp/lm32-customizer/tmp.v"

    direction,
 
`line 4266 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4270 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4273 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4277 "/tmp/lm32-customizer/tmp.v"

    branch,
    branch_reg,
    condition,
    bi_conditional,
    bi_unconditional,
  
`line 4283 "/tmp/lm32-customizer/tmp.v"

    break_opcode,
 
`line 4285 "/tmp/lm32-customizer/tmp.v"

    scall,
    eret,
  
`line 4288 "/tmp/lm32-customizer/tmp.v"

    bret,
 
`line 4290 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4293 "/tmp/lm32-customizer/tmp.v"

    csr_write_enable
    );





input [ (32-1):0] instruction;       





output [ 0:0] d_result_sel_0;
reg    [ 0:0] d_result_sel_0;
output [ 1:0] d_result_sel_1;
reg    [ 1:0] d_result_sel_1;
output x_result_sel_csr;
reg    x_result_sel_csr;
  
 
    

`line 4316 "/tmp/lm32-customizer/tmp.v"

      
 
    

`line 4320 "/tmp/lm32-customizer/tmp.v"

  
`line 4321 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_sext;
reg    x_result_sel_sext;
 
`line 4324 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_logic;
reg    x_result_sel_logic;
  
 
    

`line 4330 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_add;
reg    x_result_sel_add;
output m_result_sel_compare;
reg    m_result_sel_compare;
  
`line 4335 "/tmp/lm32-customizer/tmp.v"

output m_result_sel_shift;
reg    m_result_sel_shift;
 
`line 4338 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_load;
reg    w_result_sel_load;
  
`line 4341 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_mul;
reg    w_result_sel_mul;
 
`line 4344 "/tmp/lm32-customizer/tmp.v"

output x_bypass_enable;
wire   x_bypass_enable;
output m_bypass_enable;
wire   m_bypass_enable;
output read_enable_0;
wire   read_enable_0;
output [ (5-1):0] read_idx_0;
wire   [ (5-1):0] read_idx_0;
output read_enable_1;
wire   read_enable_1;
output [ (5-1):0] read_idx_1;
wire   [ (5-1):0] read_idx_1;
output write_enable;
wire   write_enable;
output [ (5-1):0] write_idx;
wire   [ (5-1):0] write_idx;
output [ (32-1):0] immediate;
wire   [ (32-1):0] immediate;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
wire   [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_offset;
output load;
wire   load;
output store;
wire   store;
output [ 1:0] size;
wire   [ 1:0] size;
output sign_extend;
wire   sign_extend;
output adder_op;
wire   adder_op;
output [ 3:0] logic_op;
wire   [ 3:0] logic_op;
  
`line 4377 "/tmp/lm32-customizer/tmp.v"

output direction;
wire   direction;
 
`line 4380 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4386 "/tmp/lm32-customizer/tmp.v"

  
 
   

`line 4390 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4396 "/tmp/lm32-customizer/tmp.v"

output branch;
wire   branch;
output branch_reg;
wire   branch_reg;
output [ (3-1):0] condition;
wire   [ (3-1):0] condition;
output bi_conditional;
wire bi_conditional;
output bi_unconditional;
wire bi_unconditional;
  
`line 4407 "/tmp/lm32-customizer/tmp.v"

output break_opcode;
wire   break_opcode;
 
`line 4410 "/tmp/lm32-customizer/tmp.v"

output scall;
wire   scall;
output eret;
wire   eret;
  
`line 4415 "/tmp/lm32-customizer/tmp.v"

output bret;
wire   bret;
 
`line 4418 "/tmp/lm32-customizer/tmp.v"

  
  
    

`line 4422 "/tmp/lm32-customizer/tmp.v"

output csr_write_enable;
wire   csr_write_enable;





wire [ (32-1):0] extended_immediate;       
wire [ (32-1):0] high_immediate;           
wire [ (32-1):0] call_immediate;           
wire [ (32-1):0] branch_immediate;         
wire sign_extend_immediate;                     
wire select_high_immediate;                     
wire select_call_immediate;                     





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







assign op_add    = instruction[ 30:26] ==  5'b01101;
assign op_and    = instruction[ 30:26] ==  5'b01000;
assign op_andhi  = instruction[ 31:26] ==  6'b011000;
assign op_b      = instruction[ 31:26] ==  6'b110000;
assign op_bi     = instruction[ 31:26] ==  6'b111000;
assign op_be     = instruction[ 31:26] ==  6'b010001;
assign op_bg     = instruction[ 31:26] ==  6'b010010;
assign op_bge    = instruction[ 31:26] ==  6'b010011;
assign op_bgeu   = instruction[ 31:26] ==  6'b010100;
assign op_bgu    = instruction[ 31:26] ==  6'b010101;
assign op_bne    = instruction[ 31:26] ==  6'b010111;
assign op_call   = instruction[ 31:26] ==  6'b110110;
assign op_calli  = instruction[ 31:26] ==  6'b111110;
assign op_cmpe   = instruction[ 30:26] ==  5'b11001;
assign op_cmpg   = instruction[ 30:26] ==  5'b11010;
assign op_cmpge  = instruction[ 30:26] ==  5'b11011;
assign op_cmpgeu = instruction[ 30:26] ==  5'b11100;
assign op_cmpgu  = instruction[ 30:26] ==  5'b11101;
assign op_cmpne  = instruction[ 30:26] ==  5'b11111;
  
       

`line 4470 "/tmp/lm32-customizer/tmp.v"

assign op_lb     = instruction[ 31:26] ==  6'b000100;
assign op_lbu    = instruction[ 31:26] ==  6'b010000;
assign op_lh     = instruction[ 31:26] ==  6'b000111;
assign op_lhu    = instruction[ 31:26] ==  6'b001011;
assign op_lw     = instruction[ 31:26] ==  6'b001010;
  
       

`line 4478 "/tmp/lm32-customizer/tmp.v"

  
`line 4479 "/tmp/lm32-customizer/tmp.v"

assign op_mul    = instruction[ 30:26] ==  5'b00010;
 
`line 4481 "/tmp/lm32-customizer/tmp.v"

assign op_nor    = instruction[ 30:26] ==  5'b00001;
assign op_or     = instruction[ 30:26] ==  5'b01110;
assign op_orhi   = instruction[ 31:26] ==  6'b011110;
assign op_raise  = instruction[ 31:26] ==  6'b101011;
assign op_rcsr   = instruction[ 31:26] ==  6'b100100;
assign op_sb     = instruction[ 31:26] ==  6'b001100;
  
`line 4488 "/tmp/lm32-customizer/tmp.v"

assign op_sextb  = instruction[ 31:26] ==  6'b101100;
assign op_sexth  = instruction[ 31:26] ==  6'b110111;
 
`line 4491 "/tmp/lm32-customizer/tmp.v"

assign op_sh     = instruction[ 31:26] ==  6'b000011;
  
`line 4493 "/tmp/lm32-customizer/tmp.v"

assign op_sl     = instruction[ 30:26] ==  5'b01111;      
 
`line 4495 "/tmp/lm32-customizer/tmp.v"

assign op_sr     = instruction[ 30:26] ==  5'b00101;
assign op_sru    = instruction[ 30:26] ==  5'b00000;
assign op_sub    = instruction[ 31:26] ==  6'b110010;
assign op_sw     = instruction[ 31:26] ==  6'b010110;
assign op_user   = instruction[ 31:26] ==  6'b110011;
assign op_wcsr   = instruction[ 31:26] ==  6'b110100;
assign op_xnor   = instruction[ 30:26] ==  5'b01001;
assign op_xor    = instruction[ 30:26] ==  5'b00110;


assign arith = op_add | op_sub;
assign logical = op_and | op_andhi | op_nor | op_or | op_orhi | op_xor | op_xnor;
assign cmp = op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne;
assign bi_conditional = op_be | op_bg | op_bge | op_bgeu  | op_bgu | op_bne;
assign bi_unconditional = op_bi;
assign bra = op_b | bi_unconditional | bi_conditional;
assign call = op_call | op_calli;
  
`line 4513 "/tmp/lm32-customizer/tmp.v"

assign shift = op_sl | op_sr | op_sru;
 
`line 4515 "/tmp/lm32-customizer/tmp.v"

  
     

`line 4518 "/tmp/lm32-customizer/tmp.v"

  
   
     

`line 4522 "/tmp/lm32-customizer/tmp.v"

  
`line 4523 "/tmp/lm32-customizer/tmp.v"

assign sext = op_sextb | op_sexth;
 
`line 4525 "/tmp/lm32-customizer/tmp.v"

  
`line 4526 "/tmp/lm32-customizer/tmp.v"

assign multiply = op_mul;
 
`line 4528 "/tmp/lm32-customizer/tmp.v"

  
    
   

`line 4532 "/tmp/lm32-customizer/tmp.v"

assign load = op_lb | op_lbu | op_lh | op_lhu | op_lw;
assign store = op_sb | op_sh | op_sw;


always @(*)
begin
    
    if (call) 
        d_result_sel_0 =  1'b1;
    else 
        d_result_sel_0 =  1'b0;
    if (call) 
        d_result_sel_1 =  2'b00;         
    else if ((instruction[31] == 1'b0) && !bra) 
        d_result_sel_1 =  2'b10;
    else
        d_result_sel_1 =  2'b01; 
    
    x_result_sel_csr =  1'b0;
  
      

`line 4554 "/tmp/lm32-customizer/tmp.v"

  
      

`line 4557 "/tmp/lm32-customizer/tmp.v"

  
`line 4558 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_sext =  1'b0;
 
`line 4560 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_logic =  1'b0;
          
      

`line 4564 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add =  1'b0;
    if (op_rcsr)
        x_result_sel_csr =  1'b1;
      
 
         
          

 
        
                  

 
      
                      


`line 4581 "/tmp/lm32-customizer/tmp.v"

  
      
                  

`line 4585 "/tmp/lm32-customizer/tmp.v"

  
`line 4586 "/tmp/lm32-customizer/tmp.v"

    else if (sext)
        x_result_sel_sext =  1'b1;
 
`line 4589 "/tmp/lm32-customizer/tmp.v"
        
    else if (logical) 
        x_result_sel_logic =  1'b1;
          
      
          

`line 4595 "/tmp/lm32-customizer/tmp.v"

    else 
        x_result_sel_add =  1'b1;        
    
    

    m_result_sel_compare = cmp;
  
`line 4602 "/tmp/lm32-customizer/tmp.v"

    m_result_sel_shift = shift;
 
`line 4604 "/tmp/lm32-customizer/tmp.v"


    
    w_result_sel_load = load;
  
`line 4608 "/tmp/lm32-customizer/tmp.v"

    w_result_sel_mul = op_mul; 
 
`line 4610 "/tmp/lm32-customizer/tmp.v"

end


assign x_bypass_enable =  arith 
                        | logical
  
                         
                         

`line 4619 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4622 "/tmp/lm32-customizer/tmp.v"

  
                         
                         

`line 4626 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 4629 "/tmp/lm32-customizer/tmp.v"
                  
  
`line 4630 "/tmp/lm32-customizer/tmp.v"

                        | sext 
 
`line 4632 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4635 "/tmp/lm32-customizer/tmp.v"

                        | op_rcsr
                        ;

assign m_bypass_enable = x_bypass_enable 
  
`line 4640 "/tmp/lm32-customizer/tmp.v"

                        | shift
 
`line 4642 "/tmp/lm32-customizer/tmp.v"

                        | cmp
                        ;

assign read_enable_0 = ~(op_bi | op_calli);
assign read_idx_0 = instruction[25:21];

assign read_enable_1 = ~(op_bi | op_calli | load);
assign read_idx_1 = instruction[20:16];

assign write_enable = ~(bra | op_raise | store | op_wcsr);
assign write_idx = call
                    ? 5'd29
                    : instruction[31] == 1'b0 
                        ? instruction[20:16] 
                        : instruction[15:11];
                        

assign size = instruction[27:26];

assign sign_extend = instruction[28];                      

assign adder_op = op_sub | op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne | bra;

assign logic_op = instruction[29:26];
  
`line 4667 "/tmp/lm32-customizer/tmp.v"


assign direction = instruction[29];
 
`line 4670 "/tmp/lm32-customizer/tmp.v"


assign branch = bra | call;
assign branch_reg = op_call | op_b;
assign condition = instruction[28:26];      
  
`line 4675 "/tmp/lm32-customizer/tmp.v"

assign break_opcode = op_raise & ~instruction[2];
 
`line 4677 "/tmp/lm32-customizer/tmp.v"

assign scall = op_raise & instruction[2];
assign eret = op_b & (instruction[25:21] == 5'd30);
  
`line 4680 "/tmp/lm32-customizer/tmp.v"

assign bret = op_b & (instruction[25:21] == 5'd31);
 
`line 4682 "/tmp/lm32-customizer/tmp.v"

  

   

`line 4686 "/tmp/lm32-customizer/tmp.v"


assign csr_write_enable = op_wcsr;



assign sign_extend_immediate = ~(op_and | op_cmpgeu | op_cmpgu | op_nor | op_or | op_xnor | op_xor);
assign select_high_immediate = op_andhi | op_orhi;
assign select_call_immediate = instruction[31];

assign high_immediate = {instruction[15:0], 16'h0000};
assign extended_immediate = {{16{sign_extend_immediate & instruction[15]}}, instruction[15:0]};
assign call_immediate = {{6{instruction[25]}}, instruction[25:0]};
assign branch_immediate = {{16{instruction[15]}}, instruction[15:0]};

assign immediate = select_high_immediate ==  1'b1 
                        ? high_immediate 
                        : extended_immediate;
   
assign branch_offset = select_call_immediate ==  1'b1   
                        ? call_immediate
                        : branch_immediate;
    
endmodule 



































					  
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 4748 "/tmp/lm32-customizer/tmp.v"


  
`line 4750 "/tmp/lm32-customizer/tmp.v"

  
`line 4751 "/tmp/lm32-customizer/tmp.v"

  
`line 4752 "/tmp/lm32-customizer/tmp.v"

  
`line 4753 "/tmp/lm32-customizer/tmp.v"


  
`line 4755 "/tmp/lm32-customizer/tmp.v"

  
`line 4756 "/tmp/lm32-customizer/tmp.v"

  
`line 4757 "/tmp/lm32-customizer/tmp.v"

  
`line 4758 "/tmp/lm32-customizer/tmp.v"


  
`line 4760 "/tmp/lm32-customizer/tmp.v"

  
`line 4761 "/tmp/lm32-customizer/tmp.v"

  
`line 4762 "/tmp/lm32-customizer/tmp.v"

  
`line 4763 "/tmp/lm32-customizer/tmp.v"


  
`line 4765 "/tmp/lm32-customizer/tmp.v"

  
`line 4766 "/tmp/lm32-customizer/tmp.v"

  
`line 4767 "/tmp/lm32-customizer/tmp.v"

  
`line 4768 "/tmp/lm32-customizer/tmp.v"

  
`line 4769 "/tmp/lm32-customizer/tmp.v"






module lm32_icache_medium_icache_debug ( 
    
    clk_i,
    rst_i,    
    stall_a,
    stall_f,
    address_a,
    address_f,
    read_enable_f,
    refill_ready,
    refill_data,
    iflush,
  
    

`line 4789 "/tmp/lm32-customizer/tmp.v"

    valid_d,
    branch_predict_taken_d,
    
    stall_request,
    restart_request,
    refill_request,
    refill_address,
    refilling,
    inst
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    

localparam addr_offset_width = clogb2(bytes_per_line)-1-2;
localparam addr_set_width = clogb2(sets)-1;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);
localparam addr_set_lsb = (addr_offset_msb+1);
localparam addr_set_msb = (addr_set_lsb+addr_set_width-1);
localparam addr_tag_lsb = (addr_set_msb+1);
localparam addr_tag_msb = clogb2( 32'h7fffffff- 32'h0)-1;
localparam addr_tag_width = (addr_tag_msb-addr_tag_lsb+1);





input clk_i;                                        
input rst_i;                                        

input stall_a;                                      
input stall_f;                                      

input valid_d;                                      
input branch_predict_taken_d;                       
   
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_a;                     
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] address_f;                     
input read_enable_f;                                

input refill_ready;                                 
input [ (32-1):0] refill_data;          

input iflush;                                       
  
                                      

`line 4844 "/tmp/lm32-customizer/tmp.v"

   




output stall_request;                               
wire   stall_request;
output restart_request;                             
reg    restart_request;
output refill_request;                              
wire   refill_request;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] refill_address;               
output refilling;                                   
reg    refilling;
output [ (32-1):0] inst;                
wire   [ (32-1):0] inst;





wire enable;
wire [0:associativity-1] way_mem_we;
wire [ (32-1):0] way_data[0:associativity-1];
wire [ ((addr_tag_width+1)-1):1] way_tag[0:associativity-1];
wire [0:associativity-1] way_valid;
wire [0:associativity-1] way_match;
wire miss;

wire [ (addr_set_width-1):0] tmem_read_address;
wire [ (addr_set_width-1):0] tmem_write_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_read_address;
wire [ ((addr_offset_width+addr_set_width)-1):0] dmem_write_address;
wire [ ((addr_tag_width+1)-1):0] tmem_write_data;

reg [ 3:0] state;
wire flushing;
wire check;
wire refill;

reg [associativity-1:0] refill_way_select;
reg [ addr_offset_msb:addr_offset_lsb] refill_offset;
wire last_refill;
reg [ (addr_set_width-1):0] flush_set;

genvar i;





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






   generate
      for (i = 0; i < associativity; i = i + 1)
	begin : memories
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 (32),
	       .address_width              ( (addr_offset_width+addr_set_width))

) 
	   way_0_data_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (dmem_read_address),
	      .enable_read                (enable),
	      .write_address              (dmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i]),
	      .write_data                 (refill_data),    
	      
	      .read_data                  (way_data[i])
	      );
	   
	   lm32_ram 
	     #(
	       
	       .data_width                 ( (addr_tag_width+1)),
	       .address_width              ( addr_set_width)

	       ) 
	   way_0_tag_ram 
	     (
	      
	      .read_clk                   (clk_i),
	      .write_clk                  (clk_i),
	      .reset                      (rst_i),
	      .read_address               (tmem_read_address),
	      .enable_read                (enable),
	      .write_address              (tmem_write_address),
	      .enable_write               ( 1'b1),
	      .write_enable               (way_mem_we[i] | flushing),
	      .write_data                 (tmem_write_data),
	      
	      .read_data                  ({way_tag[i], way_valid[i]})
	      );
	   
	end
endgenerate






generate
    for (i = 0; i < associativity; i = i + 1)
    begin : match
assign way_match[i] = ({way_tag[i], way_valid[i]} == {address_f[ addr_tag_msb:addr_tag_lsb],  1'b1});
    end
endgenerate


generate
    if (associativity == 1)
    begin : inst_1
assign inst = way_match[0] ? way_data[0] : 32'b0;
    end
    else if (associativity == 2)
	 begin : inst_2
assign inst = way_match[0] ? way_data[0] : (way_match[1] ? way_data[1] : 32'b0);
    end
endgenerate


generate 
    if (bytes_per_line > 4)
assign dmem_write_address = {refill_address[ addr_set_msb:addr_set_lsb], refill_offset};
    else
assign dmem_write_address = refill_address[ addr_set_msb:addr_set_lsb];
endgenerate
    
assign dmem_read_address = address_a[ addr_set_msb:addr_offset_lsb];


assign tmem_read_address = address_a[ addr_set_msb:addr_set_lsb];
assign tmem_write_address = flushing 
                                ? flush_set
                                : refill_address[ addr_set_msb:addr_set_lsb];


generate 
    if (bytes_per_line > 4)                            
assign last_refill = refill_offset == {addr_offset_width{1'b1}};
    else
assign last_refill =  1'b1;
endgenerate


assign enable = (stall_a ==  1'b0);


generate
    if (associativity == 1) 
    begin : we_1     
assign way_mem_we[0] = (refill_ready ==  1'b1);
    end
    else
    begin : we_2
assign way_mem_we[0] = (refill_ready ==  1'b1) && (refill_way_select[0] ==  1'b1);
assign way_mem_we[1] = (refill_ready ==  1'b1) && (refill_way_select[1] ==  1'b1);
    end
endgenerate                     


assign tmem_write_data[ 0] = last_refill & !flushing;
assign tmem_write_data[ ((addr_tag_width+1)-1):1] = refill_address[ addr_tag_msb:addr_tag_lsb];


assign flushing = |state[1:0];
assign check = state[2];
assign refill = state[3];

assign miss = (~(|way_match)) && (read_enable_f ==  1'b1) && (stall_f ==  1'b0) && !(valid_d && branch_predict_taken_d);
assign stall_request = (check ==  1'b0);
assign refill_request = (refill ==  1'b1);
                      





generate
    if (associativity >= 2) 
    begin : way_select      
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_way_select <= {{associativity-1{1'b0}}, 1'b1};
    else
    begin        
        if (miss ==  1'b1)
            refill_way_select <= {refill_way_select[0], refill_way_select[1]};
    end
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refilling <=  1'b0;
    else
        refilling <= refill;
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'b0001;
        flush_set <= { addr_set_width{1'b1}};
        refill_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        restart_request <=  1'b0;
    end
    else 
    begin
        case (state)

        
         4'b0001:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
                state <=  4'b0100;
            flush_set <= flush_set - 1'b1;
        end

        
         4'b0010:
        begin            
            if (flush_set == { addr_set_width{1'b0}})
  
	       
                  
	      

`line 5093 "/tmp/lm32-customizer/tmp.v"

		state <=  4'b0100;
	   
            flush_set <= flush_set - 1'b1;
        end
        
        
         4'b0100:
        begin            
            if (stall_a ==  1'b0)
                restart_request <=  1'b0;
            if (iflush ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b0010;
            end
            else if (miss ==  1'b1)
            begin
                refill_address <= address_f;
                state <=  4'b1000;
            end
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
            begin
                if (last_refill ==  1'b1)
                begin
                    restart_request <=  1'b1;
                    state <=  4'b0100;
                end
            end
        end

        endcase        
    end
end

generate 
    if (bytes_per_line > 4)
    begin

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        refill_offset <= {addr_offset_width{1'b0}};
    else 
    begin
        case (state)
        
        
         4'b0100:
        begin            
            if (iflush ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
            else if (miss ==  1'b1)
                refill_offset <= {addr_offset_width{1'b0}};
        end

        
         4'b1000:
        begin            
            if (refill_ready ==  1'b1)
                refill_offset <= refill_offset + 1'b1;
        end

        endcase        
    end
end
    end
endgenerate
   
endmodule

 
`line 5169 "/tmp/lm32-customizer/tmp.v"































								 
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

           
              
              
              

           
             
           
             

                
                  
              
            

                 
               
               
              





   
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    





                               
                                      
                             
                                
                                       

   
   
   
   
   
   
   
   
   





                                             
                                             

                                           
                                           
                                           

                         
                         
                                          
                                         
                        
          

                                      
                       

                                            





                                    
   
                                  
    
                                   
    
                   
     
                                        
    
                        
    





                                   
                                  
                     
                     
        
  
                       
                       
                                               

          
         
          
         
                 
                     

                           
                                           
                                              
                                             

                                        
                
             
                                        
                   

  





 





   
                     
	  
	   
              
               
		 
		  
		    
		     
		     

		      
		    
		     
		      
		      
		      
		      
		      
		      
		      
		      
		          
		     
		      
		         
             
           
             
		               
		    
		      
		       
			 
			  
			  

			   
			 
			  
			   
			   
			   
			   
			   
			   
			   
			       
			       
			  
			   
			  
		  
             
	   
	   
	    
	     
	       
	        
	        

	         
	       
		
		 
		 
		 
		 
		 
		 
		 
		 
		 
		
		  
		
	
      
   







               
      
       
    




           
	   
   
    
        
	   
        
    



       
    

 

       
          
    
    
              
              
              
              
    

    
    
    

 

       
          
    
          

    



 
        
      
                              
                             
    
      
                             
                             

   

     
                             
                             
   


 
                                   
     
    
   



     
       


         



        
           
             
         
     
     
      
                 
                 
             
             
    



             
   


   
   
   

           
     
                      






        
            
   

       
           
    
            
           
               
    

     
   


   

       
          
     
          



   

       
    
          
          
          
          
          
    
     
    
         

        
        
        
               
                  
                
        
        
        
        
        
               
                  
               
            
                  
                  
                  
            
                
                  
        

        
        
        
              
               
            
                   
                
                      
                      
                
            
        
        
                
    



       
    

   

       
          
     
    
         
        
        
        
        
               
                  
        

        
        
        
               
                    
        
        
                
    

    





`line 5675 "/tmp/lm32-customizer/tmp.v"

































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 5710 "/tmp/lm32-customizer/tmp.v"



  
`line 5713 "/tmp/lm32-customizer/tmp.v"

  
`line 5714 "/tmp/lm32-customizer/tmp.v"

  
`line 5715 "/tmp/lm32-customizer/tmp.v"

  
`line 5716 "/tmp/lm32-customizer/tmp.v"

  
`line 5717 "/tmp/lm32-customizer/tmp.v"

  
`line 5718 "/tmp/lm32-customizer/tmp.v"






module lm32_debug_medium_icache_debug (
    
    clk_i, 
    rst_i,
    pc_x,
    load_x,
    store_x,
    load_store_address_x,
    csr_write_enable_x,
    csr_write_data,
    csr_x,
  
`line 5735 "/tmp/lm32-customizer/tmp.v"

    jtag_csr_write_enable,
    jtag_csr_write_data,
    jtag_csr,
 
`line 5739 "/tmp/lm32-customizer/tmp.v"

  
`line 5740 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
    bret_q_x,
    stall_x,
    exception_x,
    q_x,
  
    

`line 5748 "/tmp/lm32-customizer/tmp.v"

 
`line 5749 "/tmp/lm32-customizer/tmp.v"

    
  
`line 5751 "/tmp/lm32-customizer/tmp.v"

    dc_ss,
 
`line 5753 "/tmp/lm32-customizer/tmp.v"

    dc_re,
    bp_match,
    wp_match
    );
    




parameter breakpoints = 0;                      
parameter watchpoints = 0;                      





input clk_i;                                    
input rst_i;                                    

input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                      
input load_x;                                   
input store_x;                                  
input [ (32-1):0] load_store_address_x;    
input csr_write_enable_x;                       
input [ (32-1):0] csr_write_data;          
input [ (5-1):0] csr_x;                    
  
`line 5780 "/tmp/lm32-customizer/tmp.v"

input jtag_csr_write_enable;                    
input [ (32-1):0] jtag_csr_write_data;     
input [ (5-1):0] jtag_csr;                 
 
`line 5784 "/tmp/lm32-customizer/tmp.v"

  
`line 5785 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
input bret_q_x;                                 
input stall_x;                                  
input exception_x;                              
input q_x;                                      
  
                     

`line 5793 "/tmp/lm32-customizer/tmp.v"

 
`line 5794 "/tmp/lm32-customizer/tmp.v"






  
`line 5800 "/tmp/lm32-customizer/tmp.v"

output dc_ss;                                   
reg    dc_ss;
 
`line 5803 "/tmp/lm32-customizer/tmp.v"

output dc_re;                                   
reg    dc_re;
output bp_match;                                
wire   bp_match;        
output wp_match;                                
wire   wp_match;





genvar i;                                       



reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] bp_a[0:breakpoints-1];       
reg bp_e[0:breakpoints-1];                      
wire [0:breakpoints-1]bp_match_n;               

reg [ 1:0] wpc_c[0:watchpoints-1];   
reg [ (32-1):0] wp[0:watchpoints-1];       
wire [0:watchpoints]wp_match_n;               

wire debug_csr_write_enable;                    
wire [ (32-1):0] debug_csr_write_data;     
wire [ (5-1):0] debug_csr;                 

  
`line 5831 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;           

 
`line 5835 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







generate
    for (i = 0; i < breakpoints; i = i + 1)
    begin : bp_comb
assign bp_match_n[i] = ((bp_a[i] == pc_x) && (bp_e[i] ==  1'b1));
    end
endgenerate
generate 
  
`line 5855 "/tmp/lm32-customizer/tmp.v"

    if (breakpoints > 0) 
assign bp_match = (|bp_match_n) || (state ==  3'b011);
    else
assign bp_match = state ==  3'b011;
 
        
   
    
   

`line 5865 "/tmp/lm32-customizer/tmp.v"

endgenerate    
               

generate 
    for (i = 0; i < watchpoints; i = i + 1)
    begin : wp_comb
assign wp_match_n[i] = (wp[i] == load_store_address_x) && ((load_x & wpc_c[i][0]) | (store_x & wpc_c[i][1]));
    end               
endgenerate
generate
    if (watchpoints > 0) 
assign wp_match = |wp_match_n;                
    else
assign wp_match =  1'b0;
endgenerate
                
  
`line 5882 "/tmp/lm32-customizer/tmp.v"
                

assign debug_csr_write_enable = (csr_write_enable_x ==  1'b1) || (jtag_csr_write_enable ==  1'b1);
assign debug_csr_write_data = jtag_csr_write_enable ==  1'b1 ? jtag_csr_write_data : csr_write_data;
assign debug_csr = jtag_csr_write_enable ==  1'b1 ? jtag_csr : csr_x;
 
   
   
   

`line 5891 "/tmp/lm32-customizer/tmp.v"







generate
    for (i = 0; i < breakpoints; i = i + 1)
    begin : bp_seq
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        bp_a[i] <= { (clogb2(32'h7fffffff-32'h0)-2){1'bx}};
        bp_e[i] <=  1'b0;
    end
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h10 + i))
        begin
            bp_a[i] <= debug_csr_write_data[ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2];
            bp_e[i] <= debug_csr_write_data[0];
        end
    end
end    
    end
endgenerate


generate
    for (i = 0; i < watchpoints; i = i + 1)
    begin : wp_seq
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        wp[i] <= { 32{1'bx}};
        wpc_c[i] <=  2'b00;
    end
    else
    begin
        if (debug_csr_write_enable ==  1'b1)
        begin
            if (debug_csr ==  5'h8)
                wpc_c[i] <= debug_csr_write_data[3+i*2:2+i*2];
            if (debug_csr ==  5'h18 + i)
                wp[i] <= debug_csr_write_data;
        end
    end  
end
    end
endgenerate


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        dc_re <=  1'b0;
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h8))
            dc_re <= debug_csr_write_data[1];
    end
end    

  
`line 5957 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  3'b000;
        dc_ss <=  1'b0;
    end
    else
    begin
        if ((debug_csr_write_enable ==  1'b1) && (debug_csr ==  5'h8))
        begin
            dc_ss <= debug_csr_write_data[0];
            if (debug_csr_write_data[0] ==  1'b0) 
                state <=  3'b000;
            else 
                state <=  3'b001;
        end
        case (state)
         3'b001:
        begin
            
            if (   (   (eret_q_x ==  1'b1)
                    || (bret_q_x ==  1'b1)
                    )
                && (stall_x ==  1'b0)
               )
                state <=  3'b010; 
        end
         3'b010:
        begin
            
            if ((q_x ==  1'b1) && (stall_x ==  1'b0))
                state <=  3'b011;
        end
         3'b011:
        begin
            
  
               
                  
             

`line 6000 "/tmp/lm32-customizer/tmp.v"

                 if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
            begin
                dc_ss <=  1'b0;
                state <=  3'b100;
            end
        end
         3'b100:
        begin
            
  
               
                  
             

`line 6014 "/tmp/lm32-customizer/tmp.v"

                state <=  3'b000;
        end
        endcase
    end
end
 
`line 6020 "/tmp/lm32-customizer/tmp.v"


endmodule

 
`line 6024 "/tmp/lm32-customizer/tmp.v"















































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_instruction_unit_medium_icache_debug (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_f,
    stall_d,
    stall_x,
    stall_m,
    valid_f,
    valid_d,
    kill_f,
    branch_predict_taken_d,
    branch_predict_address_d,
      
    
    

`line 6095 "/tmp/lm32-customizer/tmp.v"

    exception_m,
    branch_taken_m,
    branch_mispredict_taken_m,
    branch_target_m,
  
`line 6100 "/tmp/lm32-customizer/tmp.v"

    iflush,
 
`line 6102 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 6107 "/tmp/lm32-customizer/tmp.v"
        
  
    
    
    

`line 6112 "/tmp/lm32-customizer/tmp.v"

  
`line 6113 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_i,
    i_ack_i,
    i_err_i,
    i_rty_i,
 
`line 6119 "/tmp/lm32-customizer/tmp.v"

  
`line 6120 "/tmp/lm32-customizer/tmp.v"

    jtag_read_enable,
    jtag_write_enable,
    jtag_write_data,
    jtag_address,
 
`line 6125 "/tmp/lm32-customizer/tmp.v"

    
    
    pc_f,
    pc_d,
    pc_x,
    pc_m,
    pc_w,
  
`line 6133 "/tmp/lm32-customizer/tmp.v"

    icache_stall_request,
    icache_restart_request,
    icache_refill_request,
    icache_refilling,
 
`line 6138 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6141 "/tmp/lm32-customizer/tmp.v"

  
`line 6142 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_o,
    i_adr_o,
    i_cyc_o,
    i_sel_o,
    i_stb_o,
    i_we_o,
    i_cti_o,
    i_lock_o,
    i_bte_o,
 
`line 6153 "/tmp/lm32-customizer/tmp.v"

  
`line 6154 "/tmp/lm32-customizer/tmp.v"

    jtag_read_data,
    jtag_access_complete,
 
`line 6157 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6160 "/tmp/lm32-customizer/tmp.v"

  
`line 6161 "/tmp/lm32-customizer/tmp.v"

    instruction_f,
 
`line 6163 "/tmp/lm32-customizer/tmp.v"
    
    instruction_d
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_f;                                          
input stall_d;                                          
input stall_x;                                          
input stall_m;                                          
input valid_f;                                          
input valid_d;                                          
input kill_f;                                           

input branch_predict_taken_d;                           
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_predict_address_d;          
   
      
                                    
                     

`line 6204 "/tmp/lm32-customizer/tmp.v"

input exception_m;
input branch_taken_m;                                   
input branch_mispredict_taken_m;                        
input [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] branch_target_m;                   

  
`line 6210 "/tmp/lm32-customizer/tmp.v"

input iflush;                                           
 
`line 6212 "/tmp/lm32-customizer/tmp.v"

  
                            
                             
 

`line 6217 "/tmp/lm32-customizer/tmp.v"
        

  
                 
                   
                                        

`line 6223 "/tmp/lm32-customizer/tmp.v"


  
`line 6225 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] i_dat_i;                         
input i_ack_i;                                          
input i_err_i;                                          
input i_rty_i;                                          
 
`line 6230 "/tmp/lm32-customizer/tmp.v"


  
`line 6232 "/tmp/lm32-customizer/tmp.v"

input jtag_read_enable;                                 
input jtag_write_enable;                                
input [ 7:0] jtag_write_data;                 
input [ (32-1):0] jtag_address;                    
 
`line 6237 "/tmp/lm32-customizer/tmp.v"





        
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_f;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_d;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_x;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_m;
output [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;                             
reg    [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_w;

  
`line 6254 "/tmp/lm32-customizer/tmp.v"

output icache_stall_request;                            
wire   icache_stall_request;
output icache_restart_request;                          
wire   icache_restart_request;
output icache_refill_request;                           
wire   icache_refill_request;
output icache_refilling;                                
wire   icache_refilling;
 
`line 6263 "/tmp/lm32-customizer/tmp.v"


  
                      
                          

`line 6268 "/tmp/lm32-customizer/tmp.v"
   

  
`line 6270 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_dat_o;                        
  
`line 6272 "/tmp/lm32-customizer/tmp.v"

reg    [ (32-1):0] i_dat_o;
 
    

`line 6276 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_adr_o;                        
reg    [ (32-1):0] i_adr_o;
output i_cyc_o;                                         
reg    i_cyc_o; 
output [ (4-1):0] i_sel_o;                 
  
`line 6282 "/tmp/lm32-customizer/tmp.v"

reg    [ (4-1):0] i_sel_o;
 
    

`line 6286 "/tmp/lm32-customizer/tmp.v"

output i_stb_o;                                         
reg    i_stb_o;
output i_we_o;                                          
  
`line 6290 "/tmp/lm32-customizer/tmp.v"

reg    i_we_o;
 
   

`line 6294 "/tmp/lm32-customizer/tmp.v"

output [ (3-1):0] i_cti_o;                       
reg    [ (3-1):0] i_cti_o;
output i_lock_o;                                        
reg    i_lock_o;
output [ (2-1):0] i_bte_o;                       
wire   [ (2-1):0] i_bte_o;
 
`line 6301 "/tmp/lm32-customizer/tmp.v"


  
`line 6303 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_read_data;                 
reg    [ 7:0] jtag_read_data;
output jtag_access_complete;                            
wire   jtag_access_complete;
 
`line 6308 "/tmp/lm32-customizer/tmp.v"


  
                                      
    

`line 6313 "/tmp/lm32-customizer/tmp.v"

  
`line 6314 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_f;           
wire   [ (32-1):0] instruction_f;
 
`line 6317 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_d;           
reg    [ (32-1):0] instruction_d;





reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] pc_a;                                

  
`line 6327 "/tmp/lm32-customizer/tmp.v"

reg [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] restart_address;                     
 
`line 6329 "/tmp/lm32-customizer/tmp.v"


  
`line 6331 "/tmp/lm32-customizer/tmp.v"

wire icache_read_enable_f;                              
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] icache_refill_address;              
reg icache_refill_ready;                                
reg [ (32-1):0] icache_refill_data;         
wire [ (32-1):0] icache_data_f;             
wire [ (3-1):0] first_cycle_type;                
wire [ (3-1):0] next_cycle_type;                 
wire last_word;                                         
wire [ ((clogb2(32'h7fffffff-32'h0)-2)+2-1):2] first_address;                      
 
 
                    


`line 6345 "/tmp/lm32-customizer/tmp.v"

  
                                      
                                       
                 

`line 6350 "/tmp/lm32-customizer/tmp.v"

  
`line 6351 "/tmp/lm32-customizer/tmp.v"

 
               

`line 6354 "/tmp/lm32-customizer/tmp.v"

  
                                         

`line 6357 "/tmp/lm32-customizer/tmp.v"


  
`line 6359 "/tmp/lm32-customizer/tmp.v"

reg jtag_access;                                        
 
`line 6361 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







    
    
     
       
                    
	 
       
       
       
       
       
       
	 
              
              
              
              
              
              
	 
                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	                   
	                     
	                        
	                         
	    
	                         
	                         
	    

`line 6420 "/tmp/lm32-customizer/tmp.v"
    
 
  
`line 6422 "/tmp/lm32-customizer/tmp.v"


lm32_icache_medium_icache_debug #(
    .associativity          (associativity),
    .sets                   (sets),
    .bytes_per_line         (bytes_per_line),
    .base_address           (base_address),
    .limit                  (limit)
    ) icache ( 
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),      
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .valid_d                (valid_d),
    .address_a              (pc_a),
    .address_f              (pc_f),
    .read_enable_f          (icache_read_enable_f),
    .refill_ready           (icache_refill_ready),
    .refill_data            (icache_refill_data),
    .iflush                 (iflush),
    
    .stall_request          (icache_stall_request),
    .restart_request        (icache_restart_request),
    .refill_request         (icache_refill_request),
    .refill_address         (icache_refill_address),
    .refilling              (icache_refilling),
    .inst                   (icache_data_f)
    );
 
`line 6452 "/tmp/lm32-customizer/tmp.v"






  
`line 6458 "/tmp/lm32-customizer/tmp.v"


assign icache_read_enable_f =    (valid_f ==  1'b1)
                              && (kill_f ==  1'b0)
  
                                 

`line 6464 "/tmp/lm32-customizer/tmp.v"
                         
   
                                 

`line 6467 "/tmp/lm32-customizer/tmp.v"
       
                              ;
 
`line 6469 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    
  
       
          
     

`line 6479 "/tmp/lm32-customizer/tmp.v"
    
      if (branch_taken_m ==  1'b1)
	if ((branch_mispredict_taken_m ==  1'b1) && (exception_m ==  1'b0))
	  pc_a = pc_x;
	else
          pc_a = branch_target_m;
      
          
          

`line 6488 "/tmp/lm32-customizer/tmp.v"

      else
	if ( (valid_d ==  1'b1) && (branch_predict_taken_d ==  1'b1) )
	  pc_a = branch_predict_address_d;
	else
  
`line 6493 "/tmp/lm32-customizer/tmp.v"

          if (icache_restart_request ==  1'b1)
            pc_a = restart_address;
	  else 
 
`line 6497 "/tmp/lm32-customizer/tmp.v"
        
            pc_a = pc_f + 1'b1;
end


  
           

`line 6504 "/tmp/lm32-customizer/tmp.v"

                     

  
`line 6507 "/tmp/lm32-customizer/tmp.v"

  
         

`line 6510 "/tmp/lm32-customizer/tmp.v"

assign instruction_f = icache_data_f;
 
`line 6512 "/tmp/lm32-customizer/tmp.v"

 
 
 
         

   


   


`line 6523 "/tmp/lm32-customizer/tmp.v"



  
`line 6526 "/tmp/lm32-customizer/tmp.v"

  
`line 6527 "/tmp/lm32-customizer/tmp.v"

 
   
   
   

`line 6532 "/tmp/lm32-customizer/tmp.v"

assign i_bte_o =  2'b00;
 
`line 6534 "/tmp/lm32-customizer/tmp.v"


  
`line 6536 "/tmp/lm32-customizer/tmp.v"


generate
    case (bytes_per_line)
    4:
    begin
assign first_cycle_type =  3'b111;
assign next_cycle_type =  3'b111;
assign last_word =  1'b1;
assign first_address = icache_refill_address;
    end
    8:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type =  3'b111;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 1'b1;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    16:
    begin
assign first_cycle_type =  3'b010;
assign next_cycle_type = i_adr_o[addr_offset_msb] == 1'b1 ?  3'b111 :  3'b010;
assign last_word = i_adr_o[addr_offset_msb:addr_offset_lsb] == 2'b11;
assign first_address = {icache_refill_address[ (clogb2(32'h7fffffff-32'h0)-2)+2-1:addr_offset_msb+1], {addr_offset_width{1'b0}}};
    end
    endcase
endgenerate
 
`line 6563 "/tmp/lm32-customizer/tmp.v"

                     





always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        pc_f <= ( 32'h00000000-4)/4;
        pc_d <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_x <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_m <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
        pc_w <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    end
    else
    begin
        if (stall_f ==  1'b0)
            pc_f <= pc_a;
        if (stall_d ==  1'b0)
            pc_d <= pc_f;
        if (stall_x ==  1'b0)
            pc_x <= pc_d;
        if (stall_m ==  1'b0)
            pc_m <= pc_x;
        pc_w <= pc_m;
    end
end

  
`line 6594 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        restart_address <= { (clogb2(32'h7fffffff-32'h0)-2){1'b0}};
    else
    begin
  
         
            
               
                  
                    
                  

               
                  


`line 6613 "/tmp/lm32-customizer/tmp.v"

  
`line 6614 "/tmp/lm32-customizer/tmp.v"
        
            if (icache_refill_request ==  1'b1)
                restart_address <= icache_refill_address;
 
`line 6617 "/tmp/lm32-customizer/tmp.v"

 
`line 6618 "/tmp/lm32-customizer/tmp.v"

    end
end
 
`line 6621 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
    
           
              
    


`line 6635 "/tmp/lm32-customizer/tmp.v"


  
`line 6637 "/tmp/lm32-customizer/tmp.v"

assign jtag_access_complete = (i_cyc_o ==  1'b1) && ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1)) && (jtag_access ==  1'b1);
always @(*)
begin
    case (jtag_address[1:0])
    2'b00: jtag_read_data = i_dat_i[ 31:24];
    2'b01: jtag_read_data = i_dat_i[ 23:16];
    2'b10: jtag_read_data = i_dat_i[ 15:8];
    2'b11: jtag_read_data = i_dat_i[ 7:0];
    endcase 
end
 
`line 6648 "/tmp/lm32-customizer/tmp.v"


  
`line 6650 "/tmp/lm32-customizer/tmp.v"


  
`line 6652 "/tmp/lm32-customizer/tmp.v"
                
always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        i_cyc_o <=  1'b0;
        i_stb_o <=  1'b0;
        i_adr_o <= { 32{1'b0}};
        i_cti_o <=  3'b111;
        i_lock_o <=  1'b0;
        icache_refill_data <= { 32{1'b0}};
        icache_refill_ready <=  1'b0;
  
          

`line 6666 "/tmp/lm32-customizer/tmp.v"

  
`line 6667 "/tmp/lm32-customizer/tmp.v"

        i_we_o <=  1'b0;
        i_sel_o <= 4'b1111;
        jtag_access <=  1'b0;
 
`line 6671 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin   
        icache_refill_ready <=  1'b0;
        
        if (i_cyc_o ==  1'b1)
        begin
            
            if ((i_ack_i ==  1'b1) || (i_err_i ==  1'b1))
            begin
  
`line 6682 "/tmp/lm32-customizer/tmp.v"

                if (jtag_access ==  1'b1)
                begin
                    i_cyc_o <=  1'b0;
                    i_stb_o <=  1'b0;       
                    i_we_o <=  1'b0;  
                    jtag_access <=  1'b0;    
                end
                else
 
`line 6691 "/tmp/lm32-customizer/tmp.v"

                begin
                    if (last_word ==  1'b1)
                    begin
                        
                        i_cyc_o <=  1'b0;
                        i_stb_o <=  1'b0;
                        i_lock_o <=  1'b0;
                    end
                    
                    i_adr_o[addr_offset_msb:addr_offset_lsb] <= i_adr_o[addr_offset_msb:addr_offset_lsb] + 1'b1;
                    i_cti_o <= next_cycle_type;
                    
                    icache_refill_ready <=  1'b1;
                    icache_refill_data <= i_dat_i;
                end
            end
  
               
            
                  
                  
            

`line 6714 "/tmp/lm32-customizer/tmp.v"

        end
        else
        begin
            if ((icache_refill_request ==  1'b1) && (icache_refill_ready ==  1'b0))
            begin
                
  
`line 6721 "/tmp/lm32-customizer/tmp.v"
     
                i_sel_o <= 4'b1111;
 
`line 6723 "/tmp/lm32-customizer/tmp.v"

                i_adr_o <= {first_address, 2'b00};
                i_cyc_o <=  1'b1;
                i_stb_o <=  1'b1;                
                i_cti_o <= first_cycle_type;
                
  
                  

`line 6731 "/tmp/lm32-customizer/tmp.v"

            end
  
`line 6733 "/tmp/lm32-customizer/tmp.v"

            else
            begin
                if ((jtag_read_enable ==  1'b1) || (jtag_write_enable ==  1'b1))
                begin
                    case (jtag_address[1:0])
                    2'b00: i_sel_o <= 4'b1000;
                    2'b01: i_sel_o <= 4'b0100;
                    2'b10: i_sel_o <= 4'b0010;
                    2'b11: i_sel_o <= 4'b0001;
                    endcase
                    i_adr_o <= jtag_address;
                    i_dat_o <= {4{jtag_write_data}};
                    i_cyc_o <=  1'b1;
                    i_stb_o <=  1'b1;
                    i_we_o <= jtag_write_enable;
                    i_cti_o <=  3'b111;
                    jtag_access <=  1'b1;
                end
            end 
 
`line 6753 "/tmp/lm32-customizer/tmp.v"
                    
  
            
            
     
               
                  

               
                  

`line 6763 "/tmp/lm32-customizer/tmp.v"

        end
    end
end
 
   

       
    
          
          
          
          
          
          
 
          

    
    
       
        
           
        
            
                  
            
                
                  
                  
                
                  
            
 
               
            
                  
                  
            

        
        
        
            
                   
  
                   
       
               
            
                
      
                  

                   
                  
                  
 
                  

            
	    
	    
	               
  
		       
       
	           
		
 
		      

		
	    
        
    


`line 6840 "/tmp/lm32-customizer/tmp.v"

 
`line 6841 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        instruction_d <= { 32{1'b0}};
  
          

`line 6851 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        if (stall_d ==  1'b0)
        begin
            instruction_d <= instruction_f;
  
              

`line 6860 "/tmp/lm32-customizer/tmp.v"

        end
    end
end  
  
endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  
`line 6896 "/tmp/lm32-customizer/tmp.v"


  
`line 6898 "/tmp/lm32-customizer/tmp.v"

  
`line 6899 "/tmp/lm32-customizer/tmp.v"

  
`line 6900 "/tmp/lm32-customizer/tmp.v"



  
`line 6903 "/tmp/lm32-customizer/tmp.v"

  
`line 6904 "/tmp/lm32-customizer/tmp.v"

  
`line 6905 "/tmp/lm32-customizer/tmp.v"

  
`line 6906 "/tmp/lm32-customizer/tmp.v"

  
`line 6907 "/tmp/lm32-customizer/tmp.v"

  
`line 6908 "/tmp/lm32-customizer/tmp.v"

  
`line 6909 "/tmp/lm32-customizer/tmp.v"

  
`line 6910 "/tmp/lm32-customizer/tmp.v"



  
`line 6913 "/tmp/lm32-customizer/tmp.v"

  
`line 6914 "/tmp/lm32-customizer/tmp.v"

  
`line 6915 "/tmp/lm32-customizer/tmp.v"

  
`line 6916 "/tmp/lm32-customizer/tmp.v"

  
`line 6917 "/tmp/lm32-customizer/tmp.v"

  
`line 6918 "/tmp/lm32-customizer/tmp.v"

  
`line 6919 "/tmp/lm32-customizer/tmp.v"

  
`line 6920 "/tmp/lm32-customizer/tmp.v"

  
`line 6921 "/tmp/lm32-customizer/tmp.v"

  
`line 6922 "/tmp/lm32-customizer/tmp.v"






module lm32_jtag_medium_icache_debug (
    
    clk_i,
    rst_i,
    jtag_clk, 
    jtag_update,
    jtag_reg_q,
    jtag_reg_addr_q,
  
`line 6936 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_enable,
    csr_write_data,
    stall_x,
 
`line 6941 "/tmp/lm32-customizer/tmp.v"

  
`line 6942 "/tmp/lm32-customizer/tmp.v"

    jtag_read_data,
    jtag_access_complete,
 
`line 6945 "/tmp/lm32-customizer/tmp.v"

  
`line 6946 "/tmp/lm32-customizer/tmp.v"

    exception_q_w,
 
`line 6948 "/tmp/lm32-customizer/tmp.v"

    
  
`line 6950 "/tmp/lm32-customizer/tmp.v"

    jtx_csr_read_data,
    jrx_csr_read_data,
 
`line 6953 "/tmp/lm32-customizer/tmp.v"

  
`line 6954 "/tmp/lm32-customizer/tmp.v"

    jtag_csr_write_enable,
    jtag_csr_write_data,
    jtag_csr,
    jtag_read_enable,
    jtag_write_enable,
    jtag_write_data,
    jtag_address,
 
`line 6962 "/tmp/lm32-customizer/tmp.v"

  
`line 6963 "/tmp/lm32-customizer/tmp.v"

    jtag_break,
    jtag_reset,
 
`line 6966 "/tmp/lm32-customizer/tmp.v"

    jtag_reg_d,
    jtag_reg_addr_d
    );





input clk_i;                                            
input rst_i;                                            

input jtag_clk;                                         
input jtag_update;                                      
input [ 7:0] jtag_reg_q;                      
input [2:0] jtag_reg_addr_q;                            

  
`line 6983 "/tmp/lm32-customizer/tmp.v"

input [ (5-1):0] csr;                              
input csr_write_enable;                                 
input [ (32-1):0] csr_write_data;                  
input stall_x;                                          
 
`line 6988 "/tmp/lm32-customizer/tmp.v"

  
`line 6989 "/tmp/lm32-customizer/tmp.v"

input [ 7:0] jtag_read_data;                  
input jtag_access_complete;                             
 
`line 6992 "/tmp/lm32-customizer/tmp.v"

  
`line 6993 "/tmp/lm32-customizer/tmp.v"

input exception_q_w;                                    
 
`line 6995 "/tmp/lm32-customizer/tmp.v"





       
  
`line 7001 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] jtx_csr_read_data;              
wire   [ (32-1):0] jtx_csr_read_data;
output [ (32-1):0] jrx_csr_read_data;              
wire   [ (32-1):0] jrx_csr_read_data;
 
`line 7006 "/tmp/lm32-customizer/tmp.v"

  
`line 7007 "/tmp/lm32-customizer/tmp.v"

output jtag_csr_write_enable;                           
reg    jtag_csr_write_enable;
output [ (32-1):0] jtag_csr_write_data;            
wire   [ (32-1):0] jtag_csr_write_data;
output [ (5-1):0] jtag_csr;                        
wire   [ (5-1):0] jtag_csr;
output jtag_read_enable;                                
reg    jtag_read_enable;
output jtag_write_enable;                               
reg    jtag_write_enable;
output [ 7:0] jtag_write_data;                
wire   [ 7:0] jtag_write_data;        
output [ (32-1):0] jtag_address;                   
wire   [ (32-1):0] jtag_address;
 
`line 7022 "/tmp/lm32-customizer/tmp.v"

  
`line 7023 "/tmp/lm32-customizer/tmp.v"

output jtag_break;                                      
reg    jtag_break;
output jtag_reset;                                      
reg    jtag_reset;
 
`line 7028 "/tmp/lm32-customizer/tmp.v"

output [ 7:0] jtag_reg_d;
reg    [ 7:0] jtag_reg_d;
output [2:0] jtag_reg_addr_d;
wire   [2:0] jtag_reg_addr_d;
             




reg rx_update;                          
reg rx_update_r;                        
reg rx_update_r_r;                      
reg rx_update_r_r_r;                    



wire [ 7:0] rx_byte;   
wire [2:0] rx_addr;

  
`line 7048 "/tmp/lm32-customizer/tmp.v"
                 
reg [ 7:0] uart_tx_byte;      
reg uart_tx_valid;                      
reg [ 7:0] uart_rx_byte;      
reg uart_rx_valid;                      
 
`line 7053 "/tmp/lm32-customizer/tmp.v"


reg [ 3:0] command;             
  
`line 7056 "/tmp/lm32-customizer/tmp.v"

reg [ 7:0] jtag_byte_0;       
reg [ 7:0] jtag_byte_1;
reg [ 7:0] jtag_byte_2;
reg [ 7:0] jtag_byte_3;
reg [ 7:0] jtag_byte_4;
reg processing;                         
 
`line 7063 "/tmp/lm32-customizer/tmp.v"


reg [ 3:0] state;       





  
`line 7071 "/tmp/lm32-customizer/tmp.v"

assign jtag_csr_write_data = {jtag_byte_0, jtag_byte_1, jtag_byte_2, jtag_byte_3};
assign jtag_csr = jtag_byte_4[ (5-1):0];
assign jtag_address = {jtag_byte_0, jtag_byte_1, jtag_byte_2, jtag_byte_3};
assign jtag_write_data = jtag_byte_4;
 
`line 7076 "/tmp/lm32-customizer/tmp.v"

                 

  
`line 7079 "/tmp/lm32-customizer/tmp.v"
                 
assign jtag_reg_addr_d[1:0] = {uart_rx_valid, uart_tx_valid};         
 
   

`line 7083 "/tmp/lm32-customizer/tmp.v"

  
`line 7084 "/tmp/lm32-customizer/tmp.v"

assign jtag_reg_addr_d[2] = processing;
 
   

`line 7088 "/tmp/lm32-customizer/tmp.v"


  
`line 7090 "/tmp/lm32-customizer/tmp.v"
                 
assign jtx_csr_read_data = {{ 32-9{1'b0}}, uart_tx_valid, 8'h00};
assign jrx_csr_read_data = {{ 32-9{1'b0}}, uart_rx_valid, uart_rx_byte};
 
`line 7093 "/tmp/lm32-customizer/tmp.v"
         
                 




assign rx_byte = jtag_reg_q;
assign rx_addr = jtag_reg_addr_q;



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        rx_update <= 1'b0;
        rx_update_r <= 1'b0;
        rx_update_r_r <= 1'b0;
        rx_update_r_r_r <= 1'b0;
    end
    else
    begin
        rx_update <= jtag_update;
        rx_update_r <= rx_update;
        rx_update_r_r <= rx_update_r;
        rx_update_r_r_r <= rx_update_r_r;
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        state <=  4'h0;
        command <= 4'b0000;
        jtag_reg_d <= 8'h00;
  
`line 7130 "/tmp/lm32-customizer/tmp.v"

        processing <=  1'b0;
        jtag_csr_write_enable <=  1'b0;
        jtag_read_enable <=  1'b0;
        jtag_write_enable <=  1'b0;
 
`line 7135 "/tmp/lm32-customizer/tmp.v"

  
`line 7136 "/tmp/lm32-customizer/tmp.v"

        jtag_break <=  1'b0;
        jtag_reset <=  1'b0;
 
`line 7139 "/tmp/lm32-customizer/tmp.v"

  
`line 7140 "/tmp/lm32-customizer/tmp.v"
                 
        uart_tx_byte <= 8'h00;
        uart_tx_valid <=  1'b0;
        uart_rx_byte <= 8'h00;
        uart_rx_valid <=  1'b0;
 
`line 7145 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
  
`line 7149 "/tmp/lm32-customizer/tmp.v"
                 
        if ((csr_write_enable ==  1'b1) && (stall_x ==  1'b0))
        begin
            case (csr)
             5'he:
            begin
                
                uart_tx_byte <= csr_write_data[ 7:0];
                uart_tx_valid <=  1'b1;
            end
             5'hf:
            begin
                
                uart_rx_valid <=  1'b0;
            end
            endcase
        end
 
`line 7166 "/tmp/lm32-customizer/tmp.v"

  
`line 7167 "/tmp/lm32-customizer/tmp.v"

        
        if (exception_q_w ==  1'b1)
        begin
            jtag_break <=  1'b0;
            jtag_reset <=  1'b0;
        end
 
`line 7174 "/tmp/lm32-customizer/tmp.v"

        case (state)
         4'h0:
        begin
            
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                command <= rx_byte[7:4];                
                case (rx_addr)
  
`line 7183 "/tmp/lm32-customizer/tmp.v"

                 3'b000:
                begin
                    case (rx_byte[7:4])
  
`line 7187 "/tmp/lm32-customizer/tmp.v"

                     4'b0001:
                        state <=  4'h1;
                     4'b0011:
                    begin
                        {jtag_byte_2, jtag_byte_3} <= {jtag_byte_2, jtag_byte_3} + 1'b1;
                        state <=  4'h6;
                    end
                     4'b0010:
                        state <=  4'h1;
                     4'b0100:
                    begin
                        {jtag_byte_2, jtag_byte_3} <= {jtag_byte_2, jtag_byte_3} + 1'b1;
                        state <= 5;
                    end
                     4'b0101:
                        state <=  4'h1;
 
`line 7204 "/tmp/lm32-customizer/tmp.v"
                    
                     4'b0110:
                    begin
  
`line 7207 "/tmp/lm32-customizer/tmp.v"
     
                        uart_rx_valid <=  1'b0;    
                        uart_tx_valid <=  1'b0;         
 
`line 7210 "/tmp/lm32-customizer/tmp.v"

                        jtag_break <=  1'b1;
                    end
                     4'b0111:
                    begin
  
`line 7215 "/tmp/lm32-customizer/tmp.v"
     
                        uart_rx_valid <=  1'b0;    
                        uart_tx_valid <=  1'b0;         
 
`line 7218 "/tmp/lm32-customizer/tmp.v"

                        jtag_reset <=  1'b1;
                    end
                    endcase                               
                end
 
`line 7223 "/tmp/lm32-customizer/tmp.v"

  
`line 7224 "/tmp/lm32-customizer/tmp.v"
                 
                 3'b001:
                begin
                    uart_rx_byte <= rx_byte;
                    uart_rx_valid <=  1'b1;
                end                    
                 3'b010:
                begin
                    jtag_reg_d <= uart_tx_byte;
                    uart_tx_valid <=  1'b0;
                end
 
`line 7235 "/tmp/lm32-customizer/tmp.v"

                default:
                    ;
                endcase                
            end
        end
  
`line 7241 "/tmp/lm32-customizer/tmp.v"

         4'h1:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_0 <= rx_byte;
                state <=  4'h2;
            end
        end
         4'h2:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_1 <= rx_byte;
                state <=  4'h3;
            end
        end
         4'h3:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_2 <= rx_byte;
                state <=  4'h4;
            end
        end
         4'h4:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_3 <= rx_byte;
                if (command ==  4'b0001)
                    state <=  4'h6;
                else 
                    state <=  4'h5;
            end
        end
         4'h5:
        begin
            if ((~rx_update_r_r_r & rx_update_r_r) ==  1'b1)
            begin
                jtag_byte_4 <= rx_byte;
                state <=  4'h6;
            end
        end
         4'h6:
        begin
            case (command)
             4'b0001,
             4'b0011:
            begin
                jtag_read_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h7;
            end
             4'b0010,
             4'b0100:
            begin
                jtag_write_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h7;
            end
             4'b0101:
            begin
                jtag_csr_write_enable <=  1'b1;
                processing <=  1'b1;
                state <=  4'h8;
            end
            endcase
        end
         4'h7:
        begin
            if (jtag_access_complete ==  1'b1)
            begin          
                jtag_read_enable <=  1'b0;
                jtag_reg_d <= jtag_read_data;
                jtag_write_enable <=  1'b0;  
                processing <=  1'b0;
                state <=  4'h0;
            end
        end    
         4'h8:
        begin
            jtag_csr_write_enable <=  1'b0;
            processing <=  1'b0;
            state <=  4'h0;
        end    
 
`line 7327 "/tmp/lm32-customizer/tmp.v"

        endcase
    end
end
  
endmodule

 
`line 7334 "/tmp/lm32-customizer/tmp.v"





























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_interrupt_medium_icache_debug (
    
    clk_i, 
    rst_i,
    
    interrupt,
    
    stall_x,
  
`line 7377 "/tmp/lm32-customizer/tmp.v"

    non_debug_exception,
    debug_exception,
 
    

`line 7382 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
  
`line 7384 "/tmp/lm32-customizer/tmp.v"

    bret_q_x,
 
`line 7386 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_data,
    csr_write_enable,
    
    interrupt_exception,
    
    csr_read_data
    );





parameter interrupts =  32;         





input clk_i;                                    
input rst_i;                                    

input [interrupts-1:0] interrupt;               

input stall_x;                                  

  
`line 7413 "/tmp/lm32-customizer/tmp.v"

input non_debug_exception;                      
input debug_exception;                          
 
                                 

`line 7418 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
  
`line 7420 "/tmp/lm32-customizer/tmp.v"

input bret_q_x;                                 
 
`line 7422 "/tmp/lm32-customizer/tmp.v"


input [ (5-1):0] csr;                      
input [ (32-1):0] csr_write_data;          
input csr_write_enable;                         





output interrupt_exception;                     
wire   interrupt_exception;

output [ (32-1):0] csr_read_data;          
reg    [ (32-1):0] csr_read_data;





wire [interrupts-1:0] asserted;                 

wire [interrupts-1:0] interrupt_n_exception;



reg ie;                                         
reg eie;                                        
  
`line 7450 "/tmp/lm32-customizer/tmp.v"

reg bie;                                        
 
`line 7452 "/tmp/lm32-customizer/tmp.v"

reg [interrupts-1:0] ip;                        
reg [interrupts-1:0] im;                        






assign interrupt_n_exception = ip & im;


assign interrupt_exception = (|interrupt_n_exception) & ie;


assign asserted = ip | interrupt;
       
assign ie_csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7470 "/tmp/lm32-customizer/tmp.v"

                           bie,
 
                           

`line 7474 "/tmp/lm32-customizer/tmp.v"
                             
                           eie, 
                           ie
                          };
assign ip_csr_read_data = ip;
assign im_csr_read_data = im;
generate
    if (interrupts > 1) 
    begin

always @(*)
begin
    case (csr)
     5'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7488 "/tmp/lm32-customizer/tmp.v"

                                    bie,
 
                                                                         

`line 7492 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     5'h2:  csr_read_data = ip;
     5'h1:  csr_read_data = im;
    default:       csr_read_data = { 32{1'bx}};
    endcase
end
    end
    else
    begin

always @(*)
begin
    case (csr)
     5'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
`line 7509 "/tmp/lm32-customizer/tmp.v"

                                    bie, 
 
                                                                        

`line 7513 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     5'h2:  csr_read_data = ip;
    default:       csr_read_data = { 32{1'bx}};
      endcase
end
    end
endgenerate
    




  
`line 7528 "/tmp/lm32-customizer/tmp.v"

   reg [ 10:0] eie_delay  = 0;

   
generate

   
    if (interrupts > 1)
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie                   <=  1'b0;
        eie                  <=  1'b0;
  
`line 7544 "/tmp/lm32-customizer/tmp.v"

        bie                  <=  1'b0;
 
`line 7546 "/tmp/lm32-customizer/tmp.v"

        im                   <= {interrupts{1'b0}};
        ip                   <= {interrupts{1'b0}};
       eie_delay             <= 0;
       
    end
    else
    begin
        
        ip                   <= asserted;
  
`line 7556 "/tmp/lm32-customizer/tmp.v"

        if (non_debug_exception ==  1'b1)
        begin
            
            eie              <= ie;
            ie               <=  1'b0;
        end
        else if (debug_exception ==  1'b1)
        begin
            
            bie              <= ie;
            ie               <=  1'b0;
        end
 
           
        
            
                           
                            
        

`line 7576 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
        begin

           if(eie_delay[0])
             ie              <= eie;
           
           eie_delay         <= {1'b0, eie_delay[ 10:1]};

            if (eret_q_x ==  1'b1) begin
                
               eie_delay[ 10] <=  1'b1;
               eie_delay[ 10-1:0] <= 0;
            end
           
                      
           
  
`line 7593 "/tmp/lm32-customizer/tmp.v"

            else if (bret_q_x ==  1'b1)
                
                ie      <= bie;
 
`line 7597 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  5'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
`line 7605 "/tmp/lm32-customizer/tmp.v"

                    bie <= csr_write_data[2];
 
`line 7607 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  5'h1)
                    im  <= csr_write_data[interrupts-1:0];
                if (csr ==  5'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
else
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie              <=  1'b0;
        eie             <=  1'b0;
  
`line 7627 "/tmp/lm32-customizer/tmp.v"

        bie             <=  1'b0;
 
`line 7629 "/tmp/lm32-customizer/tmp.v"

        ip              <= {interrupts{1'b0}};
       eie_delay        <= 0;
    end
    else
    begin
        
        ip              <= asserted;
  
`line 7637 "/tmp/lm32-customizer/tmp.v"

        if (non_debug_exception ==  1'b1)
        begin
            
            eie         <= ie;
            ie          <=  1'b0;
        end
        else if (debug_exception ==  1'b1)
        begin
            
            bie         <= ie;
            ie          <=  1'b0;
        end
 
           
        
            
                      
                       
        

`line 7657 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
          begin

             if(eie_delay[0])
               ie              <= eie;
           
             eie_delay         <= {1'b0, eie_delay[ 10:1]};

             if (eret_q_x ==  1'b1) begin
                
                eie_delay[ 10] <=  1'b1;
                eie_delay[ 10-1:0] <= 0;
             end
           
  
`line 7672 "/tmp/lm32-customizer/tmp.v"

            else if (bret_q_x ==  1'b1)
                
                ie      <= bie;
 
`line 7676 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  5'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
`line 7684 "/tmp/lm32-customizer/tmp.v"

                    bie <= csr_write_data[2];
 
`line 7686 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  5'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
endgenerate

endmodule



`line 1 "/tmp/lm32-customizer/tmp.v"




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  

`line 33 "src/lm32_include.v"

  
`line 34 "src/lm32_include.v"



  
`line 1 "/tmp/lm32-customizer/system_conf.v"

`line 1 "/tmp/lm32-customizer/system_conf.v"
  
`line 1 "/tmp/lm32-customizer/system_conf.v"

  
`line 2 "/tmp/lm32-customizer/system_conf.v"

  
`line 3 "/tmp/lm32-customizer/system_conf.v"

  
`line 4 "/tmp/lm32-customizer/system_conf.v"

	  
`line 5 "/tmp/lm32-customizer/system_conf.v"

	  
`line 6 "/tmp/lm32-customizer/system_conf.v"

	  
`line 7 "/tmp/lm32-customizer/system_conf.v"

	  
`line 8 "/tmp/lm32-customizer/system_conf.v"

	  
`line 9 "/tmp/lm32-customizer/system_conf.v"

	  
`line 10 "/tmp/lm32-customizer/system_conf.v"

	  
`line 11 "/tmp/lm32-customizer/system_conf.v"

	  
`line 12 "/tmp/lm32-customizer/system_conf.v"

	  
`line 13 "/tmp/lm32-customizer/system_conf.v"

	  
`line 14 "/tmp/lm32-customizer/system_conf.v"

	  
`line 15 "/tmp/lm32-customizer/system_conf.v"

	  
`line 16 "/tmp/lm32-customizer/system_conf.v"

	  
	 
	 
	 
	 
	  
	  
	
`line 24 "/tmp/lm32-customizer/system_conf.v"

 
`line 25 "/tmp/lm32-customizer/system_conf.v"


`line 26 "src/lm32_include.v"


  

`line 40 "src/lm32_include.v"

  
`line 41 "src/lm32_include.v"

  
`line 42 "src/lm32_include.v"

  
`line 43 "src/lm32_include.v"

  
`line 44 "src/lm32_include.v"

 
`line 45 "src/lm32_include.v"



  
`line 48 "src/lm32_include.v"

  
`line 49 "src/lm32_include.v"



  
`line 52 "src/lm32_include.v"

  
`line 53 "src/lm32_include.v"

  
`line 54 "src/lm32_include.v"

  
`line 55 "src/lm32_include.v"

  
`line 56 "src/lm32_include.v"

  
`line 57 "src/lm32_include.v"



  
`line 60 "src/lm32_include.v"

  
`line 61 "src/lm32_include.v"

  
`line 62 "src/lm32_include.v"



  
`line 65 "src/lm32_include.v"

  
`line 66 "src/lm32_include.v"

  
`line 67 "src/lm32_include.v"



  
                    

`line 72 "src/lm32_include.v"

  
`line 73 "src/lm32_include.v"

  
`line 74 "src/lm32_include.v"

 
                    

`line 77 "src/lm32_include.v"

 
`line 78 "src/lm32_include.v"

  
`line 79 "src/lm32_include.v"



  
`line 82 "src/lm32_include.v"

  
`line 83 "src/lm32_include.v"



  
`line 86 "src/lm32_include.v"

  
`line 87 "src/lm32_include.v"



  
`line 90 "src/lm32_include.v"

  
`line 91 "src/lm32_include.v"



  
 

`line 96 "src/lm32_include.v"

  
 

`line 99 "src/lm32_include.v"

 
`line 100 "src/lm32_include.v"



  
 

`line 105 "src/lm32_include.v"

  
 

`line 108 "src/lm32_include.v"

 
`line 109 "src/lm32_include.v"

 
`line 110 "src/lm32_include.v"



  
 

`line 115 "src/lm32_include.v"
 
  
 

`line 118 "src/lm32_include.v"

  
`line 119 "src/lm32_include.v"

 
`line 120 "src/lm32_include.v"

 
`line 121 "src/lm32_include.v"
 


  
 

`line 126 "src/lm32_include.v"

  
 

`line 129 "src/lm32_include.v"

 
`line 130 "src/lm32_include.v"



  
 

`line 135 "src/lm32_include.v"

  
 

`line 138 "src/lm32_include.v"

  
 

`line 141 "src/lm32_include.v"



  
`line 144 "src/lm32_include.v"

  
`line 145 "src/lm32_include.v"

 
`line 146 "src/lm32_include.v"

  
 

`line 149 "src/lm32_include.v"



  
`line 152 "src/lm32_include.v"



  
`line 155 "src/lm32_include.v"



  
`line 158 "src/lm32_include.v"

  
`line 159 "src/lm32_include.v"

  
`line 160 "src/lm32_include.v"

  
`line 161 "src/lm32_include.v"

  
`line 162 "src/lm32_include.v"

  
`line 163 "src/lm32_include.v"

  
`line 164 "src/lm32_include.v"

  
`line 165 "src/lm32_include.v"

  
`line 166 "src/lm32_include.v"

  
`line 167 "src/lm32_include.v"



  
`line 170 "src/lm32_include.v"

  
`line 171 "src/lm32_include.v"

  
`line 172 "src/lm32_include.v"

  
`line 173 "src/lm32_include.v"

  
`line 174 "src/lm32_include.v"

  
`line 175 "src/lm32_include.v"



  
                   
                     

`line 181 "src/lm32_include.v"

  
                   
                     

`line 185 "src/lm32_include.v"

  
`line 186 "src/lm32_include.v"

  
`line 187 "src/lm32_include.v"

 
`line 188 "src/lm32_include.v"

 
`line 189 "src/lm32_include.v"



  
`line 192 "src/lm32_include.v"

  
`line 193 "src/lm32_include.v"

  
`line 194 "src/lm32_include.v"

  
`line 195 "src/lm32_include.v"

  
`line 196 "src/lm32_include.v"

  
`line 197 "src/lm32_include.v"

  
`line 198 "src/lm32_include.v"

  
`line 199 "src/lm32_include.v"

  
                      
                    

`line 203 "src/lm32_include.v"

  
`line 204 "src/lm32_include.v"

  
                     
                     

`line 208 "src/lm32_include.v"

  
                     
                     
                     
                     
                     
                     
                     
                     

`line 218 "src/lm32_include.v"
 


  
`line 221 "src/lm32_include.v"

  
`line 222 "src/lm32_include.v"

  
`line 223 "src/lm32_include.v"

  
`line 224 "src/lm32_include.v"

  
`line 225 "src/lm32_include.v"



  
`line 228 "src/lm32_include.v"

  
`line 229 "src/lm32_include.v"

  
`line 230 "src/lm32_include.v"

  
`line 231 "src/lm32_include.v"

  
`line 232 "src/lm32_include.v"

  
`line 233 "src/lm32_include.v"

  
`line 234 "src/lm32_include.v"

  
`line 235 "src/lm32_include.v"

  
`line 236 "src/lm32_include.v"

  
`line 237 "src/lm32_include.v"




  
`line 241 "src/lm32_include.v"

  
`line 242 "src/lm32_include.v"

  
`line 243 "src/lm32_include.v"


  
`line 245 "src/lm32_include.v"

  
`line 246 "src/lm32_include.v"

  
`line 247 "src/lm32_include.v"

  
`line 248 "src/lm32_include.v"


  
`line 250 "src/lm32_include.v"

  
`line 251 "src/lm32_include.v"



  
 

`line 256 "src/lm32_include.v"

  
 

`line 259 "src/lm32_include.v"

 
`line 260 "src/lm32_include.v"







  
`line 267 "src/lm32_include.v"

  
`line 268 "src/lm32_include.v"

  
`line 269 "src/lm32_include.v"







  
`line 276 "src/lm32_include.v"

  
`line 277 "src/lm32_include.v"

  
`line 278 "src/lm32_include.v"

  
`line 279 "src/lm32_include.v"



  
`line 282 "src/lm32_include.v"

  
`line 283 "src/lm32_include.v"

  
`line 284 "src/lm32_include.v"

  
`line 285 "src/lm32_include.v"



  
`line 288 "src/lm32_include.v"

  
`line 289 "src/lm32_include.v"



  
`line 292 "src/lm32_include.v"







  
`line 299 "src/lm32_include.v"

  
`line 300 "src/lm32_include.v"

  
`line 301 "src/lm32_include.v"

  
`line 302 "src/lm32_include.v"

  
`line 303 "src/lm32_include.v"

  
`line 304 "src/lm32_include.v"



  
`line 307 "src/lm32_include.v"

  
`line 308 "src/lm32_include.v"

  
`line 309 "src/lm32_include.v"

  
`line 310 "src/lm32_include.v"

  
`line 311 "src/lm32_include.v"

  
`line 312 "src/lm32_include.v"


 
`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"

           
  
`line 31 "/tmp/lm32-customizer/tmp.v"

  
`line 32 "/tmp/lm32-customizer/tmp.v"

  
`line 33 "/tmp/lm32-customizer/tmp.v"

  
`line 34 "/tmp/lm32-customizer/tmp.v"

  
`line 35 "/tmp/lm32-customizer/tmp.v"

  
`line 36 "/tmp/lm32-customizer/tmp.v"

  
`line 37 "/tmp/lm32-customizer/tmp.v"






module lm32_mc_arithmetic_minimal (
    
    clk_i,
    rst_i,
    stall_d,
    kill_x,
  
    
    

`line 52 "/tmp/lm32-customizer/tmp.v"

  
    

`line 55 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 60 "/tmp/lm32-customizer/tmp.v"

    operand_0_d,
    operand_1_d,
    
    result_x,
  
    

`line 67 "/tmp/lm32-customizer/tmp.v"

    stall_request_x
    );





input clk_i;                                    
input rst_i;                                    
input stall_d;                                  
input kill_x;                                   
  
                                  
                                 

`line 82 "/tmp/lm32-customizer/tmp.v"

  
                                

`line 85 "/tmp/lm32-customizer/tmp.v"

  
                              
                             
                             

`line 90 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] operand_0_d;
input [ (32-1):0] operand_1_d;





output [ (32-1):0] result_x;               
reg    [ (32-1):0] result_x;
  
                         
    

`line 103 "/tmp/lm32-customizer/tmp.v"

output stall_request_x;                         
wire   stall_request_x;





reg [ (32-1):0] p;                         
reg [ (32-1):0] a;
reg [ (32-1):0] b;
  
  

`line 116 "/tmp/lm32-customizer/tmp.v"


reg [ 2:0] state;                 
reg [5:0] cycles;                               

  
                               
                                 

`line 124 "/tmp/lm32-customizer/tmp.v"







assign stall_request_x = state !=  3'b000;

  

      

`line 136 "/tmp/lm32-customizer/tmp.v"


  

       

`line 141 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        cycles <= {6{1'b0}};
        p <= { 32{1'b0}};
        a <= { 32{1'b0}};
        b <= { 32{1'b0}};
  
          

`line 158 "/tmp/lm32-customizer/tmp.v"

  
          

`line 161 "/tmp/lm32-customizer/tmp.v"

        result_x <= { 32{1'b0}};
        state <=  3'b000;
    end
    else
    begin
  
          

`line 169 "/tmp/lm32-customizer/tmp.v"

        case (state)
         3'b000:
        begin
            if (stall_d ==  1'b0)                 
            begin          
                cycles <=  32;
                p <= 32'b0;
                a <= operand_0_d;
                b <= operand_1_d;                    
  
                   
                      
                   
                      

`line 184 "/tmp/lm32-customizer/tmp.v"
                    
  
                   
                      

`line 188 "/tmp/lm32-customizer/tmp.v"

  
                   
                
                      
                      
                      
                      
                      
                
                   
                
                      
                      
                      
                      
                      
                

`line 206 "/tmp/lm32-customizer/tmp.v"

            end            
        end
  
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        
        
        
               
            
                  
                   
            
             
            
                   
                   
            
              
                   
            
                
                    
                  
            
                
        

`line 252 "/tmp/lm32-customizer/tmp.v"
        
  
        
        
               
                    
               
               
              
                   
                  
                
        

`line 265 "/tmp/lm32-customizer/tmp.v"
     
  
        
               
               
              
                   
                  
                
        
        
               
               
              
                   
                  
                
        

`line 283 "/tmp/lm32-customizer/tmp.v"
   
        endcase
    end
end 

endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_top_minimal (
    
    clk_i,
    rst_i,
    

    interrupt,

    
  
    
    

`line 335 "/tmp/lm32-customizer/tmp.v"
     
  
`line 336 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 342 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
      
    
    
    
    

`line 354 "/tmp/lm32-customizer/tmp.v"
    
  
`line 355 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 366 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





input clk_i;                                    
input rst_i;                                    


input [ (32-1):0] interrupt;          


  
               
                             

`line 393 "/tmp/lm32-customizer/tmp.v"
    

  
`line 395 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 400 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                               
   
       
     
           
    
           
    

`line 420 "/tmp/lm32-customizer/tmp.v"


  
`line 422 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 441 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;
  



 
  

  
  
 
  
  
 
 

`line 475 "/tmp/lm32-customizer/tmp.v"



  

                     
                             
                            
                   
                                 
 
                                 


`line 488 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"




   

lm32_cpu_minimal cpu (
    
    .clk_i                 (clk_i),
  
                   

`line 505 "/tmp/lm32-customizer/tmp.v"

    .rst_i                 (rst_i),
    
  
`line 508 "/tmp/lm32-customizer/tmp.v"

    .interrupt             (interrupt),
 
`line 510 "/tmp/lm32-customizer/tmp.v"

    
  
               
             

`line 515 "/tmp/lm32-customizer/tmp.v"
     
  
    
                  
               
                
           

`line 522 "/tmp/lm32-customizer/tmp.v"

  
`line 523 "/tmp/lm32-customizer/tmp.v"

     
    .I_DAT_I               (I_DAT_I),
    .I_ACK_I               (I_ACK_I),
    .I_ERR_I               (I_ERR_I),
    .I_RTY_I               (I_RTY_I),
 
`line 529 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_I               (D_DAT_I),
    .D_ACK_I               (D_ACK_I),
    .D_ERR_I               (D_ERR_I),
    .D_RTY_I               (D_RTY_I),
    
  
                  
            
           
                 
                
 
                


`line 545 "/tmp/lm32-customizer/tmp.v"

  
                
           

`line 549 "/tmp/lm32-customizer/tmp.v"

      
                
               
            
            

`line 555 "/tmp/lm32-customizer/tmp.v"
    
  
`line 556 "/tmp/lm32-customizer/tmp.v"

    
    .I_DAT_O               (I_DAT_O),
    .I_ADR_O               (I_ADR_O),
    .I_CYC_O               (I_CYC_O),
    .I_SEL_O               (I_SEL_O),
    .I_STB_O               (I_STB_O),
    .I_WE_O                (I_WE_O),
    .I_CTI_O               (I_CTI_O),
    .I_LOCK_O              (I_LOCK_O),
    .I_BTE_O               (I_BTE_O),
     
`line 567 "/tmp/lm32-customizer/tmp.v"

    
    .D_DAT_O               (D_DAT_O),
    .D_ADR_O               (D_ADR_O),
    .D_CYC_O               (D_CYC_O),
    .D_SEL_O               (D_SEL_O),
    .D_STB_O               (D_STB_O),
    .D_WE_O                (D_WE_O),
    .D_CTI_O               (D_CTI_O),
    .D_LOCK_O              (D_LOCK_O),
    .D_BTE_O               (D_BTE_O)
    );
   
  		   

  
    
                     
                
    
                
                     
                
                      
                     
    

`line 593 "/tmp/lm32-customizer/tmp.v"
        
   
endmodule
































































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_cpu_minimal (
    
    clk_i,
  
    

`line 671 "/tmp/lm32-customizer/tmp.v"
    
    rst_i,
    
  
`line 674 "/tmp/lm32-customizer/tmp.v"

    interrupt,
 
`line 676 "/tmp/lm32-customizer/tmp.v"

    
  
    
    

`line 681 "/tmp/lm32-customizer/tmp.v"
     
  
    
    
     
    
    

`line 688 "/tmp/lm32-customizer/tmp.v"

  
`line 689 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_I,
    I_ACK_I,
    I_ERR_I,
    I_RTY_I,
 
`line 695 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_I,
    D_ACK_I,
    D_ERR_I,
    D_RTY_I,
    
  
    
    
    
    
    
 
    


`line 711 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 715 "/tmp/lm32-customizer/tmp.v"

      
    
    
    
    

`line 721 "/tmp/lm32-customizer/tmp.v"
    
  
`line 722 "/tmp/lm32-customizer/tmp.v"

    
    I_DAT_O,
    I_ADR_O,
    I_CYC_O,
    I_SEL_O,
    I_STB_O,
    I_WE_O,
    I_CTI_O,
    I_LOCK_O,
    I_BTE_O,
 
`line 733 "/tmp/lm32-customizer/tmp.v"

    
    D_DAT_O,
    D_ADR_O,
    D_CYC_O,
    D_SEL_O,
    D_STB_O,
    D_WE_O,
    D_CTI_O,
    D_LOCK_O,
    D_BTE_O
    );





parameter eba_reset =  32'h00000000;                           
  
                            

`line 753 "/tmp/lm32-customizer/tmp.v"


  
        
                          
      
          
                        

`line 761 "/tmp/lm32-customizer/tmp.v"

parameter icache_associativity = 1;    
parameter icache_sets = 512;                      
parameter icache_bytes_per_line = 16;  
parameter icache_base_address = 0;      
parameter icache_limit = 0;                    
 
`line 767 "/tmp/lm32-customizer/tmp.v"


  
        
                          
      
          
                        

`line 775 "/tmp/lm32-customizer/tmp.v"

parameter dcache_associativity = 1;    
parameter dcache_sets = 512;                      
parameter dcache_bytes_per_line = 16;  
parameter dcache_base_address = 0;      
parameter dcache_limit = 0;                    
 
`line 781 "/tmp/lm32-customizer/tmp.v"


  
                          

`line 785 "/tmp/lm32-customizer/tmp.v"

parameter watchpoints = 0;
 
`line 787 "/tmp/lm32-customizer/tmp.v"

  
                          

`line 790 "/tmp/lm32-customizer/tmp.v"

parameter breakpoints = 0;
 
`line 792 "/tmp/lm32-customizer/tmp.v"


  
`line 794 "/tmp/lm32-customizer/tmp.v"

parameter interrupts =  32;                         
 
   

`line 798 "/tmp/lm32-customizer/tmp.v"






input clk_i;                                    
  
                                   

`line 807 "/tmp/lm32-customizer/tmp.v"
    
input rst_i;                                    

  
`line 810 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] interrupt;          
 
`line 812 "/tmp/lm32-customizer/tmp.v"


  
               
                             

`line 817 "/tmp/lm32-customizer/tmp.v"
    

  
                                  
                               
                
  

`line 824 "/tmp/lm32-customizer/tmp.v"


  
`line 826 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] I_DAT_I;                 
input I_ACK_I;                                  
input I_ERR_I;                                  
input I_RTY_I;                                  
 
`line 831 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] D_DAT_I;                 
input D_ACK_I;                                  
input D_ERR_I;                                  
input D_RTY_I;                                  





  
                   
     
                           
    
                          
    
                 
     
                               
    
 
                               
    


`line 857 "/tmp/lm32-customizer/tmp.v"


  
  
    
  
    

`line 864 "/tmp/lm32-customizer/tmp.v"


  
                               
   
       
     
           
    
           
    

`line 875 "/tmp/lm32-customizer/tmp.v"


  
`line 877 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] I_DAT_O;                
wire   [ (32-1):0] I_DAT_O;
output [ (32-1):0] I_ADR_O;                
wire   [ (32-1):0] I_ADR_O;
output I_CYC_O;                                 
wire   I_CYC_O;
output [ (4-1):0] I_SEL_O;         
wire   [ (4-1):0] I_SEL_O;
output I_STB_O;                                 
wire   I_STB_O;
output I_WE_O;                                  
wire   I_WE_O;
output [ (3-1):0] I_CTI_O;               
wire   [ (3-1):0] I_CTI_O;
output I_LOCK_O;                                
wire   I_LOCK_O;
output [ (2-1):0] I_BTE_O;               
wire   [ (2-1):0] I_BTE_O;
 
`line 896 "/tmp/lm32-customizer/tmp.v"


output [ (32-1):0] D_DAT_O;                
wire   [ (32-1):0] D_DAT_O;
output [ (32-1):0] D_ADR_O;                
wire   [ (32-1):0] D_ADR_O;
output D_CYC_O;                                 
wire   D_CYC_O;
output [ (4-1):0] D_SEL_O;         
wire   [ (4-1):0] D_SEL_O;
output D_STB_O;                                 
wire   D_STB_O;
output D_WE_O;                                  
wire   D_WE_O;
output [ (3-1):0] D_CTI_O;               
wire   [ (3-1):0] D_CTI_O;
output D_LOCK_O;                                
wire   D_LOCK_O;
output [ (2-1):0] D_BTE_O;               
wire   [ (2-1):0] D_BTE_O;







  
                                     

`line 925 "/tmp/lm32-customizer/tmp.v"

reg valid_f;                                    
reg valid_d;                                    
reg valid_x;                                    
reg valid_m;                                    
reg valid_w;                                    
   
wire q_x;
wire [ (32-1):0] immediate_d;              
wire load_d;                                    
reg load_x;                                     
reg load_m;
wire load_q_x;
wire store_q_x;
wire store_d;                                   
reg store_x;
reg store_m;
wire [ 1:0] size_d;                   
reg [ 1:0] size_x;
wire branch_d;                                  
wire branch_predict_d;                          
wire branch_predict_taken_d;                    
wire [ ((32-2)+2-1):2] branch_predict_address_d;   
wire [ ((32-2)+2-1):2] branch_target_d;
wire bi_unconditional;
wire bi_conditional;
reg branch_x;                                   
reg branch_predict_x;
reg branch_predict_taken_x;
reg branch_m;
reg branch_predict_m;
reg branch_predict_taken_m;
wire branch_mispredict_taken_m;                 
wire branch_flushX_m;                           
wire branch_reg_d;                              
wire [ ((32-2)+2-1):2] branch_offset_d;            
reg [ ((32-2)+2-1):2] branch_target_x;             
reg [ ((32-2)+2-1):2] branch_target_m;
wire [ 0:0] d_result_sel_0_d; 
wire [ 1:0] d_result_sel_1_d; 

wire x_result_sel_csr_d;                        
reg x_result_sel_csr_x;
  
                    
 

`line 971 "/tmp/lm32-customizer/tmp.v"

  
`line 972 "/tmp/lm32-customizer/tmp.v"
    
wire x_result_sel_shift_d;                      
reg x_result_sel_shift_x;
 
`line 975 "/tmp/lm32-customizer/tmp.v"

  
                        
 

`line 979 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_logic_d;                      
reg x_result_sel_logic_x;
  
                        
 

`line 985 "/tmp/lm32-customizer/tmp.v"

wire x_result_sel_add_d;                        
reg x_result_sel_add_x;
wire m_result_sel_compare_d;                    
reg m_result_sel_compare_x;
reg m_result_sel_compare_m;
  
                       
 
 

`line 995 "/tmp/lm32-customizer/tmp.v"

wire w_result_sel_load_d;                       
reg w_result_sel_load_x;
reg w_result_sel_load_m;
reg w_result_sel_load_w;
  
                         
 
 
 

`line 1005 "/tmp/lm32-customizer/tmp.v"

wire x_bypass_enable_d;                         
reg x_bypass_enable_x;                          
wire m_bypass_enable_d;                         
reg m_bypass_enable_x;                          
reg m_bypass_enable_m;
wire sign_extend_d;                             
reg sign_extend_x;
wire write_enable_d;                            
reg write_enable_x;
wire write_enable_q_x;
reg write_enable_m;
wire write_enable_q_m;
reg write_enable_w;
wire write_enable_q_w;
wire read_enable_0_d;                           
wire [ (5-1):0] read_idx_0_d;          
wire read_enable_1_d;                           
wire [ (5-1):0] read_idx_1_d;          
wire [ (5-1):0] write_idx_d;           
reg [ (5-1):0] write_idx_x;            
reg [ (5-1):0] write_idx_m;
reg [ (5-1):0] write_idx_w;
wire [ (3-1):0] csr_d;                     
reg  [ (3-1):0] csr_x;                  
wire [ (3-1):0] condition_d;         
reg [ (3-1):0] condition_x;          
  
                                    
                                     

`line 1035 "/tmp/lm32-customizer/tmp.v"

wire scall_d;                                   
reg scall_x;    
wire eret_d;                                    
reg eret_x;
wire eret_q_x;
reg eret_m;
  
 

`line 1044 "/tmp/lm32-customizer/tmp.v"

  
                                     
 
 
 
 
 


`line 1053 "/tmp/lm32-customizer/tmp.v"

wire csr_write_enable_d;                        
reg csr_write_enable_x;
wire csr_write_enable_q_x;
  
       

`line 1059 "/tmp/lm32-customizer/tmp.v"


  
                                
 
 
  

`line 1066 "/tmp/lm32-customizer/tmp.v"


reg [ (32-1):0] d_result_0;                
reg [ (32-1):0] d_result_1;                
reg [ (32-1):0] x_result;                  
reg [ (32-1):0] m_result;                  
reg [ (32-1):0] w_result;                  

reg [ (32-1):0] operand_0_x;               
reg [ (32-1):0] operand_1_x;               
reg [ (32-1):0] store_operand_x;           
reg [ (32-1):0] operand_m;                 
reg [ (32-1):0] operand_w;                 


  
`line 1081 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] reg_data_live_0;          
reg [ (32-1):0] reg_data_live_1;  
reg use_buf;                                    
reg [ (32-1):0] reg_data_buf_0;
reg [ (32-1):0] reg_data_buf_1;
 
`line 1087 "/tmp/lm32-customizer/tmp.v"

  
`line 1088 "/tmp/lm32-customizer/tmp.v"

 
     

`line 1091 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] reg_data_0;               
wire [ (32-1):0] reg_data_1;               
reg [ (32-1):0] bypass_data_0;             
reg [ (32-1):0] bypass_data_1;             
wire reg_write_enable_q_w;

reg interlock;                                  

wire stall_a;                                   
wire stall_f;                                   
wire stall_d;                                   
wire stall_x;                                   
wire stall_m;                                   


wire adder_op_d;                                
reg adder_op_x;                                 
reg adder_op_x_n;                               
wire [ (32-1):0] adder_result_x;           
wire adder_overflow_x;                          
wire adder_carry_n_x;                           


wire [ 3:0] logic_op_d;           
reg [ 3:0] logic_op_x;            
wire [ (32-1):0] logic_result_x;           

  

             
             
              

`line 1124 "/tmp/lm32-customizer/tmp.v"



  
 
                                   
                                     

                                
                                         
 
           

`line 1136 "/tmp/lm32-customizer/tmp.v"

  
                               
 
                              
 

`line 1142 "/tmp/lm32-customizer/tmp.v"

  
`line 1143 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] shifter_result_x;         
 
`line 1145 "/tmp/lm32-customizer/tmp.v"



  
        

`line 1150 "/tmp/lm32-customizer/tmp.v"

  
                                 
 

`line 1154 "/tmp/lm32-customizer/tmp.v"



  
                                   
 
 
 
                           

`line 1163 "/tmp/lm32-customizer/tmp.v"



  
                         
  

`line 1169 "/tmp/lm32-customizer/tmp.v"



  
`line 1172 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] interrupt_csr_read_data_x;
 
`line 1174 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] cfg;                      
wire [ (32-1):0] cfg2;                     
  
                          

`line 1179 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] csr_read_data_x;           


wire [ ((32-2)+2-1):2] pc_f;                       
wire [ ((32-2)+2-1):2] pc_d;                       
wire [ ((32-2)+2-1):2] pc_x;                       
wire [ ((32-2)+2-1):2] pc_m;                       
wire [ ((32-2)+2-1):2] pc_w;                       
  
                          

`line 1190 "/tmp/lm32-customizer/tmp.v"

  
`line 1191 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] instruction_f;     
 
`line 1193 "/tmp/lm32-customizer/tmp.v"



wire [ (32-1):0] instruction_d;     
  
                                     
                       
                     
                      
                           

`line 1203 "/tmp/lm32-customizer/tmp.v"

  
          
            
                
                                 
                       

`line 1210 "/tmp/lm32-customizer/tmp.v"



  
                                   
                                     
                       
                     
                      
                           

`line 1220 "/tmp/lm32-customizer/tmp.v"

wire [ (32-1):0] load_data_w;              
wire stall_wb_load;                             


  
 
          
          

 
                      
        
                    
                           
  
 
  
  
 

 
                                 


`line 1244 "/tmp/lm32-customizer/tmp.v"



wire raw_x_0;                                   
wire raw_x_1;                                   
wire raw_m_0;                                   
wire raw_m_1;                                   
wire raw_w_0;                                   
wire raw_w_1;                                   


wire cmp_zero;                                  
wire cmp_negative;                              
wire cmp_overflow;                              
wire cmp_carry_n;                               
reg condition_met_x;                            
reg condition_met_m;
      
                             

`line 1263 "/tmp/lm32-customizer/tmp.v"

wire branch_taken_m;                            

wire kill_f;                                    
wire kill_d;                                    
wire kill_x;                                    
wire kill_m;                                    
wire kill_w;                                    

reg [ (32-2)+2-1:8] eba;                 
  
                  

`line 1275 "/tmp/lm32-customizer/tmp.v"

reg [ (3-1):0] eid_x;                      
  
                        
                        

`line 1280 "/tmp/lm32-customizer/tmp.v"


  
 
                                      

                                      
                                
                                 
                          
 
 
 
                      
 
 
 

`line 1297 "/tmp/lm32-customizer/tmp.v"

wire exception_x;                               
reg exception_m;
reg exception_w;
wire exception_q_w;
 
`line 1302 "/tmp/lm32-customizer/tmp.v"


  
 
                            


`line 1308 "/tmp/lm32-customizer/tmp.v"

  
`line 1309 "/tmp/lm32-customizer/tmp.v"

wire interrupt_exception;                       
 
`line 1311 "/tmp/lm32-customizer/tmp.v"

  
                       
                       

`line 1315 "/tmp/lm32-customizer/tmp.v"

  
            
                   

`line 1319 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1322 "/tmp/lm32-customizer/tmp.v"

wire system_call_exception;                     

  
                         

`line 1327 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







lm32_instruction_unit_minimal #(
    .associativity          (icache_associativity),
    .sets                   (icache_sets),
    .bytes_per_line         (icache_bytes_per_line),
    .base_address           (icache_base_address),
    .limit                  (icache_limit)
  ) instruction_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_f                (stall_f),
    .stall_d                (stall_d),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .valid_f                (valid_f),
    .valid_d                (valid_d),
    .kill_f                 (kill_f),
    .branch_predict_taken_d (branch_predict_taken_d),
    .branch_predict_address_d (branch_predict_address_d),
      
             
            

`line 1364 "/tmp/lm32-customizer/tmp.v"

    .exception_m            (exception_m),
    .branch_taken_m         (branch_taken_m),
    .branch_mispredict_taken_m (branch_mispredict_taken_m),
    .branch_target_m        (branch_target_m),
  
                     

`line 1371 "/tmp/lm32-customizer/tmp.v"

  
          
            
                 

`line 1376 "/tmp/lm32-customizer/tmp.v"

  
     
      
           

`line 1381 "/tmp/lm32-customizer/tmp.v"
        
  
`line 1382 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_i                (I_DAT_I),
    .i_ack_i                (I_ACK_I),
    .i_err_i                (I_ERR_I),
    .i_rty_i                (I_RTY_I),
 
`line 1388 "/tmp/lm32-customizer/tmp.v"

  
           
          
            
               

`line 1394 "/tmp/lm32-customizer/tmp.v"

    
    
    .pc_f                   (pc_f),
    .pc_d                   (pc_d),
    .pc_x                   (pc_x),
    .pc_m                   (pc_m),
    .pc_w                   (pc_w),
  
       
     
      
           

`line 1407 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1410 "/tmp/lm32-customizer/tmp.v"

  
`line 1411 "/tmp/lm32-customizer/tmp.v"

    
    .i_dat_o                (I_DAT_O),
    .i_adr_o                (I_ADR_O),
    .i_cyc_o                (I_CYC_O),
    .i_sel_o                (I_SEL_O),
    .i_stb_o                (I_STB_O),
    .i_we_o                 (I_WE_O),
    .i_cti_o                (I_CTI_O),
    .i_lock_o               (I_LOCK_O),
    .i_bte_o                (I_BTE_O),
 
`line 1422 "/tmp/lm32-customizer/tmp.v"

  
             
       

`line 1426 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1429 "/tmp/lm32-customizer/tmp.v"

  
`line 1430 "/tmp/lm32-customizer/tmp.v"

    .instruction_f          (instruction_f),
 
`line 1432 "/tmp/lm32-customizer/tmp.v"

    .instruction_d          (instruction_d)
    );


lm32_decoder_minimal decoder (
    
    .instruction            (instruction_d),
    
    .d_result_sel_0         (d_result_sel_0_d),
    .d_result_sel_1         (d_result_sel_1_d),
    .x_result_sel_csr       (x_result_sel_csr_d),
  
      

`line 1446 "/tmp/lm32-customizer/tmp.v"

  
`line 1447 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_shift     (x_result_sel_shift_d),
 
`line 1449 "/tmp/lm32-customizer/tmp.v"

  
          

`line 1452 "/tmp/lm32-customizer/tmp.v"
    
    .x_result_sel_logic     (x_result_sel_logic_d),
  
          

`line 1456 "/tmp/lm32-customizer/tmp.v"

    .x_result_sel_add       (x_result_sel_add_d),
    .m_result_sel_compare   (m_result_sel_compare_d),
  
           

`line 1461 "/tmp/lm32-customizer/tmp.v"
    
    .w_result_sel_load      (w_result_sel_load_d),
  
           

`line 1465 "/tmp/lm32-customizer/tmp.v"

    .x_bypass_enable        (x_bypass_enable_d),
    .m_bypass_enable        (m_bypass_enable_d),
    .read_enable_0          (read_enable_0_d),
    .read_idx_0             (read_idx_0_d),
    .read_enable_1          (read_enable_1_d),
    .read_idx_1             (read_idx_1_d),
    .write_enable           (write_enable_d),
    .write_idx              (write_idx_d),
    .immediate              (immediate_d),
    .branch_offset          (branch_offset_d),
    .load                   (load_d),
    .store                  (store_d),
    .size                   (size_d),
    .sign_extend            (sign_extend_d),
    .adder_op               (adder_op_d),
    .logic_op               (logic_op_d),
  
                  

`line 1484 "/tmp/lm32-customizer/tmp.v"

  
                 
                

`line 1488 "/tmp/lm32-customizer/tmp.v"

  
                   

`line 1491 "/tmp/lm32-customizer/tmp.v"

  
                     
                    

`line 1495 "/tmp/lm32-customizer/tmp.v"

    .branch                 (branch_d),
    .bi_unconditional       (bi_unconditional),
    .bi_conditional         (bi_conditional),
    .branch_reg             (branch_reg_d),
    .condition              (condition_d),
  
               

`line 1503 "/tmp/lm32-customizer/tmp.v"

    .scall                  (scall_d),
    .eret                   (eret_d),
  
                       

`line 1508 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1511 "/tmp/lm32-customizer/tmp.v"

    .csr_write_enable       (csr_write_enable_d)
    ); 


lm32_load_store_unit_minimal #(
    .associativity          (dcache_associativity),
    .sets                   (dcache_sets),
    .bytes_per_line         (dcache_bytes_per_line),
    .base_address           (dcache_base_address),
    .limit                  (dcache_limit)
  ) load_store_unit (
    
    .clk_i                  (clk_i),
    .rst_i                  (rst_i),
    
    .stall_a                (stall_a),
    .stall_x                (stall_x),
    .stall_m                (stall_m),
    .kill_x                 (kill_x),
    .kill_m                 (kill_m),
    .exception_m            (exception_m),
    .store_operand_x        (store_operand_x),
    .load_store_address_x   (adder_result_x),
    .load_store_address_m   (operand_m),
    .load_store_address_w   (operand_w[1:0]),
    .load_x                 (load_x),
    .store_x                (store_x),
    .load_q_x               (load_q_x),
    .store_q_x              (store_q_x),
    .load_q_m               (load_q_m),
    .store_q_m              (store_q_m),
    .sign_extend_x          (sign_extend_x),
    .size_x                 (size_x),
  
                     

`line 1547 "/tmp/lm32-customizer/tmp.v"

  
                

`line 1550 "/tmp/lm32-customizer/tmp.v"

    
    .d_dat_i                (D_DAT_I),
    .d_ack_i                (D_ACK_I),
    .d_err_i                (D_ERR_I),
    .d_rty_i                (D_RTY_I),
    
    
  
      
     
       
           

`line 1563 "/tmp/lm32-customizer/tmp.v"
    
  
          
            
                 
       

`line 1569 "/tmp/lm32-customizer/tmp.v"

    .load_data_w            (load_data_w),
    .stall_wb_load          (stall_wb_load),
    
    .d_dat_o                (D_DAT_O),
    .d_adr_o                (D_ADR_O),
    .d_cyc_o                (D_CYC_O),
    .d_sel_o                (D_SEL_O),
    .d_stb_o                (D_STB_O),
    .d_we_o                 (D_WE_O),
    .d_cti_o                (D_CTI_O),
    .d_lock_o               (D_LOCK_O),
    .d_bte_o                (D_BTE_O)
    );      
       

lm32_adder adder (
    
    .adder_op_x             (adder_op_x),
    .adder_op_x_n           (adder_op_x_n),
    .operand_0_x            (operand_0_x),
    .operand_1_x            (operand_1_x),
    
    .adder_result_x         (adder_result_x),
    .adder_carry_n_x        (adder_carry_n_x),
    .adder_overflow_x       (adder_overflow_x)
    );


lm32_logic_op logic_op (
    
    .logic_op_x             (logic_op_x),
    .operand_0_x            (operand_0_x),

    .operand_1_x            (operand_1_x),
    
    .logic_result_x         (logic_result_x)
    );
              
  

  
    
                      
                      
                    
                
              
                
                
    
           
    

`line 1622 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
                    
                    
                  
                  
    
                         
    

`line 1637 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
                    
                     
                   
                   
                  

         
                 

 
               
              
              
    
                
                
    
                   
                   
           

            
    

`line 1668 "/tmp/lm32-customizer/tmp.v"

              
  
`line 1670 "/tmp/lm32-customizer/tmp.v"


lm32_interrupt_minimal interrupt_unit (
    
    .clk_i                  (clk_i), 
    .rst_i                  (rst_i),
    
    .interrupt              (interrupt),
    
    .stall_x                (stall_x),
  
         
            

`line 1683 "/tmp/lm32-customizer/tmp.v"

    .exception              (exception_q_w), 
 
`line 1685 "/tmp/lm32-customizer/tmp.v"

    .eret_q_x               (eret_q_x),
  
                   

`line 1689 "/tmp/lm32-customizer/tmp.v"

    .csr                    (csr_x),
    .csr_write_data         (operand_1_x),
    .csr_write_enable       (csr_write_enable_q_x),
    
    .interrupt_exception    (interrupt_exception),
    
    .csr_read_data          (interrupt_csr_read_data_x)
    );
 
`line 1698 "/tmp/lm32-customizer/tmp.v"


  

  
    
                      
                      
    
                   
                
                 
            
    
 
                        
             
           
                    

 
             
       

 
                
    
    
    
 
          
          

 
      
        
                   
           
          
            
               

 
                 
                 

    
                 
            
    

`line 1748 "/tmp/lm32-customizer/tmp.v"


  

 
                
                
    
    
                       
                      
                       
                     
                    
       
         
             
                      
 
      
        
                   

 
                   
                   
                    
                
                        
 
      


    
 
                      

                      
                   
                   
    

`line 1789 "/tmp/lm32-customizer/tmp.v"




  
`line 1793 "/tmp/lm32-customizer/tmp.v"

   
           
            
          
            


             
              
    

   wire [31:0] regfile_data_0, regfile_data_1;
   reg [31:0]  w_result_d;
   reg 	       regfile_raw_0, regfile_raw_0_nxt;
   reg 	       regfile_raw_1, regfile_raw_1_nxt;
   
   
             
          

   always @(reg_write_enable_q_w or write_idx_w or instruction_f)
     begin
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[25:21]))
	  regfile_raw_0_nxt = 1'b1;
	else
	  regfile_raw_0_nxt = 1'b0;
	
	if (reg_write_enable_q_w
	    && (write_idx_w == instruction_f[20:16]))
	  regfile_raw_1_nxt = 1'b1;
	else
	  regfile_raw_1_nxt = 1'b0;
     end
   
   
           
           
       

   always @(regfile_raw_0 or w_result_d or regfile_data_0)
     if (regfile_raw_0)
       reg_data_live_0 = w_result_d;
     else
       reg_data_live_0 = regfile_data_0;
   
   
           
           
       

   always @(regfile_raw_1 or w_result_d or regfile_data_1)
     if (regfile_raw_1)
       reg_data_live_1 = w_result_d;
     else
       reg_data_live_1 = regfile_data_1;
   
   
     

   always @(posedge clk_i  )
     if (rst_i ==  1'b1)
       begin
	  regfile_raw_0 <= 1'b0;
	  regfile_raw_1 <= 1'b0;
	  w_result_d <= 32'b0;
       end
     else
       begin
	  regfile_raw_0 <= regfile_raw_0_nxt;
	  regfile_raw_1 <= regfile_raw_1_nxt;
	  w_result_d <= w_result;
       end
   
   
      

   
   lm32_dp_ram
     #(
       
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_0
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[25:21]),
      
      .rdata_o	(regfile_data_0)
      );

   lm32_dp_ram
     #(
       .addr_depth(1<<5),
       .addr_width(5),
       .data_width(32)
       )
   reg_1
     (
      
      .clk_i	(clk_i),
      .rst_i	(rst_i), 
      .we_i	(reg_write_enable_q_w),
      .wdata_i	(w_result),
      .waddr_i	(write_idx_w),
      .raddr_i	(instruction_f[20:16]),
      
      .rdata_o	(regfile_data_1)
      );
 
`line 1910 "/tmp/lm32-customizer/tmp.v"


  
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      
   
   
     
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
     
      
      
      
      
      
      
      
        
      
       
      
      
      

`line 1978 "/tmp/lm32-customizer/tmp.v"







  
`line 1985 "/tmp/lm32-customizer/tmp.v"


assign reg_data_0 = use_buf ? reg_data_buf_0 : reg_data_live_0;
assign reg_data_1 = use_buf ? reg_data_buf_1 : reg_data_live_1;
 
`line 1989 "/tmp/lm32-customizer/tmp.v"

  
`line 1990 "/tmp/lm32-customizer/tmp.v"

 

   
   

`line 1995 "/tmp/lm32-customizer/tmp.v"



assign raw_x_0 = (write_idx_x == read_idx_0_d) && (write_enable_q_x ==  1'b1);
assign raw_m_0 = (write_idx_m == read_idx_0_d) && (write_enable_q_m ==  1'b1);
assign raw_w_0 = (write_idx_w == read_idx_0_d) && (write_enable_q_w ==  1'b1);
assign raw_x_1 = (write_idx_x == read_idx_1_d) && (write_enable_q_x ==  1'b1);
assign raw_m_1 = (write_idx_m == read_idx_1_d) && (write_enable_q_m ==  1'b1);
assign raw_w_1 = (write_idx_w == read_idx_1_d) && (write_enable_q_w ==  1'b1);


always @(*)
begin
    if (   (   (x_bypass_enable_x ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_x_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_x_1 ==  1'b1))
               )
           )
        || (   (m_bypass_enable_m ==  1'b0)
            && (   ((read_enable_0_d ==  1'b1) && (raw_m_0 ==  1'b1))
                || ((read_enable_1_d ==  1'b1) && (raw_m_1 ==  1'b1))
               )
           )
       )
        interlock =  1'b1;
    else
        interlock =  1'b0;
end


always @(*)
begin
    if (raw_x_0 ==  1'b1)        
        bypass_data_0 = x_result;
    else if (raw_m_0 ==  1'b1)
        bypass_data_0 = m_result;
    else if (raw_w_0 ==  1'b1)
        bypass_data_0 = w_result;
    else
        bypass_data_0 = reg_data_0;
end


always @(*)
begin
    if (raw_x_1 ==  1'b1)
        bypass_data_1 = x_result;
    else if (raw_m_1 ==  1'b1)
        bypass_data_1 = m_result;
    else if (raw_w_1 ==  1'b1)
        bypass_data_1 = w_result;
    else
        bypass_data_1 = reg_data_1;
end

   
          
       
       
     

   assign branch_predict_d = bi_unconditional | bi_conditional;
   assign branch_predict_taken_d = bi_unconditional ? 1'b1 : (bi_conditional ? instruction_d[15] : 1'b0);
   
   
   assign branch_target_d = pc_d + branch_offset_d;

   
   
   
   assign branch_predict_address_d = branch_predict_taken_d ? branch_target_d : pc_f;


always @(*)
begin
    d_result_0 = d_result_sel_0_d[0] ? {pc_f, 2'b00} : bypass_data_0; 
    case (d_result_sel_1_d)
     2'b00:      d_result_1 = { 32{1'b0}};
     2'b01:     d_result_1 = bypass_data_1;
     2'b10: d_result_1 = immediate_d;
    default:                        d_result_1 = { 32{1'bx}};
    endcase
end

      

   
   

`line 2083 "/tmp/lm32-customizer/tmp.v"


  

    
    
         

`line 2090 "/tmp/lm32-customizer/tmp.v"


  
`line 2092 "/tmp/lm32-customizer/tmp.v"


assign shifter_result_x = {operand_0_x[ 32-1] & sign_extend_x, operand_0_x[ 32-1:1]};
 
`line 2095 "/tmp/lm32-customizer/tmp.v"



assign cmp_zero = operand_0_x == operand_1_x;
assign cmp_negative = adder_result_x[ 32-1];
assign cmp_overflow = adder_overflow_x;
assign cmp_carry_n = adder_carry_n_x;
always @(*)
begin
    case (condition_x)
     3'b000:   condition_met_x =  1'b1;
     3'b110:   condition_met_x =  1'b1;
     3'b001:    condition_met_x = cmp_zero;
     3'b111:   condition_met_x = !cmp_zero;
     3'b010:    condition_met_x = !cmp_zero && (cmp_negative == cmp_overflow);
     3'b101:   condition_met_x = cmp_carry_n && !cmp_zero;
     3'b011:   condition_met_x = cmp_negative == cmp_overflow;
     3'b100:  condition_met_x = cmp_carry_n;
    default:              condition_met_x = 1'bx;
    endcase 
end


always @(*)
begin
    x_result =   x_result_sel_add_x ? adder_result_x 
               : x_result_sel_csr_x ? csr_read_data_x
  
                  

`line 2124 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2127 "/tmp/lm32-customizer/tmp.v"

  
`line 2128 "/tmp/lm32-customizer/tmp.v"

               : x_result_sel_shift_x ? shifter_result_x
 
`line 2130 "/tmp/lm32-customizer/tmp.v"

  
                  

`line 2133 "/tmp/lm32-customizer/tmp.v"

               : logic_result_x;
end


always @(*)
begin
    m_result =   m_result_sel_compare_m ? {{ 32-1{1'b0}}, condition_met_m}
  
                  

`line 2143 "/tmp/lm32-customizer/tmp.v"

               : operand_m; 
end


always @(*)
begin
    w_result =    w_result_sel_load_w ? load_data_w
  
                   

`line 2153 "/tmp/lm32-customizer/tmp.v"

                : operand_w;
end

      

          
                                
                                     
                                 
                                 
                              

`line 2165 "/tmp/lm32-customizer/tmp.v"



assign branch_taken_m =      (stall_m ==  1'b0) 
                          && (   (   (branch_m ==  1'b1) 
                                  && (valid_m ==  1'b1)
                                  && (   (   (condition_met_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b0)
					 )
				      || (   (condition_met_m ==  1'b0)
					  && (branch_predict_m ==  1'b1)
					  && (branch_predict_taken_m ==  1'b1)
					 )
				     )
                                 ) 
                              || (exception_m ==  1'b1)
                             );


assign branch_mispredict_taken_m =    (condition_met_m ==  1'b0)
                                   && (branch_predict_m ==  1'b1)
	   			   && (branch_predict_taken_m ==  1'b1);
   

assign branch_flushX_m =    (stall_m ==  1'b0)
                         && (   (   (branch_m ==  1'b1) 
                                 && (valid_m ==  1'b1)
			         && (   (condition_met_m ==  1'b1)
				     || (   (condition_met_m ==  1'b0)
					 && (branch_predict_m ==  1'b1)
					 && (branch_predict_taken_m ==  1'b1)
					)
				    )
			        )
			     || (exception_m ==  1'b1)
			    );


assign kill_f =    (   (valid_d ==  1'b1)
                    && (branch_predict_taken_d ==  1'b1)
		   )
                || (branch_taken_m ==  1'b1) 
      
                   

`line 2209 "/tmp/lm32-customizer/tmp.v"

  
                    

`line 2212 "/tmp/lm32-customizer/tmp.v"

                  
                   

`line 2215 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_d =    (branch_taken_m ==  1'b1) 
      
                   

`line 2220 "/tmp/lm32-customizer/tmp.v"

  
                        

`line 2223 "/tmp/lm32-customizer/tmp.v"
                
                  
                   

`line 2226 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_x =    (branch_flushX_m ==  1'b1) 
                  
                   

`line 2231 "/tmp/lm32-customizer/tmp.v"

                ;
assign kill_m =     1'b0
                  
                   

`line 2236 "/tmp/lm32-customizer/tmp.v"

                ;                
assign kill_w =     1'b0
                  
                   

`line 2241 "/tmp/lm32-customizer/tmp.v"
                
                ;



  
              
				         
				     
				     
				 
 
                                 

                              

`line 2256 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2260 "/tmp/lm32-customizer/tmp.v"


  
        
                                             
                                         
     

`line 2267 "/tmp/lm32-customizer/tmp.v"


  
     

`line 2271 "/tmp/lm32-customizer/tmp.v"


assign system_call_exception = (   (scall_x ==  1'b1)
  
                                   

`line 2276 "/tmp/lm32-customizer/tmp.v"

			       );

  
      
                            
                         

     
 
                               

 
                               
                               

 
                               

 
                                  
 
                                   
                            
 
 				   
				   

                               

                            

         

`line 2309 "/tmp/lm32-customizer/tmp.v"

assign exception_x =           (system_call_exception ==  1'b1)
  
                               
                               

`line 2314 "/tmp/lm32-customizer/tmp.v"

  
                               

`line 2317 "/tmp/lm32-customizer/tmp.v"

  
`line 2318 "/tmp/lm32-customizer/tmp.v"

                            || (   (interrupt_exception ==  1'b1)
  
                                   

`line 2322 "/tmp/lm32-customizer/tmp.v"
                            
  
 				   
				   

`line 2326 "/tmp/lm32-customizer/tmp.v"

                               )
 
`line 2328 "/tmp/lm32-customizer/tmp.v"

                            ;
 
`line 2330 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
  
 
       
          
    
     
 
            
          
    

            
          
    

`line 2349 "/tmp/lm32-customizer/tmp.v"

  
            
          
    
            
          
    

`line 2357 "/tmp/lm32-customizer/tmp.v"

  
            
          
     

`line 2362 "/tmp/lm32-customizer/tmp.v"

  
            
          
    

`line 2367 "/tmp/lm32-customizer/tmp.v"

  
`line 2368 "/tmp/lm32-customizer/tmp.v"

         if (   (interrupt_exception ==  1'b1)
  
                

`line 2372 "/tmp/lm32-customizer/tmp.v"
                            
            )
        eid_x =  3'h6;
    else
 
`line 2376 "/tmp/lm32-customizer/tmp.v"

        eid_x =  3'h7;
end



assign stall_a = (stall_f ==  1'b1);
                
assign stall_f = (stall_d ==  1'b1);
                
assign stall_d =   (stall_x ==  1'b1) 
                || (   (interlock ==  1'b1)
                    && (kill_d ==  1'b0)
                   ) 
		|| (   (   (eret_d ==  1'b1)
			|| (scall_d ==  1'b1)
  
			   

`line 2394 "/tmp/lm32-customizer/tmp.v"

		       )
		    && (   (load_q_x ==  1'b1)
			|| (load_q_m ==  1'b1)
			|| (store_q_x ==  1'b1)
			|| (store_q_m ==  1'b1)
			|| (D_CYC_O ==  1'b1)
		       )
                    && (kill_d ==  1'b0)
		   )
  
		         
			   
		       
		          
			   
			   
			   
			   
		       
                       
		   

`line 2416 "/tmp/lm32-customizer/tmp.v"
                   
                || (   (csr_write_enable_d ==  1'b1)
                    && (load_q_x ==  1'b1)
                   )                      
                ;
                
assign stall_x =    (stall_m ==  1'b1)
  
                       
                        
                     

`line 2427 "/tmp/lm32-customizer/tmp.v"

  
                 
                 
                       
		           
			    
			
		    

`line 2436 "/tmp/lm32-customizer/tmp.v"

                 ;

assign stall_m =    (stall_wb_load ==  1'b1)
  
                    

`line 2442 "/tmp/lm32-customizer/tmp.v"

                 || (   (D_CYC_O ==  1'b1)
                     && (   (store_m ==  1'b1)
		         
          
          

		  
	 
	

          
           
          
       

  
`line 2458 "/tmp/lm32-customizer/tmp.v"

		         || ((store_x ==  1'b1) && (interrupt_exception ==  1'b1))
 
`line 2460 "/tmp/lm32-customizer/tmp.v"

                         || (load_m ==  1'b1)
                         || (load_x ==  1'b1)
                        ) 
                    ) 
 
`line 2465 "/tmp/lm32-customizer/tmp.v"
                 
  
                         

`line 2468 "/tmp/lm32-customizer/tmp.v"
                                    
  
                         
                             

`line 2472 "/tmp/lm32-customizer/tmp.v"

  
`line 2473 "/tmp/lm32-customizer/tmp.v"

                 || (I_CYC_O ==  1'b1)            
 
`line 2475 "/tmp/lm32-customizer/tmp.v"

 
`line 2476 "/tmp/lm32-customizer/tmp.v"
                               
  
                                  
                        
                    

`line 2481 "/tmp/lm32-customizer/tmp.v"

                 ;      


  
         

`line 2487 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2491 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2494 "/tmp/lm32-customizer/tmp.v"

  
         
         

`line 2498 "/tmp/lm32-customizer/tmp.v"

assign q_x = (valid_x ==  1'b1) && (kill_x ==  1'b0);
assign csr_write_enable_q_x = (csr_write_enable_x ==  1'b1) && (q_x ==  1'b1);
assign eret_q_x = (eret_x ==  1'b1) && (q_x ==  1'b1);
  
         

`line 2504 "/tmp/lm32-customizer/tmp.v"

assign load_q_x = (load_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2509 "/tmp/lm32-customizer/tmp.v"

                  ;
assign store_q_x = (store_x ==  1'b1) 
               && (q_x ==  1'b1)
  
                  

`line 2515 "/tmp/lm32-customizer/tmp.v"

                  ;
  
         

`line 2519 "/tmp/lm32-customizer/tmp.v"
                              
assign q_m = (valid_m ==  1'b1) && (kill_m ==  1'b0) && (exception_m ==  1'b0);
assign load_q_m = (load_m ==  1'b1) && (q_m ==  1'b1);
assign store_q_m = (store_m ==  1'b1) && (q_m ==  1'b1);
  
         
                 

`line 2526 "/tmp/lm32-customizer/tmp.v"

assign exception_q_w = ((exception_w ==  1'b1) && (valid_w ==  1'b1));        
 
`line 2528 "/tmp/lm32-customizer/tmp.v"


assign write_enable_q_x = (write_enable_x ==  1'b1) && (valid_x ==  1'b1) && (branch_flushX_m ==  1'b0);
assign write_enable_q_m = (write_enable_m ==  1'b1) && (valid_m ==  1'b1);
assign write_enable_q_w = (write_enable_w ==  1'b1) && (valid_w ==  1'b1);

assign reg_write_enable_q_w = (write_enable_w ==  1'b1) && (kill_w ==  1'b0) && (valid_w ==  1'b1);


assign cfg = {
               6'h02,
              watchpoints[3:0],
              breakpoints[3:0],
              interrupts[5:0],
  
              

`line 2544 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2546 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2549 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2551 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2554 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2556 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2559 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2561 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2564 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2566 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2569 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2571 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2574 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2576 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2579 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2581 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2584 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2586 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2589 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2591 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2594 "/tmp/lm32-customizer/tmp.v"

               1'b0,
 
`line 2596 "/tmp/lm32-customizer/tmp.v"

   
              

`line 2599 "/tmp/lm32-customizer/tmp.v"

               1'b0
 
`line 2601 "/tmp/lm32-customizer/tmp.v"

              };

assign cfg2 = {
		     30'b0,
  
		     

`line 2608 "/tmp/lm32-customizer/tmp.v"

		      1'b0,
 
`line 2610 "/tmp/lm32-customizer/tmp.v"

  
		     

`line 2613 "/tmp/lm32-customizer/tmp.v"

		      1'b0
 
`line 2615 "/tmp/lm32-customizer/tmp.v"

		     };
   

  
         
                    
                    
                    
                    

 
             
                     
		    

		 

`line 2632 "/tmp/lm32-customizer/tmp.v"
 
  
         
                      

 
               
                       
		      

		   

`line 2643 "/tmp/lm32-customizer/tmp.v"
 


assign csr_d = read_idx_0_d[ (3-1):0];


always @(*)
begin
    case (csr_x)
  
`line 2652 "/tmp/lm32-customizer/tmp.v"

     3'h0,
     3'h1,
     3'h2:   csr_read_data_x = interrupt_csr_read_data_x;  
 
`line 2656 "/tmp/lm32-customizer/tmp.v"

  
         

`line 2659 "/tmp/lm32-customizer/tmp.v"

     3'h6:  csr_read_data_x = cfg;
     3'h7:  csr_read_data_x = {eba, 8'h00};
  
        

`line 2664 "/tmp/lm32-customizer/tmp.v"

  
          
        

`line 2668 "/tmp/lm32-customizer/tmp.v"

     3'ha: csr_read_data_x = cfg2;
      
    default:        csr_read_data_x = { 32{1'bx}};
    endcase
end






always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
        eba <= eba_reset[ (32-2)+2-1:8];
    else
    begin
        if ((csr_write_enable_q_x ==  1'b1) && (csr_x ==  3'h7) && (stall_x ==  1'b0))
            eba <= operand_1_x[ (32-2)+2-1:8];
  
               
              

`line 2691 "/tmp/lm32-customizer/tmp.v"

    end
end

  

   

       
          
    
    
                   
              
 
               
              

    


`line 2711 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
            


`line 2722 "/tmp/lm32-customizer/tmp.v"


  

   

       
          
    
    
        
               
              
        
               
              
    


`line 2740 "/tmp/lm32-customizer/tmp.v"

 


  
 
 

           
           
       
          
            
                 
             
          
     
            
 

 

        
          
         
          
     
          
 


`line 2770 "/tmp/lm32-customizer/tmp.v"

  
 

        
          
         
          
     
          
 

`line 2781 "/tmp/lm32-customizer/tmp.v"

 
`line 2782 "/tmp/lm32-customizer/tmp.v"


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        valid_f <=  1'b0;
        valid_d <=  1'b0;
        valid_x <=  1'b0;
        valid_m <=  1'b0;
        valid_w <=  1'b0;
    end
    else
    begin    
        if ((kill_f ==  1'b1) || (stall_a ==  1'b0))
  
                  

`line 2799 "/tmp/lm32-customizer/tmp.v"

            valid_f <=  1'b1;
 
`line 2801 "/tmp/lm32-customizer/tmp.v"
            
        else if (stall_f ==  1'b0)
            valid_f <=  1'b0;            

        if (kill_d ==  1'b1)
            valid_d <=  1'b0;
        else if (stall_f ==  1'b0)
            valid_d <= valid_f & !kill_f;
        else if (stall_d ==  1'b0)
            valid_d <=  1'b0;
       
        if (stall_d ==  1'b0)
            valid_x <= valid_d & !kill_d;
        else if (kill_x ==  1'b1)
            valid_x <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_x <=  1'b0;

        if (kill_m ==  1'b1)
            valid_m <=  1'b0;
        else if (stall_x ==  1'b0)
            valid_m <= valid_x & !kill_x;
        else if (stall_m ==  1'b0)
            valid_m <=  1'b0;

        if (stall_m ==  1'b0)
            valid_w <= valid_m & !kill_m;
        else 
            valid_w <=  1'b0;        
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
  
                 

`line 2840 "/tmp/lm32-customizer/tmp.v"
        
        operand_0_x <= { 32{1'b0}};
        operand_1_x <= { 32{1'b0}};
        store_operand_x <= { 32{1'b0}};
        branch_target_x <= { (32-2){1'b0}};        
        x_result_sel_csr_x <=  1'b0;
  
          

`line 2848 "/tmp/lm32-customizer/tmp.v"

  
`line 2849 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_shift_x <=  1'b0;
 
`line 2851 "/tmp/lm32-customizer/tmp.v"

  
          

`line 2854 "/tmp/lm32-customizer/tmp.v"
    
        x_result_sel_logic_x <=  1'b0;
  
          

`line 2858 "/tmp/lm32-customizer/tmp.v"

        x_result_sel_add_x <=  1'b0;
        m_result_sel_compare_x <=  1'b0;
  
          

`line 2863 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_x <=  1'b0;
  
          

`line 2867 "/tmp/lm32-customizer/tmp.v"

        x_bypass_enable_x <=  1'b0;
        m_bypass_enable_x <=  1'b0;
        write_enable_x <=  1'b0;
        write_idx_x <= { 5{1'b0}};
        csr_x <= { 3{1'b0}};
        load_x <=  1'b0;
        store_x <=  1'b0;
        size_x <= { 2{1'b0}};
        sign_extend_x <=  1'b0;
        adder_op_x <=  1'b0;
        adder_op_x_n <=  1'b0;
        logic_op_x <= 4'h0;
  
          

`line 2882 "/tmp/lm32-customizer/tmp.v"

  
          


`line 2886 "/tmp/lm32-customizer/tmp.v"

        branch_x <=  1'b0;
        branch_predict_x <=  1'b0;
        branch_predict_taken_x <=  1'b0;
        condition_x <=  3'b000;
  
          

`line 2893 "/tmp/lm32-customizer/tmp.v"

        scall_x <=  1'b0;
        eret_x <=  1'b0;
  
          

`line 2898 "/tmp/lm32-customizer/tmp.v"

  
          
          

`line 2902 "/tmp/lm32-customizer/tmp.v"

        csr_write_enable_x <=  1'b0;
        operand_m <= { 32{1'b0}};
        branch_target_m <= { (32-2){1'b0}};
        m_result_sel_compare_m <=  1'b0;
  
          

`line 2909 "/tmp/lm32-customizer/tmp.v"
    
        w_result_sel_load_m <=  1'b0;
  
          

`line 2913 "/tmp/lm32-customizer/tmp.v"

        m_bypass_enable_m <=  1'b0;
        branch_m <=  1'b0;
        branch_predict_m <=  1'b0;
	branch_predict_taken_m <=  1'b0;
        exception_m <=  1'b0;
        load_m <=  1'b0;
        store_m <=  1'b0;
  
          

`line 2923 "/tmp/lm32-customizer/tmp.v"

        write_enable_m <=  1'b0;            
        write_idx_m <= { 5{1'b0}};
        condition_met_m <=  1'b0;
  
          

`line 2929 "/tmp/lm32-customizer/tmp.v"

  
          
                  

`line 2933 "/tmp/lm32-customizer/tmp.v"

        operand_w <= { 32{1'b0}};        
        w_result_sel_load_w <=  1'b0;
  
          

`line 2938 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= { 5{1'b0}};        
        write_enable_w <=  1'b0;
  
          
                  

`line 2944 "/tmp/lm32-customizer/tmp.v"

        exception_w <=  1'b0;
 
`line 2946 "/tmp/lm32-customizer/tmp.v"

  
          

`line 2949 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        
       
        if (stall_x ==  1'b0)
        begin
  
                     

`line 2959 "/tmp/lm32-customizer/tmp.v"
        
            operand_0_x <= d_result_0;
            operand_1_x <= d_result_1;
            store_operand_x <= bypass_data_1;
            branch_target_x <= branch_reg_d ==  1'b1 ? bypass_data_0[ ((32-2)+2-1):2] : branch_target_d;            
            x_result_sel_csr_x <= x_result_sel_csr_d;
  
              

`line 2967 "/tmp/lm32-customizer/tmp.v"

  
`line 2968 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_shift_x <= x_result_sel_shift_d;
 
`line 2970 "/tmp/lm32-customizer/tmp.v"

  
              

`line 2973 "/tmp/lm32-customizer/tmp.v"
    
            x_result_sel_logic_x <= x_result_sel_logic_d;
  
              

`line 2977 "/tmp/lm32-customizer/tmp.v"

            x_result_sel_add_x <= x_result_sel_add_d;
            m_result_sel_compare_x <= m_result_sel_compare_d;
  
              

`line 2982 "/tmp/lm32-customizer/tmp.v"
    
            w_result_sel_load_x <= w_result_sel_load_d;
  
              

`line 2986 "/tmp/lm32-customizer/tmp.v"

            x_bypass_enable_x <= x_bypass_enable_d;
            m_bypass_enable_x <= m_bypass_enable_d;
            load_x <= load_d;
            store_x <= store_d;
            branch_x <= branch_d;
	    branch_predict_x <= branch_predict_d;
	    branch_predict_taken_x <= branch_predict_taken_d;
	    write_idx_x <= write_idx_d;
            csr_x <= csr_d;
            size_x <= size_d;
            sign_extend_x <= sign_extend_d;
            adder_op_x <= adder_op_d;
            adder_op_x_n <= ~adder_op_d;
            logic_op_x <= logic_op_d;
  
              

`line 3003 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3006 "/tmp/lm32-customizer/tmp.v"

            condition_x <= condition_d;
            csr_write_enable_x <= csr_write_enable_d;
  
              

`line 3011 "/tmp/lm32-customizer/tmp.v"

            scall_x <= scall_d;
  
              

`line 3015 "/tmp/lm32-customizer/tmp.v"

            eret_x <= eret_d;
  
               

`line 3019 "/tmp/lm32-customizer/tmp.v"

            write_enable_x <= write_enable_d;
        end
        
        

        if (stall_m ==  1'b0)
        begin
            operand_m <= x_result;
            m_result_sel_compare_m <= m_result_sel_compare_x;
  
              

`line 3031 "/tmp/lm32-customizer/tmp.v"
    
            if (exception_x ==  1'b1)
            begin
                w_result_sel_load_m <=  1'b0;
  
                  

`line 3037 "/tmp/lm32-customizer/tmp.v"

            end
            else
            begin
                w_result_sel_load_m <= w_result_sel_load_x;
  
                  

`line 3044 "/tmp/lm32-customizer/tmp.v"

            end
            m_bypass_enable_m <= m_bypass_enable_x;
  
              

`line 3049 "/tmp/lm32-customizer/tmp.v"

            load_m <= load_x;
            store_m <= store_x;
      
                

`line 3054 "/tmp/lm32-customizer/tmp.v"

            branch_m <= branch_x;
	    branch_predict_m <= branch_predict_x;
	    branch_predict_taken_m <= branch_predict_taken_x;
 
`line 3058 "/tmp/lm32-customizer/tmp.v"

  
	   
	   
	   
	   
	   
                
                  
                
                  
             
                  

`line 3071 "/tmp/lm32-customizer/tmp.v"

            if (exception_x ==  1'b1)
                write_idx_m <=  5'd30;
            else 
                write_idx_m <= write_idx_x;
 
`line 3076 "/tmp/lm32-customizer/tmp.v"

            condition_met_m <= condition_met_x;
  
	      
	        
		     
		        
	           
	     
	           
	   
	       

`line 3088 "/tmp/lm32-customizer/tmp.v"

            branch_target_m <= exception_x ==  1'b1 ? {eba, eid_x, {3{1'b0}}} : branch_target_x;
 
`line 3090 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3093 "/tmp/lm32-customizer/tmp.v"

  
              

`line 3096 "/tmp/lm32-customizer/tmp.v"

            eret_m <= eret_q_x;
  
               

`line 3100 "/tmp/lm32-customizer/tmp.v"

            write_enable_m <= exception_x ==  1'b1 ?  1'b1 : write_enable_x;            
  
              
                      

`line 3105 "/tmp/lm32-customizer/tmp.v"

        end
        
        
        if (stall_m ==  1'b0)
        begin
            if ((exception_x ==  1'b1) && (q_x ==  1'b1) && (stall_x ==  1'b0))
                exception_m <=  1'b1;
            else 
                exception_m <=  1'b0;
  
	           
 
					    

					 

`line 3121 "/tmp/lm32-customizer/tmp.v"

	end
                
        
  
                      

`line 3127 "/tmp/lm32-customizer/tmp.v"

        operand_w <= exception_m ==  1'b1 ? {pc_m, 2'b00} : m_result;
 
`line 3129 "/tmp/lm32-customizer/tmp.v"

        w_result_sel_load_w <= w_result_sel_load_m;
  
          

`line 3133 "/tmp/lm32-customizer/tmp.v"

        write_idx_w <= write_idx_m;
  
          
          
 
           


`line 3141 "/tmp/lm32-customizer/tmp.v"

        write_enable_w <= write_enable_m;
  
          
          

`line 3146 "/tmp/lm32-customizer/tmp.v"

        exception_w <= exception_m;
 
`line 3148 "/tmp/lm32-customizer/tmp.v"

  
              
                   
                   
               
	   
            

`line 3156 "/tmp/lm32-customizer/tmp.v"

    end
end

  
`line 3160 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        use_buf <=  1'b0;
        reg_data_buf_0 <= { 32{1'b0}};
        reg_data_buf_1 <= { 32{1'b0}};
    end
    else
    begin
        if (stall_d ==  1'b0)
            use_buf <=  1'b0;
        else if (use_buf ==  1'b0)
        begin        
            reg_data_buf_0 <= reg_data_live_0;
            reg_data_buf_1 <= reg_data_live_1;
            use_buf <=  1'b1;
        end        
        if (reg_write_enable_q_w ==  1'b1)
        begin
            if (write_idx_w == read_idx_0_d)
                reg_data_buf_0 <= w_result;
            if (write_idx_w == read_idx_1_d)
                reg_data_buf_1 <= w_result;
        end
    end
end
 
`line 3190 "/tmp/lm32-customizer/tmp.v"


  
`line 3192 "/tmp/lm32-customizer/tmp.v"

 

   

        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
        
     
           
            
        


`line 3236 "/tmp/lm32-customizer/tmp.v"


  

   

       
    
          
          
          
          
          
 
          

          
    
    
    
          
        
 
               

           

                
              
              
              
              
        
        
              
        
             
        
            
                 
            
                
                  
                  
            
            
              
            
              
 
              

        
        
        
              
 
              

        
    


`line 3298 "/tmp/lm32-customizer/tmp.v"

      







initial
begin
  
`line 3309 "/tmp/lm32-customizer/tmp.v"

    reg_0.ram[0] = { 32{1'b0}};
    reg_1.ram[0] = { 32{1'b0}};
 
      

`line 3314 "/tmp/lm32-customizer/tmp.v"

end


        
endmodule 









































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_load_store_unit_minimal (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_x,
    stall_m,
    kill_x,
    kill_m,
    exception_m,
    store_operand_x,
    load_store_address_x,
    load_store_address_m,
    load_store_address_w,
    load_x,
    store_x,
    load_q_x,
    store_q_x,
    load_q_m,
    store_q_m,
    sign_extend_x,
    size_x,
  
    

`line 3392 "/tmp/lm32-customizer/tmp.v"

  
    

`line 3395 "/tmp/lm32-customizer/tmp.v"

    
    d_dat_i,
    d_ack_i,
    d_err_i,
    d_rty_i,
    
    
  
    
    
    
    

`line 3408 "/tmp/lm32-customizer/tmp.v"
    
  
    
    
    
    

`line 3414 "/tmp/lm32-customizer/tmp.v"
			     
    load_data_w,
    stall_wb_load,
    
    d_dat_o,
    d_adr_o,
    d_cyc_o,
    d_sel_o,
    d_stb_o,
    d_we_o,
    d_cti_o,
    d_lock_o,
    d_bte_o
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_x;                                          
input stall_m;                                          
input kill_x;                                           
input kill_m;                                           
input exception_m;                                      

input [ (32-1):0] store_operand_x;                 
input [ (32-1):0] load_store_address_x;            
input [ (32-1):0] load_store_address_m;            
input [1:0] load_store_address_w;                       
input load_x;                                           
input store_x;                                          
input load_q_x;                                         
input store_q_x;                                        
input load_q_m;                                         
input store_q_m;                                        
input sign_extend_x;                                    
input [ 1:0] size_x;                          

  
                                            

`line 3473 "/tmp/lm32-customizer/tmp.v"


     
                       

`line 3477 "/tmp/lm32-customizer/tmp.v"


input [ (32-1):0] d_dat_i;                         
input d_ack_i;                                          
input d_err_i;                                          
input d_rty_i;                                          





  
                            
   
                           
   
                             
   
 
   

`line 3497 "/tmp/lm32-customizer/tmp.v"


     
                                
    
                  
    
                                       
   
                             
                               

`line 3508 "/tmp/lm32-customizer/tmp.v"

   
output [ (32-1):0] load_data_w;                    
reg    [ (32-1):0] load_data_w;
output stall_wb_load;                                   
reg    stall_wb_load;

output [ (32-1):0] d_dat_o;                        
reg    [ (32-1):0] d_dat_o;
output [ (32-1):0] d_adr_o;                        
reg    [ (32-1):0] d_adr_o;
output d_cyc_o;                                         
reg    d_cyc_o;
output [ (4-1):0] d_sel_o;                 
reg    [ (4-1):0] d_sel_o;
output d_stb_o;                                         
reg    d_stb_o; 
output d_we_o;                                          
reg    d_we_o;
output [ (3-1):0] d_cti_o;                       
reg    [ (3-1):0] d_cti_o;
output d_lock_o;                                        
reg    d_lock_o;
output [ (2-1):0] d_bte_o;                       
wire   [ (2-1):0] d_bte_o;






reg [ 1:0] size_m;
reg [ 1:0] size_w;
reg sign_extend_m;
reg sign_extend_w;
reg [ (32-1):0] store_data_x;       
reg [ (32-1):0] store_data_m;       
reg [ (4-1):0] byte_enable_x;
reg [ (4-1):0] byte_enable_m;
wire [ (32-1):0] data_m;
reg [ (32-1):0] data_w;

  
                                    
 
                      
              
                                 
                  
                   
                                          
                      

`line 3560 "/tmp/lm32-customizer/tmp.v"

  
                                      
 
                                      
                    
                      
                        
                  

`line 3569 "/tmp/lm32-customizer/tmp.v"

wire wb_select_x;                                       
  
                                      
  

`line 3574 "/tmp/lm32-customizer/tmp.v"

reg wb_select_m;
reg [ (32-1):0] wb_data_m;                         
reg wb_load_complete;                                   





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"






  
   
    
     
       
                    

       
       
       
       
       
       
	
              
              
              
              
              
              

                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	    
	                   
	                   
	                        
	                           
	    
	                         
	                         
	    
   
   
               
              
              
    
      
        
       
	    
	    
       
     
       
	     
	      
	  
	         
                 
	         
	            
	             
		 
	         
	     
	      
	  
	          
		   
	       
	        
       
   
          

`line 3671 "/tmp/lm32-customizer/tmp.v"


  

 
              
                       
             
               
                      
       
    
                      
                            
                    
                    
                    
                  
                  
                     
                    
                 
            
               
                
                     
    
              
            
             
             
                  
                  
    

`line 3705 "/tmp/lm32-customizer/tmp.v"







  
            
                             

`line 3715 "/tmp/lm32-customizer/tmp.v"


  
            
                             

`line 3720 "/tmp/lm32-customizer/tmp.v"

   
  
            
                               
 
                               

 
                               

                     

`line 3732 "/tmp/lm32-customizer/tmp.v"

	  
   assign wb_select_x =     1'b1
  
                          

`line 3737 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3740 "/tmp/lm32-customizer/tmp.v"

  
                         

`line 3743 "/tmp/lm32-customizer/tmp.v"

                     ;


always @(*)
begin
    case (size_x)
     2'b00:  store_data_x = {4{store_operand_x[7:0]}};
     2'b11: store_data_x = {2{store_operand_x[15:0]}};
     2'b10:  store_data_x = store_operand_x;    
    default:          store_data_x = { 32{1'bx}};
    endcase
end


always @(*)
begin
    casez ({size_x, load_store_address_x[1:0]})
    { 2'b00, 2'b11}:  byte_enable_x = 4'b0001;
    { 2'b00, 2'b10}:  byte_enable_x = 4'b0010;
    { 2'b00, 2'b01}:  byte_enable_x = 4'b0100;
    { 2'b00, 2'b00}:  byte_enable_x = 4'b1000;
    { 2'b11, 2'b1?}: byte_enable_x = 4'b0011;
    { 2'b11, 2'b0?}: byte_enable_x = 4'b1100;
    { 2'b10, 2'b??}:  byte_enable_x = 4'b1111;
    default:                   byte_enable_x = 4'bxxxx;
    endcase
end

  

       
       
       
       

`line 3778 "/tmp/lm32-customizer/tmp.v"


  

       
       
       
       

`line 3786 "/tmp/lm32-customizer/tmp.v"


  
   
   
   
   
            
	                     
	                     
   
   
           
	                  
   
   
   
   
   
           
	                            

`line 3807 "/tmp/lm32-customizer/tmp.v"

   
  
  
   
   
         
                    
                       
                      
                        
                         
                        
  
   
         
                    
                       
                      
                      
  
 
   
   
         
                    
                       
                      
                      
  
   
         
                     
                    
  
 

`line 3843 "/tmp/lm32-customizer/tmp.v"

   
   
   
         
                     
                      
                      
                      
  
   
         
                     
                    
  
 
`line 3858 "/tmp/lm32-customizer/tmp.v"

    
   
         
                     
                    
  
`line 3864 "/tmp/lm32-customizer/tmp.v"

   
   assign data_m = wb_data_m;
   
`line 3867 "/tmp/lm32-customizer/tmp.v"

  
`line 3868 "/tmp/lm32-customizer/tmp.v"

 
`line 3869 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    casez ({size_w, load_store_address_w[1:0]})
    { 2'b00, 2'b11}:  load_data_w = {{24{sign_extend_w & data_w[7]}}, data_w[7:0]};
    { 2'b00, 2'b10}:  load_data_w = {{24{sign_extend_w & data_w[15]}}, data_w[15:8]};
    { 2'b00, 2'b01}:  load_data_w = {{24{sign_extend_w & data_w[23]}}, data_w[23:16]};
    { 2'b00, 2'b00}:  load_data_w = {{24{sign_extend_w & data_w[31]}}, data_w[31:24]};
    { 2'b11, 2'b1?}: load_data_w = {{16{sign_extend_w & data_w[15]}}, data_w[15:0]};
    { 2'b11, 2'b0?}: load_data_w = {{16{sign_extend_w & data_w[31]}}, data_w[31:16]};
    { 2'b10, 2'b??}:  load_data_w = data_w;
    default:                   load_data_w = { 32{1'bx}};
    endcase
end


assign d_bte_o =  2'b00;

                  

 
     
    
    
   
   
   
    
    
    
    
   
   
     
     
    
    
    
   
         
     
     
    
    


`line 3916 "/tmp/lm32-customizer/tmp.v"







always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        d_cyc_o <=  1'b0;
        d_stb_o <=  1'b0;
        d_dat_o <= { 32{1'b0}};
        d_adr_o <= { 32{1'b0}};
        d_sel_o <= { 4{ 1'b0}};
        d_we_o <=  1'b0;
        d_cti_o <=  3'b111;
        d_lock_o <=  1'b0;
        wb_data_m <= { 32{1'b0}};
        wb_load_complete <=  1'b0;
        stall_wb_load <=  1'b0;
                  
          

`line 3940 "/tmp/lm32-customizer/tmp.v"
                
    end
    else
    begin
   
        
          

`line 3947 "/tmp/lm32-customizer/tmp.v"
                
        
        if (d_cyc_o ==  1'b1)
        begin
            
            if ((d_ack_i ==  1'b1) || (d_err_i ==  1'b1))
            begin
                  
                     
                
                    
                        
                
                

`line 3961 "/tmp/lm32-customizer/tmp.v"
                
                begin
                    
                    d_cyc_o <=  1'b0;
                    d_stb_o <=  1'b0;
                    d_lock_o <=  1'b0;
                end
      
                  
                
                  

`line 3972 "/tmp/lm32-customizer/tmp.v"

                
                wb_data_m <= d_dat_i;
                
                wb_load_complete <= !d_we_o;
            end
            
            if (d_err_i ==  1'b1)
                $display ("Data bus error. Address: %x", d_adr_o);
            
        end
        else
        begin
                  
               
            
                
                  
                  
                  
                                  
                  
                  
                
            
             

`line 3998 "/tmp/lm32-customizer/tmp.v"
            
                 if (   (store_q_m ==  1'b1)
                     && (stall_m ==  1'b0)
  
                        

`line 4003 "/tmp/lm32-customizer/tmp.v"

  
		        

`line 4006 "/tmp/lm32-customizer/tmp.v"
			
                    )
            begin
                
                d_dat_o <= store_data_m;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b1;
                d_cti_o <=  3'b111;
            end        
            else if (   (load_q_m ==  1'b1) 
                     && (wb_select_m ==  1'b1) 
                     && (wb_load_complete ==  1'b0)
                     
                    )
            begin
                
                stall_wb_load <=  1'b0;
                d_adr_o <= load_store_address_m;
                d_cyc_o <=  1'b1;
                d_sel_o <= byte_enable_m;
                d_stb_o <=  1'b1;
                d_we_o <=  1'b0;
                d_cti_o <=  3'b111;
            end
        end
        
        if (stall_m ==  1'b0)
            wb_load_complete <=  1'b0;
        
        if ((load_q_x ==  1'b1) && (wb_select_x ==  1'b1) && (stall_x ==  1'b0))
            stall_wb_load <=  1'b1;
        
        if ((kill_m ==  1'b1) || (exception_m ==  1'b1))
            stall_wb_load <=  1'b0;
    end
end




always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        sign_extend_m <=  1'b0;
        size_m <= 2'b00;
        byte_enable_m <=  1'b0;
        store_data_m <= { 32{1'b0}};
  
          

`line 4059 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4062 "/tmp/lm32-customizer/tmp.v"

  
          

`line 4065 "/tmp/lm32-customizer/tmp.v"

        wb_select_m <=  1'b0;        
    end
    else
    begin
        if (stall_m ==  1'b0)
        begin
            sign_extend_m <= sign_extend_x;
            size_m <= size_x;
            byte_enable_m <= byte_enable_x;    
            store_data_m <= store_data_x;
  
              

`line 4078 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4081 "/tmp/lm32-customizer/tmp.v"

  
              

`line 4084 "/tmp/lm32-customizer/tmp.v"

            wb_select_m <= wb_select_x;
        end
    end
end


always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        size_w <= 2'b00;
        data_w <= { 32{1'b0}};
        sign_extend_w <=  1'b0;
    end
    else
    begin
        size_w <= size_m;
        data_w <= data_m;
        sign_extend_w <= sign_extend_m;
    end
end








always @(posedge clk_i)
begin
    if (((load_q_m ==  1'b1) || (store_q_m ==  1'b1)) && (stall_m ==  1'b0)) 
    begin
        if ((size_m ===  2'b11) && (load_store_address_m[0] !== 1'b0))
            $display ("Warning: Non-aligned halfword access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
        if ((size_m ===  2'b10) && (load_store_address_m[1:0] !== 2'b00))
            $display ("Warning: Non-aligned word access. Address: 0x%0x Time: %0t.", load_store_address_m, $time);
    end
end



endmodule


































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"



  
`line 4165 "/tmp/lm32-customizer/tmp.v"

  
`line 4166 "/tmp/lm32-customizer/tmp.v"



  
`line 4169 "/tmp/lm32-customizer/tmp.v"

  
`line 4170 "/tmp/lm32-customizer/tmp.v"

  
`line 4171 "/tmp/lm32-customizer/tmp.v"

  
`line 4172 "/tmp/lm32-customizer/tmp.v"

  
`line 4173 "/tmp/lm32-customizer/tmp.v"

  
`line 4174 "/tmp/lm32-customizer/tmp.v"

  
`line 4175 "/tmp/lm32-customizer/tmp.v"

  
`line 4176 "/tmp/lm32-customizer/tmp.v"

  
`line 4177 "/tmp/lm32-customizer/tmp.v"

  
`line 4178 "/tmp/lm32-customizer/tmp.v"

  
`line 4179 "/tmp/lm32-customizer/tmp.v"

  
`line 4180 "/tmp/lm32-customizer/tmp.v"

  
`line 4181 "/tmp/lm32-customizer/tmp.v"

  
`line 4182 "/tmp/lm32-customizer/tmp.v"

  
`line 4183 "/tmp/lm32-customizer/tmp.v"

  
`line 4184 "/tmp/lm32-customizer/tmp.v"

  
`line 4185 "/tmp/lm32-customizer/tmp.v"

  
`line 4186 "/tmp/lm32-customizer/tmp.v"

  
`line 4187 "/tmp/lm32-customizer/tmp.v"

  
`line 4188 "/tmp/lm32-customizer/tmp.v"

  
`line 4189 "/tmp/lm32-customizer/tmp.v"

  
`line 4190 "/tmp/lm32-customizer/tmp.v"

  
`line 4191 "/tmp/lm32-customizer/tmp.v"

  
`line 4192 "/tmp/lm32-customizer/tmp.v"

  
`line 4193 "/tmp/lm32-customizer/tmp.v"

  
`line 4194 "/tmp/lm32-customizer/tmp.v"

  
`line 4195 "/tmp/lm32-customizer/tmp.v"

  
`line 4196 "/tmp/lm32-customizer/tmp.v"

  
`line 4197 "/tmp/lm32-customizer/tmp.v"

  
`line 4198 "/tmp/lm32-customizer/tmp.v"

  
`line 4199 "/tmp/lm32-customizer/tmp.v"

  
`line 4200 "/tmp/lm32-customizer/tmp.v"

  
`line 4201 "/tmp/lm32-customizer/tmp.v"

  
`line 4202 "/tmp/lm32-customizer/tmp.v"

  
`line 4203 "/tmp/lm32-customizer/tmp.v"

  
`line 4204 "/tmp/lm32-customizer/tmp.v"

  
`line 4205 "/tmp/lm32-customizer/tmp.v"

  
`line 4206 "/tmp/lm32-customizer/tmp.v"

  
`line 4207 "/tmp/lm32-customizer/tmp.v"

  
`line 4208 "/tmp/lm32-customizer/tmp.v"

  
`line 4209 "/tmp/lm32-customizer/tmp.v"

  
`line 4210 "/tmp/lm32-customizer/tmp.v"

  
`line 4211 "/tmp/lm32-customizer/tmp.v"

  
`line 4212 "/tmp/lm32-customizer/tmp.v"

  
`line 4213 "/tmp/lm32-customizer/tmp.v"






module lm32_decoder_minimal (
    
    instruction,
    
    d_result_sel_0,
    d_result_sel_1,        
    x_result_sel_csr,
  
    

`line 4228 "/tmp/lm32-customizer/tmp.v"
    
  
`line 4229 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_shift,
 
`line 4231 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4234 "/tmp/lm32-customizer/tmp.v"
    
    x_result_sel_logic,
  
    

`line 4238 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add,
    m_result_sel_compare,
  
      

`line 4243 "/tmp/lm32-customizer/tmp.v"
    
    w_result_sel_load,
  
    

`line 4247 "/tmp/lm32-customizer/tmp.v"

    x_bypass_enable,
    m_bypass_enable,
    read_enable_0,
    read_idx_0,
    read_enable_1,
    read_idx_1,
    write_enable,
    write_idx,
    immediate,
    branch_offset,
    load,
    store,
    size,
    sign_extend,
    adder_op,
    logic_op,
  
    

`line 4266 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4270 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4273 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 4277 "/tmp/lm32-customizer/tmp.v"

    branch,
    branch_reg,
    condition,
    bi_conditional,
    bi_unconditional,
  
    

`line 4285 "/tmp/lm32-customizer/tmp.v"

    scall,
    eret,
  
    

`line 4290 "/tmp/lm32-customizer/tmp.v"

  
    

`line 4293 "/tmp/lm32-customizer/tmp.v"

    csr_write_enable
    );





input [ (32-1):0] instruction;       





output [ 0:0] d_result_sel_0;
reg    [ 0:0] d_result_sel_0;
output [ 1:0] d_result_sel_1;
reg    [ 1:0] d_result_sel_1;
output x_result_sel_csr;
reg    x_result_sel_csr;
  
 
    

`line 4316 "/tmp/lm32-customizer/tmp.v"

  
`line 4317 "/tmp/lm32-customizer/tmp.v"
    
output x_result_sel_shift;
reg    x_result_sel_shift;
 
`line 4320 "/tmp/lm32-customizer/tmp.v"

  
 
    

`line 4324 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_logic;
reg    x_result_sel_logic;
  
 
    

`line 4330 "/tmp/lm32-customizer/tmp.v"

output x_result_sel_add;
reg    x_result_sel_add;
output m_result_sel_compare;
reg    m_result_sel_compare;
  
 
    

`line 4338 "/tmp/lm32-customizer/tmp.v"

output w_result_sel_load;
reg    w_result_sel_load;
  
 
    

`line 4344 "/tmp/lm32-customizer/tmp.v"

output x_bypass_enable;
wire   x_bypass_enable;
output m_bypass_enable;
wire   m_bypass_enable;
output read_enable_0;
wire   read_enable_0;
output [ (5-1):0] read_idx_0;
wire   [ (5-1):0] read_idx_0;
output read_enable_1;
wire   read_enable_1;
output [ (5-1):0] read_idx_1;
wire   [ (5-1):0] read_idx_1;
output write_enable;
wire   write_enable;
output [ (5-1):0] write_idx;
wire   [ (5-1):0] write_idx;
output [ (32-1):0] immediate;
wire   [ (32-1):0] immediate;
output [ ((32-2)+2-1):2] branch_offset;
wire   [ ((32-2)+2-1):2] branch_offset;
output load;
wire   load;
output store;
wire   store;
output [ 1:0] size;
wire   [ 1:0] size;
output sign_extend;
wire   sign_extend;
output adder_op;
wire   adder_op;
output [ 3:0] logic_op;
wire   [ 3:0] logic_op;
  
 
   

`line 4380 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4386 "/tmp/lm32-customizer/tmp.v"

  
 
   

`line 4390 "/tmp/lm32-customizer/tmp.v"

  
 
   
 
   

`line 4396 "/tmp/lm32-customizer/tmp.v"

output branch;
wire   branch;
output branch_reg;
wire   branch_reg;
output [ (3-1):0] condition;
wire   [ (3-1):0] condition;
output bi_conditional;
wire bi_conditional;
output bi_unconditional;
wire bi_unconditional;
  
 
   

`line 4410 "/tmp/lm32-customizer/tmp.v"

output scall;
wire   scall;
output eret;
wire   eret;
  
 
   

`line 4418 "/tmp/lm32-customizer/tmp.v"

  
  
    

`line 4422 "/tmp/lm32-customizer/tmp.v"

output csr_write_enable;
wire   csr_write_enable;





wire [ (32-1):0] extended_immediate;       
wire [ (32-1):0] high_immediate;           
wire [ (32-1):0] call_immediate;           
wire [ (32-1):0] branch_immediate;         
wire sign_extend_immediate;                     
wire select_high_immediate;                     
wire select_call_immediate;                     





  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







assign op_add    = instruction[ 30:26] ==  5'b01101;
assign op_and    = instruction[ 30:26] ==  5'b01000;
assign op_andhi  = instruction[ 31:26] ==  6'b011000;
assign op_b      = instruction[ 31:26] ==  6'b110000;
assign op_bi     = instruction[ 31:26] ==  6'b111000;
assign op_be     = instruction[ 31:26] ==  6'b010001;
assign op_bg     = instruction[ 31:26] ==  6'b010010;
assign op_bge    = instruction[ 31:26] ==  6'b010011;
assign op_bgeu   = instruction[ 31:26] ==  6'b010100;
assign op_bgu    = instruction[ 31:26] ==  6'b010101;
assign op_bne    = instruction[ 31:26] ==  6'b010111;
assign op_call   = instruction[ 31:26] ==  6'b110110;
assign op_calli  = instruction[ 31:26] ==  6'b111110;
assign op_cmpe   = instruction[ 30:26] ==  5'b11001;
assign op_cmpg   = instruction[ 30:26] ==  5'b11010;
assign op_cmpge  = instruction[ 30:26] ==  5'b11011;
assign op_cmpgeu = instruction[ 30:26] ==  5'b11100;
assign op_cmpgu  = instruction[ 30:26] ==  5'b11101;
assign op_cmpne  = instruction[ 30:26] ==  5'b11111;
  
       

`line 4470 "/tmp/lm32-customizer/tmp.v"

assign op_lb     = instruction[ 31:26] ==  6'b000100;
assign op_lbu    = instruction[ 31:26] ==  6'b010000;
assign op_lh     = instruction[ 31:26] ==  6'b000111;
assign op_lhu    = instruction[ 31:26] ==  6'b001011;
assign op_lw     = instruction[ 31:26] ==  6'b001010;
  
       

`line 4478 "/tmp/lm32-customizer/tmp.v"

  
        

`line 4481 "/tmp/lm32-customizer/tmp.v"

assign op_nor    = instruction[ 30:26] ==  5'b00001;
assign op_or     = instruction[ 30:26] ==  5'b01110;
assign op_orhi   = instruction[ 31:26] ==  6'b011110;
assign op_raise  = instruction[ 31:26] ==  6'b101011;
assign op_rcsr   = instruction[ 31:26] ==  6'b100100;
assign op_sb     = instruction[ 31:26] ==  6'b001100;
  
      
      

`line 4491 "/tmp/lm32-customizer/tmp.v"

assign op_sh     = instruction[ 31:26] ==  6'b000011;
  
               

`line 4495 "/tmp/lm32-customizer/tmp.v"

assign op_sr     = instruction[ 30:26] ==  5'b00101;
assign op_sru    = instruction[ 30:26] ==  5'b00000;
assign op_sub    = instruction[ 31:26] ==  6'b110010;
assign op_sw     = instruction[ 31:26] ==  6'b010110;
assign op_user   = instruction[ 31:26] ==  6'b110011;
assign op_wcsr   = instruction[ 31:26] ==  6'b110100;
assign op_xnor   = instruction[ 30:26] ==  5'b01001;
assign op_xor    = instruction[ 30:26] ==  5'b00110;


assign arith = op_add | op_sub;
assign logical = op_and | op_andhi | op_nor | op_or | op_orhi | op_xor | op_xnor;
assign cmp = op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne;
assign bi_conditional = op_be | op_bg | op_bge | op_bgeu  | op_bgu | op_bne;
assign bi_unconditional = op_bi;
assign bra = op_b | bi_unconditional | bi_conditional;
assign call = op_call | op_calli;
  
       

`line 4515 "/tmp/lm32-customizer/tmp.v"

  
`line 4516 "/tmp/lm32-customizer/tmp.v"

assign shift = op_sr | op_sru;
 
`line 4518 "/tmp/lm32-customizer/tmp.v"

  
   
     

`line 4522 "/tmp/lm32-customizer/tmp.v"

  
     

`line 4525 "/tmp/lm32-customizer/tmp.v"

  
   

`line 4528 "/tmp/lm32-customizer/tmp.v"

  
    
   

`line 4532 "/tmp/lm32-customizer/tmp.v"

assign load = op_lb | op_lbu | op_lh | op_lhu | op_lw;
assign store = op_sb | op_sh | op_sw;


always @(*)
begin
    
    if (call) 
        d_result_sel_0 =  1'b1;
    else 
        d_result_sel_0 =  1'b0;
    if (call) 
        d_result_sel_1 =  2'b00;         
    else if ((instruction[31] == 1'b0) && !bra) 
        d_result_sel_1 =  2'b10;
    else
        d_result_sel_1 =  2'b01; 
    
    x_result_sel_csr =  1'b0;
  
      

`line 4554 "/tmp/lm32-customizer/tmp.v"

  
`line 4555 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_shift =  1'b0;
 
`line 4557 "/tmp/lm32-customizer/tmp.v"

  
      

`line 4560 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_logic =  1'b0;
          
      

`line 4564 "/tmp/lm32-customizer/tmp.v"

    x_result_sel_add =  1'b0;
    if (op_rcsr)
        x_result_sel_csr =  1'b1;
      
 
         
          

 
        
                  

 
      
                      


`line 4581 "/tmp/lm32-customizer/tmp.v"

  
`line 4582 "/tmp/lm32-customizer/tmp.v"

    else if (shift)
        x_result_sel_shift =  1'b1;        
 
`line 4585 "/tmp/lm32-customizer/tmp.v"

  
      
          

`line 4589 "/tmp/lm32-customizer/tmp.v"
        
    else if (logical) 
        x_result_sel_logic =  1'b1;
          
      
          

`line 4595 "/tmp/lm32-customizer/tmp.v"

    else 
        x_result_sel_add =  1'b1;        
    
    

    m_result_sel_compare = cmp;
  
      

`line 4604 "/tmp/lm32-customizer/tmp.v"


    
    w_result_sel_load = load;
  
       

`line 4610 "/tmp/lm32-customizer/tmp.v"

end


assign x_bypass_enable =  arith 
                        | logical
  
                         
                         

`line 4619 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4622 "/tmp/lm32-customizer/tmp.v"

  
                         
                         

`line 4626 "/tmp/lm32-customizer/tmp.v"

  
`line 4627 "/tmp/lm32-customizer/tmp.v"

                        | shift
 
`line 4629 "/tmp/lm32-customizer/tmp.v"
                  
  
                          

`line 4632 "/tmp/lm32-customizer/tmp.v"
                        
  
                         

`line 4635 "/tmp/lm32-customizer/tmp.v"

                        | op_rcsr
                        ;

assign m_bypass_enable = x_bypass_enable 
  
                         

`line 4642 "/tmp/lm32-customizer/tmp.v"

                        | cmp
                        ;

assign read_enable_0 = ~(op_bi | op_calli);
assign read_idx_0 = instruction[25:21];

assign read_enable_1 = ~(op_bi | op_calli | load);
assign read_idx_1 = instruction[20:16];

assign write_enable = ~(bra | op_raise | store | op_wcsr);
assign write_idx = call
                    ? 5'd29
                    : instruction[31] == 1'b0 
                        ? instruction[20:16] 
                        : instruction[15:11];
                        

assign size = instruction[27:26];

assign sign_extend = instruction[28];                      

assign adder_op = op_sub | op_cmpe | op_cmpg | op_cmpge | op_cmpgeu | op_cmpgu | op_cmpne | bra;

assign logic_op = instruction[29:26];
  

   

`line 4670 "/tmp/lm32-customizer/tmp.v"


assign branch = bra | call;
assign branch_reg = op_call | op_b;
assign condition = instruction[28:26];      
  
     

`line 4677 "/tmp/lm32-customizer/tmp.v"

assign scall = op_raise & instruction[2];
assign eret = op_b & (instruction[25:21] == 5'd30);
  
       

`line 4682 "/tmp/lm32-customizer/tmp.v"

  

   

`line 4686 "/tmp/lm32-customizer/tmp.v"


assign csr_write_enable = op_wcsr;



assign sign_extend_immediate = ~(op_and | op_cmpgeu | op_cmpgu | op_nor | op_or | op_xnor | op_xor);
assign select_high_immediate = op_andhi | op_orhi;
assign select_call_immediate = instruction[31];

assign high_immediate = {instruction[15:0], 16'h0000};
assign extended_immediate = {{16{sign_extend_immediate & instruction[15]}}, instruction[15:0]};
assign call_immediate = {{6{instruction[25]}}, instruction[25:0]};
assign branch_immediate = {{16{instruction[15]}}, instruction[15:0]};

assign immediate = select_high_immediate ==  1'b1 
                        ? high_immediate 
                        : extended_immediate;
   
assign branch_offset = select_call_immediate ==  1'b1   
                        ? call_immediate
                        : branch_immediate;
    
endmodule 



































					  
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

           
              
              
              

           
             
           
             

                
                  
              
            

                 
          
               
               
              





   
    
    
        
    
    
    
    
    
    
    
    
 
    

    
    
    
    
    
    
    
    
    
    





                               
                                      
                             
                                
                                       

   
   
   
   
   
   
   
   
   





                                         
                                         

                                       
                                       

                                       
                        
   
                       
                       
                                 

                                  
            

                                        
 
                                      

   




                                
   
                              
    
                               
   
                 
                    
                                    
    
                  
    





 
  
  
  
  
  
 

  
  
  
  
  

  
 
 
 

  
  
 
  

 





 





   
                 
	  
	   
	    
	     
	       
	                        
	                     

 
	    
	     
	      
	                         
	                        
	                            
	                     
	                      
	                    
	                     
	                     
	                           
	      
	                        
	      
	   
	    
	     
	       
	                        
	                     

	        
	    
	     
	      
	                         
	                        
	                            
	                     
	                      
	                    
	                     
	                       
	                       
	      
	                         
	      
	   
	








               
      
       
    




       
      
       
    
        
	   
           
    



 
       
    
    
   

    
   


   
    
                                 
                                 


 
                                   
     
    
   



     



        
           
     
    
    
      
         
         
    
                     


     
   


   
   
   

               
     
     
                      






        
            
   

       
           
    
            
           
               
    

    



   

       
          
    
          



   

       
    
          
          
          
          
    
     
    
         

        
        
                    
               
                  
                
        

        
        
                    
               
 
	       
                  
	      

		  
	   
                
        
        
        
        
                    
               
                  
               
            
                  
                  
            
                
            
                  
                  
            
        

        
        
                    
               
            
                   
                
                      
                      
                
            
        

                
    


 
       
    

   

       
          
     
    
         
        
        
        
                    
               
                  
                
                  
        

        
        
                    
               
                    
        

                
    

    

   



`line 5169 "/tmp/lm32-customizer/tmp.v"































								 
  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

           
              
              
              

           
             
           
             

                
                  
              
            

                 
               
               
              





   
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    





                               
                                      
                             
                                
                                       

   
   
   
   
   
   
   
   
   





                                             
                                             

                                           
                                           
                                           

                         
                         
                                          
                                         
                        
          

                                      
                       

                                            





                                    
   
                                  
    
                                   
    
                   
     
                                        
    
                        
    





                                   
                                  
                     
                     
        
  
                       
                       
                                               

          
         
          
         
                 
                     

                           
                                           
                                              
                                             

                                        
                
             
                                        
                   

  





 





   
                     
	  
	   
              
               
		 
		  
		    
		     
		     

		      
		    
		     
		      
		      
		      
		      
		      
		      
		      
		      
		          
		     
		      
		         
             
           
             
		               
		    
		      
		       
			 
			  
			  

			   
			 
			  
			   
			   
			   
			   
			   
			   
			   
			       
			       
			  
			   
			  
		  
             
	   
	   
	    
	     
	       
	        
	        

	         
	       
		
		 
		 
		 
		 
		 
		 
		 
		 
		 
		
		  
		
	
      
   







               
      
       
    




           
	   
   
    
        
	   
        
    



       
    

 

       
          
    
    
              
              
              
              
    

    
    
    

 

       
          
    
          

    



 
        
      
                              
                             
    
      
                             
                             

   

     
                             
                             
   


 
                                   
     
    
   



     
       


         



        
           
             
         
     
     
      
                 
                 
             
             
    



             
   


   
   
   

           
     
                      






        
            
   

       
           
    
            
           
               
    

     
   


   

       
          
     
          



   

       
    
          
          
          
          
          
    
     
    
         

        
        
        
               
                  
                
        
        
        
        
        
               
                  
               
            
                  
                  
                  
            
                
                  
        

        
        
        
              
               
            
                   
                
                      
                      
                
            
        
        
                
    



       
    

   

       
          
     
    
         
        
        
        
        
               
                  
        

        
        
        
               
                    
        
        
                
    

    





`line 5675 "/tmp/lm32-customizer/tmp.v"

































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  


                  
                 
         
     
     
              





  
    
     
    
    
    
    
    
    
    
    
 
    
    
    

 
    
    
    
    
    
 
    


    
 
    

    
    
    
    
    




                         
                         





                                     
                                     

                        
                                    
                                   
      
                        
            
                      
 
                     
       
                   

 
                                  
                                  
                                   
                               
                                       
 
                     







 
                                    
    

                                    
    
                                 
           
                                 
   





                                        



         
                       
                

     
         
                

                     
       
                   

 

             







 







               
      
         
    

 
 
        
       
    
     

        
   
    
   

    
               

 
               
      
             
                   


        
                   
    
   

                
                 

         
         
         

   
   
   








               
      
   

       
    
          
          
    
    
    
                 
        
              
              
        
    
    
    




               
      
   

       
    
          
          
    
    
    
           
        
               
                  
                 
                  
        
      

    



   

       
          
    
    
               
              
    
    

 

   

       
    
          
          
    
    
    
               
        
              
                
                  
             
                  
        
         
        
        
            
                     
                       
                    
                   
               
                   
        
        
        
            
                   
                  
        
        
        
            
 
               
                  
             

                            
            
                  
                  
            
        
        
        
            
 
               
                  
             

                  
        
        
    






`line 6024 "/tmp/lm32-customizer/tmp.v"















































  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_instruction_unit_minimal (
    
    clk_i,
    rst_i,
    
    stall_a,
    stall_f,
    stall_d,
    stall_x,
    stall_m,
    valid_f,
    valid_d,
    kill_f,
    branch_predict_taken_d,
    branch_predict_address_d,
      
    
    

`line 6095 "/tmp/lm32-customizer/tmp.v"

    exception_m,
    branch_taken_m,
    branch_mispredict_taken_m,
    branch_target_m,
  
    

`line 6102 "/tmp/lm32-customizer/tmp.v"

  
    
    
    

`line 6107 "/tmp/lm32-customizer/tmp.v"
        
  
    
    
    

`line 6112 "/tmp/lm32-customizer/tmp.v"

  
`line 6113 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_i,
    i_ack_i,
    i_err_i,
    i_rty_i,
 
`line 6119 "/tmp/lm32-customizer/tmp.v"

  
    
    
    
    

`line 6125 "/tmp/lm32-customizer/tmp.v"

    
    
    pc_f,
    pc_d,
    pc_x,
    pc_m,
    pc_w,
  
    
    
    
    

`line 6138 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6141 "/tmp/lm32-customizer/tmp.v"

  
`line 6142 "/tmp/lm32-customizer/tmp.v"

    
    i_dat_o,
    i_adr_o,
    i_cyc_o,
    i_sel_o,
    i_stb_o,
    i_we_o,
    i_cti_o,
    i_lock_o,
    i_bte_o,
 
`line 6153 "/tmp/lm32-customizer/tmp.v"

  
    
    

`line 6157 "/tmp/lm32-customizer/tmp.v"

  
    

`line 6160 "/tmp/lm32-customizer/tmp.v"

  
`line 6161 "/tmp/lm32-customizer/tmp.v"

    instruction_f,
 
`line 6163 "/tmp/lm32-customizer/tmp.v"
    
    instruction_d
    );





parameter associativity = 1;                            
parameter sets = 512;                                   
parameter bytes_per_line = 16;                          
parameter base_address = 0;                             
parameter limit = 0;                                    


localparam addr_offset_width = bytes_per_line == 4 ? 1 : clogb2(bytes_per_line)-1-2;
localparam addr_offset_lsb = 2;
localparam addr_offset_msb = (addr_offset_lsb+addr_offset_width-1);





input clk_i;                                            
input rst_i;                                            

input stall_a;                                          
input stall_f;                                          
input stall_d;                                          
input stall_x;                                          
input stall_m;                                          
input valid_f;                                          
input valid_d;                                          
input kill_f;                                           

input branch_predict_taken_d;                           
input [ ((32-2)+2-1):2] branch_predict_address_d;          
   
      
                                    
                     

`line 6204 "/tmp/lm32-customizer/tmp.v"

input exception_m;
input branch_taken_m;                                   
input branch_mispredict_taken_m;                        
input [ ((32-2)+2-1):2] branch_target_m;                   

  
                                            

`line 6212 "/tmp/lm32-customizer/tmp.v"

  
                            
                             
 

`line 6217 "/tmp/lm32-customizer/tmp.v"
        

  
                 
                   
                                        

`line 6223 "/tmp/lm32-customizer/tmp.v"


  
`line 6225 "/tmp/lm32-customizer/tmp.v"

input [ (32-1):0] i_dat_i;                         
input i_ack_i;                                          
input i_err_i;                                          
input i_rty_i;                                          
 
`line 6230 "/tmp/lm32-customizer/tmp.v"


  
                                  
                                 
                   
                      

`line 6237 "/tmp/lm32-customizer/tmp.v"





        
output [ ((32-2)+2-1):2] pc_f;                             
reg    [ ((32-2)+2-1):2] pc_f;
output [ ((32-2)+2-1):2] pc_d;                             
reg    [ ((32-2)+2-1):2] pc_d;
output [ ((32-2)+2-1):2] pc_x;                             
reg    [ ((32-2)+2-1):2] pc_x;
output [ ((32-2)+2-1):2] pc_m;                             
reg    [ ((32-2)+2-1):2] pc_m;
output [ ((32-2)+2-1):2] pc_w;                             
reg    [ ((32-2)+2-1):2] pc_w;

  
                             
   
                           
   
                            
   
                                 
   

`line 6263 "/tmp/lm32-customizer/tmp.v"


  
                      
                          

`line 6268 "/tmp/lm32-customizer/tmp.v"
   

  
`line 6270 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_dat_o;                        
  
     

`line 6274 "/tmp/lm32-customizer/tmp.v"

wire   [ (32-1):0] i_dat_o;
 
`line 6276 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] i_adr_o;                        
reg    [ (32-1):0] i_adr_o;
output i_cyc_o;                                         
reg    i_cyc_o; 
output [ (4-1):0] i_sel_o;                 
  
     

`line 6284 "/tmp/lm32-customizer/tmp.v"

wire   [ (4-1):0] i_sel_o;
 
`line 6286 "/tmp/lm32-customizer/tmp.v"

output i_stb_o;                                         
reg    i_stb_o;
output i_we_o;                                          
  
    

`line 6292 "/tmp/lm32-customizer/tmp.v"

wire   i_we_o;
 
`line 6294 "/tmp/lm32-customizer/tmp.v"

output [ (3-1):0] i_cti_o;                       
reg    [ (3-1):0] i_cti_o;
output i_lock_o;                                        
reg    i_lock_o;
output [ (2-1):0] i_bte_o;                       
wire   [ (2-1):0] i_bte_o;
 
`line 6301 "/tmp/lm32-customizer/tmp.v"


  
                   
     
                             
   

`line 6308 "/tmp/lm32-customizer/tmp.v"


  
                                      
    

`line 6313 "/tmp/lm32-customizer/tmp.v"

  
`line 6314 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_f;           
wire   [ (32-1):0] instruction_f;
 
`line 6317 "/tmp/lm32-customizer/tmp.v"

output [ (32-1):0] instruction_d;           
reg    [ (32-1):0] instruction_d;





reg [ ((32-2)+2-1):2] pc_a;                                

  
                       

`line 6329 "/tmp/lm32-customizer/tmp.v"


  
                               
                
                                 
           
               
                  
                   
                                          
                        

`line 6341 "/tmp/lm32-customizer/tmp.v"

  
`line 6342 "/tmp/lm32-customizer/tmp.v"

reg [ (32-1):0] wb_data_f;                  
 
`line 6344 "/tmp/lm32-customizer/tmp.v"

 
`line 6345 "/tmp/lm32-customizer/tmp.v"

  
                                      
                                       
                 

`line 6350 "/tmp/lm32-customizer/tmp.v"

  
`line 6351 "/tmp/lm32-customizer/tmp.v"

 
               

`line 6354 "/tmp/lm32-customizer/tmp.v"

  
                                         

`line 6357 "/tmp/lm32-customizer/tmp.v"


  
                                         

`line 6361 "/tmp/lm32-customizer/tmp.v"






  
`line 1 "src/lm32_functions.v"

`line 1 "src/lm32_functions.v"



























					  
function integer clogb2;
input [31:0] value;
begin
   for (clogb2 = 0; value > 0; clogb2 = clogb2 + 1)
        value = value >> 1;
end
endfunction 

function integer clogb2_v1;
input [31:0] value;
reg   [31:0] i;
reg   [31:0] temp;
begin
   temp = 0;
   i    = 0;
   for (i = 0; temp < value; i = i + 1)  
	temp = 1<<i;
   clogb2_v1 = i-1;
end
endfunction


`line 50 "/tmp/lm32-customizer/tmp.v"







    
    
     
       
                    
	 
       
       
       
       
       
       
	 
              
              
              
              
              
              
	 
                 
                 
                       
                 
                 
          
                   
        
        
	    
	                     
	                     
	                     
	                     
	                    
	                    
	                   
	                   
	                   
	                     
	                        
	                         
	    
	                         
	                         
	    

`line 6420 "/tmp/lm32-customizer/tmp.v"
    
 
  

 
              
                       
             
               
                      
       
    
                      
                            
                    
                    
     
                    
                  
                  
              
               
                
                     
    
              
            
             
             
                  
                       
    

`line 6452 "/tmp/lm32-customizer/tmp.v"






  

        
                                 
 
                                 
                         
  
                                 
       
                              

`line 6469 "/tmp/lm32-customizer/tmp.v"



always @(*)
begin
    
  
       
          
     

`line 6479 "/tmp/lm32-customizer/tmp.v"
    
      if (branch_taken_m ==  1'b1)
	if ((branch_mispredict_taken_m ==  1'b1) && (exception_m ==  1'b0))
	  pc_a = pc_x;
	else
          pc_a = branch_target_m;
      
          
          

`line 6488 "/tmp/lm32-customizer/tmp.v"

      else
	if ( (valid_d ==  1'b1) && (branch_predict_taken_d ==  1'b1) )
	  pc_a = branch_predict_address_d;
	else
  
             
              
	   

`line 6497 "/tmp/lm32-customizer/tmp.v"
        
            pc_a = pc_f + 1'b1;
end


  
           

`line 6504 "/tmp/lm32-customizer/tmp.v"

                     

  
 
         

   


`line 6513 "/tmp/lm32-customizer/tmp.v"

  
 
         

   


`line 6520 "/tmp/lm32-customizer/tmp.v"

assign instruction_f = wb_data_f;
 
`line 6522 "/tmp/lm32-customizer/tmp.v"

 
`line 6523 "/tmp/lm32-customizer/tmp.v"



  
`line 6526 "/tmp/lm32-customizer/tmp.v"

  

`line 6528 "/tmp/lm32-customizer/tmp.v"

assign i_dat_o = 32'd0;
assign i_we_o =  1'b0;
assign i_sel_o = 4'b1111;
 
`line 6532 "/tmp/lm32-customizer/tmp.v"

assign i_bte_o =  2'b00;
 
`line 6534 "/tmp/lm32-customizer/tmp.v"


  


     
    
    
   
   
   
   
    
    
    
   
   
     
    
    
    
    
   
         
     
    
    
    


`line 6563 "/tmp/lm32-customizer/tmp.v"

                     





always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        pc_f <= ( 32'h00000000-4)/4;
        pc_d <= { (32-2){1'b0}};
        pc_x <= { (32-2){1'b0}};
        pc_m <= { (32-2){1'b0}};
        pc_w <= { (32-2){1'b0}};
    end
    else
    begin
        if (stall_f ==  1'b0)
            pc_f <= pc_a;
        if (stall_d ==  1'b0)
            pc_d <= pc_f;
        if (stall_x ==  1'b0)
            pc_x <= pc_d;
        if (stall_m ==  1'b0)
            pc_m <= pc_x;
        pc_w <= pc_m;
    end
end

  

   

       
          
    
    
 
         
            
               
                  
                    
                  

               
                  


         
               
                  


    


`line 6621 "/tmp/lm32-customizer/tmp.v"



  
   

       
          
    
    
           
              
    


`line 6635 "/tmp/lm32-customizer/tmp.v"


  
                 
 

     
       
       
       
       
     


`line 6648 "/tmp/lm32-customizer/tmp.v"


  
`line 6650 "/tmp/lm32-customizer/tmp.v"


                  
   

       
    
          
          
          
          
          
          
          
 
          

 
          
          
          

    
    
       
          
        
           
        
            
                   
            
 
                   
                
                      
                             
                        
                          
                
                

                
                       
                    
                        
                          
                          
                          
                    
                    
                        
                      
                    
                      
                      
                
            
 
               
            
                  
                  
            

        
        
        
                   
            
                
      
                  

                   
                  
                                  
                  
                
 
                  

            
 
            
            
                       
                
                     
                       
                       
                       
                       
                    
                      
                      
                      
                      
                      
                      
                      
                
             
                    
 
            
            
     
               
                  

               
                  

        
    


`line 6767 "/tmp/lm32-customizer/tmp.v"

always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        i_cyc_o <=  1'b0;
        i_stb_o <=  1'b0;
        i_adr_o <= { 32{1'b0}};
        i_cti_o <=  3'b111;
        i_lock_o <=  1'b0;
        wb_data_f <= { 32{1'b0}};
  
          

`line 6780 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin   
        
        if (i_cyc_o ==  1'b1)
        begin
            
            if((i_ack_i ==  1'b1) || (i_err_i ==  1'b1))
            begin
                
                i_cyc_o <=  1'b0;
                i_stb_o <=  1'b0;
                
                wb_data_f <= i_dat_i;
            end
  
               
            
                  
                  
            

`line 6802 "/tmp/lm32-customizer/tmp.v"

        end
        else
        begin
            
            if (   (stall_a ==  1'b0) 
   
                   

`line 6810 "/tmp/lm32-customizer/tmp.v"
       
               )
            begin
                
       
                  

`line 6816 "/tmp/lm32-customizer/tmp.v"

                i_adr_o <= {pc_a, 2'b00};
                i_cyc_o <=  1'b1;
                i_stb_o <=  1'b1;
  
                  

`line 6822 "/tmp/lm32-customizer/tmp.v"

            end
	    else
	    begin
	        if (   (stall_a ==  1'b0) 
   
		       

`line 6829 "/tmp/lm32-customizer/tmp.v"
       
	           )
		begin
  
		      

`line 6834 "/tmp/lm32-customizer/tmp.v"

		end
	    end
        end
    end
end
 
`line 6840 "/tmp/lm32-customizer/tmp.v"

 
`line 6841 "/tmp/lm32-customizer/tmp.v"



always @(posedge clk_i  )
begin
    if (rst_i ==  1'b1)
    begin
        instruction_d <= { 32{1'b0}};
  
          

`line 6851 "/tmp/lm32-customizer/tmp.v"

    end
    else
    begin
        if (stall_d ==  1'b0)
        begin
            instruction_d <= instruction_f;
  
              

`line 6860 "/tmp/lm32-customizer/tmp.v"

        end
    end
end  
  
endmodule




























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"


  

                              
                              
                              


                          
                  
                 
              
             
                    
                        
                        


                  
         
          
          
          
          
          
      
      
         





  
    
    
    
     
    
    
    
 
    
    
    
    

 
    
    

 
    

    
 
    
    

 
    
    
    
    
    
    
    

 
    
    

    
    
    





                                             
                                             

                                          
                                       
                        
                              

 
                                
                                  
                    
                                           

 
                    
                              

 
                                     





       
 
                
    
                
    

 
                            
    
              
    
                          
    
                                 
    
                                
    
                  
            
                     
    

 
                                       
    
                                       
    

  
     
  
    
             




                           
                         
                       
                     



     
  

                  
        
                       
        
                       


               
 
         
  
  
  
  
                          


         





 
      
   
      
   

                 

                  
             

   

 
   

   


                  
     
     
         
                 




   
   



   

       
    
          
          
          
          
    
    
    
          
          
          
          
    



   

       
    
          
          
          
 
          
          
          
          

 
          
          

                  
          
          
          
          

    
    
    
                  
               
        
             
            
            
                
                  
                  
            
            
            
                
                  
            
            
        

 
        
           
        
              
              
        

         
        
        
            
                 
            
                                  
                 
 
                
                
                     
 
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                              
                          
                    
                    
                          
                    
                    
                    
      
                              
                                   

                          
                    
                    
                    
      
                              
                                   

                          
                    
                                                   
                

                  
                
                
                      
                      
                                    
                
                
                      
                      
                

                
                    
                                
            
        
 
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                  
            
        
        
        
                 
            
                  
                   
                      
                 
                      
            
        
        
        
                 
            
                  
                  
            
        
        
        
             
            
            
            
                  
                  
                  
            
            
            
            
                  
                  
                  
            
            
            
                  
                  
                  
            
            
        
        
        
               
                      
                  
                  
                    
                  
                  
            
            
        
        
              
              
              
            

        
    

  



`line 7334 "/tmp/lm32-customizer/tmp.v"





























  
`line 1 "src/lm32_include.v"

`line 1 "src/lm32_include.v"































  
`line 32 "src/lm32_include.v"

 
 


 

 

     
    
   
  



 
 


                  
                    
                 
                   
           
             


                   
               
                 


                      
                      
                      


 
                    

 
                    

                    


                      


           
             


                
           


              
               


 
 

 
 




 
 

 
 





 
 
 
 
 

 

 


 
 

 
 




 
 

 
 

 
 



 
 

 
 



                    


                


             
               
                 
                 
                
               
                
                
                
                


                  
                    
                   
                  
                   
          


 
                   
                     

 
                   
                     

                   
                     




                      
                      
                      
                     
                     
                      
                     
                     
 
                      
                    

                    
 
                     
                     

 
                     
                     
                     
                     
                     
                     
                     
                     
 


                   
              
                  
                 
            


                   
                     
                   
              
          
              
          
          
               
                   



           
         
       

           
          
         
     

            
              


 
 

 
 








                   
             
               






                  
                    
                 
                   


                   
                   
                   
                   


                  
                  


 






                 
                   
               
              
          
                   


                 
                   
                
                
                
               


`line 314 "src/lm32_include.v"


`line 315 "/tmp/lm32-customizer/tmp.v"






module lm32_interrupt_minimal (
    
    clk_i, 
    rst_i,
    
    interrupt,
    
    stall_x,
  
    
    

`line 7380 "/tmp/lm32-customizer/tmp.v"

    exception,
 
`line 7382 "/tmp/lm32-customizer/tmp.v"

    eret_q_x,
  
    

`line 7386 "/tmp/lm32-customizer/tmp.v"

    csr,
    csr_write_data,
    csr_write_enable,
    
    interrupt_exception,
    
    csr_read_data
    );





parameter interrupts =  32;         





input clk_i;                                    
input rst_i;                                    

input [interrupts-1:0] interrupt;               

input stall_x;                                  

  
                       
                           

`line 7416 "/tmp/lm32-customizer/tmp.v"

input exception;                                
 
`line 7418 "/tmp/lm32-customizer/tmp.v"

input eret_q_x;                                 
  
                                  

`line 7422 "/tmp/lm32-customizer/tmp.v"


input [ (3-1):0] csr;                      
input [ (32-1):0] csr_write_data;          
input csr_write_enable;                         





output interrupt_exception;                     
wire   interrupt_exception;

output [ (32-1):0] csr_read_data;          
reg    [ (32-1):0] csr_read_data;





wire [interrupts-1:0] asserted;                 

wire [interrupts-1:0] interrupt_n_exception;



reg ie;                                         
reg eie;                                        
  
                                         

`line 7452 "/tmp/lm32-customizer/tmp.v"

reg [interrupts-1:0] ip;                        
reg [interrupts-1:0] im;                        






assign interrupt_n_exception = ip & im;


assign interrupt_exception = (|interrupt_n_exception) & ie;


assign asserted = ip | interrupt;
       
assign ie_csr_read_data = {{ 32-3{1'b0}}, 
  
                           

`line 7472 "/tmp/lm32-customizer/tmp.v"

                           1'b0,
 
`line 7474 "/tmp/lm32-customizer/tmp.v"
                             
                           eie, 
                           ie
                          };
assign ip_csr_read_data = ip;
assign im_csr_read_data = im;
generate
    if (interrupts > 1) 
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                    

`line 7490 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                     
 
`line 7492 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
     3'h1:  csr_read_data = im;
    default:       csr_read_data = { 32{1'bx}};
    endcase
end
    end
    else
    begin

always @(*)
begin
    case (csr)
     3'h0:  csr_read_data = {{ 32-3{1'b0}}, 
  
                                     

`line 7511 "/tmp/lm32-customizer/tmp.v"

                                    1'b0,                                    
 
`line 7513 "/tmp/lm32-customizer/tmp.v"

                                    eie, 
                                    ie
                                   };
     3'h2:  csr_read_data = ip;
    default:       csr_read_data = { 32{1'bx}};
      endcase
end
    end
endgenerate
    




  
`line 7528 "/tmp/lm32-customizer/tmp.v"

   reg [ 10:0] eie_delay  = 0;

   
generate

   
    if (interrupts > 1)
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie                   <=  1'b0;
        eie                  <=  1'b0;
  
                           

`line 7546 "/tmp/lm32-customizer/tmp.v"

        im                   <= {interrupts{1'b0}};
        ip                   <= {interrupts{1'b0}};
       eie_delay             <= 0;
       
    end
    else
    begin
        
        ip                   <= asserted;
  
           
        
            
                           
                            
        
            
        
            
                           
                            
        

`line 7569 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie              <= ie;
            ie               <=  1'b0;
        end
 
`line 7576 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
        begin

           if(eie_delay[0])
             ie              <= eie;
           
           eie_delay         <= {1'b0, eie_delay[ 10:1]};

            if (eret_q_x ==  1'b1) begin
                
               eie_delay[ 10] <=  1'b1;
               eie_delay[ 10-1:0] <= 0;
            end
           
                      
           
  
                
                
                       

`line 7597 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7607 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h1)
                    im  <= csr_write_data[interrupts-1:0];
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
else
    begin

always @(posedge clk_i  )
  begin
    if (rst_i ==  1'b1)
    begin
        ie              <=  1'b0;
        eie             <=  1'b0;
  
                      

`line 7629 "/tmp/lm32-customizer/tmp.v"

        ip              <= {interrupts{1'b0}};
       eie_delay        <= 0;
    end
    else
    begin
        
        ip              <= asserted;
  
           
        
            
                      
                       
        
            
        
            
                      
                       
        

`line 7650 "/tmp/lm32-customizer/tmp.v"

        if (exception ==  1'b1)
        begin
            
            eie         <= ie;
            ie          <=  1'b0;
        end
 
`line 7657 "/tmp/lm32-customizer/tmp.v"

        else if (stall_x ==  1'b0)
          begin

             if(eie_delay[0])
               ie              <= eie;
           
             eie_delay         <= {1'b0, eie_delay[ 10:1]};

             if (eret_q_x ==  1'b1) begin
                
                eie_delay[ 10] <=  1'b1;
                eie_delay[ 10-1:0] <= 0;
             end
           
  
                
                
                       

`line 7676 "/tmp/lm32-customizer/tmp.v"

            else if (csr_write_enable ==  1'b1)
            begin
                
                if (csr ==  3'h0)
                begin
                    ie  <= csr_write_data[0];
                    eie <= csr_write_data[1];
  
                      

`line 7686 "/tmp/lm32-customizer/tmp.v"

                end
                if (csr ==  3'h2)
                    ip  <= asserted & ~csr_write_data[interrupts-1:0];
            end
        end
    end
end
    end
endgenerate

endmodule


