-- -*- Mode: LUA; tab-width: 2 -*-

peripheral {
	 name = "Virtual UART";
	 description = "A simple Wishbone FIFO that acts as UART";
	 prefix = "UART";
	 hdl_entity = "wb_virtual_uart_slave";

	 reg {
			name = "Status Register";
			prefix = "SR";
			
			field {
				 name = "TX busy";
				 description = "1: UART is busy transmitting a byte\n0: UART is idle and ready to transmit next byte";
				 prefix = "TX_BUSY";
				 type = BIT;
				 access_bus = READ_ONLY;
				 access_dev = WRITE_ONLY;
			};

			field {
				 name = "RX ready";
				 description = "1: UART received a byte and its in RXD register\n0: no data in RXD register";

				 prefix = "RX_RDY";
				 type = BIT;
				 access_bus = READ_ONLY;
				 access_dev = WRITE_ONLY;
			};
			
	 };

	 reg {
			name = "Baudrate control register";
			description = "Register controlling the UART baudrate";
			prefix = "BCR";

			field {
				 name = "Baudrate divider setting";
				 description = "Baudrate setting. The value can be calculated using the following equation:\
				 BRATE = ((Baudrate * 8) << 9 + (ClockFreq >> 8)) / (ClockFreq >> 7)";
				 size = 32;
				 type = SLV;
				 access_bus = READ_WRITE;
				 access_dev = READ_ONLY;
			};
	 };

	 reg {
			name = "Transmit data regsiter";
			prefix = "TDR";
			
			field {
				 name = "Transmit data";
				 prefix = "TX_DATA";
				 size = 8;
				 type = SLV;
				 access_bus = READ_WRITE;
				 access_dev = READ_WRITE;
				 load = LOAD_EXT;
			};
	 };
	 
	 reg {
			name = "Receive data regsiter";
			prefix = "RDR";
			

			field {
				 ack_read = "rdr_rack_o";
				 name = "Received data";
				 prefix = "RX_DATA";
				 size = 8;
				 type = SLV;
				 access_bus = READ_ONLY;
				 access_dev = WRITE_ONLY;
			};
	 };

  fifo_reg {
		size = 2048;
		direction = CORE_TO_BUS;
		prefix = "debug";
		name = "UART TX FIFO";
		description = "This FIFO holds the TX chars that UART tries to send away";
		flags_bus = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT};
		flags_dev = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT};
		
		field {
			name = "Char sent by UART to TX";
			prefix = "tx";
			type = SLV;
			size = 8;
		};

		field {
			name = "Dupa";
			prefix = "dupa";
			type = SLV;
			size = 32;
		};

	};
};
